{"compress":true,"commitItems":[["a5d9bcec-1729-4e36-a27d-717af35e9db0",1567038997817,"",[[1567038945716,["GJX@GJXAIOU",[[1,0,"# Mybatis3\n\n\n\n"]],[0,0],[13,13]]],[1567060892729,["GJX@GJXAIOU",[[1,13,"## 一、简介"]],[13,13],[20,20]]],[1567060893350,["GJX@GJXAIOU",[[1,21,"\n"]],[20,20],[21,21]]],[1567060895010,["GJX@GJXAIOU",[[-1,21,"\n"],[1,22,"针对"]],[21,21],[23,23]]],[1567060905467,["GJX@GJXAIOU",[[1,23,"于数据库的粉状"]],[23,23],[30,30]]],[1567060906135,["GJX@GJXAIOU",[[-1,28,"粉状"]],[30,30],[28,28]]],[1567060917935,["GJX@GJXAIOU",[[1,28,"封装，省去书写D"]],[28,28],[36,36]]],[1567060917959,["GJX@GJXAIOU",[[1,35," "]],[36,36],[37,37]]],[1567060918375,["GJX@GJXAIOU",[[1,37,"ao"]],[37,37],[39,39]]],[1567060924184,["GJX@GJXAIOU",[[1,39,"Impl的"]],[39,39],[44,44]]],[1567060924207,["GJX@GJXAIOU",[[1,43," "]],[44,44],[45,45]]],[1567060926068,["GJX@GJXAIOU",[[1,45,"步骤；"]],[45,45],[48,48]]],[1567060926344,["GJX@GJXAIOU",[[1,48,"\n\n"]],[48,48],[49,49]]],[1567061066742,["GJX@GJXAIOU",[[1,50,"\n"]],[49,49],[50,50]]],[1567061066871,["GJX@GJXAIOU",[[1,51,"\n"]],[50,50],[51,51]]],[1567061066990,["GJX@GJXAIOU",[[1,52,"\n"]],[51,51],[52,52]]],[1567061067103,["GJX@GJXAIOU",[[1,53,"\n"]],[52,52],[53,53]]],[1567061067215,["GJX@GJXAIOU",[[1,54,"\n"]],[53,53],[54,54]]],[1567061067343,["GJX@GJXAIOU",[[1,55,"\n"]],[54,54],[55,55]]],[1567061067475,["GJX@GJXAIOU",[[1,56,"\n"]],[55,55],[56,56]]],[1567061067591,["GJX@GJXAIOU",[[1,57,"\n"]],[56,56],[57,57]]],[1567061067720,["GJX@GJXAIOU",[[1,58,"\n"]],[57,57],[58,58]]],[1567061067838,["GJX@GJXAIOU",[[1,59,"\n"]],[58,58],[59,59]]],[1567061067977,["GJX@GJXAIOU",[[1,60,"\n"]],[59,59],[60,60]]],[1567061068087,["GJX@GJXAIOU",[[1,61,"\n"]],[60,60],[61,61]]],[1567061068231,["GJX@GJXAIOU",[[1,62,"\n"]],[61,61],[62,62]]],[1567061068343,["GJX@GJXAIOU",[[1,63,"\n"]],[62,62],[63,63]]],[1567061068491,["GJX@GJXAIOU",[[1,64,"\n"]],[63,63],[64,64]]],[1567061068623,["GJX@GJXAIOU",[[1,65,"\n"]],[64,64],[65,65]]],[1567061281960,["GJX@GJXAIOU",[[1,66,"\n"]],[54,54],[55,55]]],[1567061282459,["GJX@GJXAIOU",[[1,67,"\n"]],[55,55],[56,56]]],[1567061282491,["GJX@GJXAIOU",[[1,68,"\n"]],[56,56],[57,57]]],[1567061282525,["GJX@GJXAIOU",[[1,69,"\n"]],[57,57],[58,58]]],[1567061282558,["GJX@GJXAIOU",[[1,70,"\n"]],[58,58],[59,59]]],[1567061282591,["GJX@GJXAIOU",[[1,71,"\n"]],[59,59],[60,60]]],[1567061282625,["GJX@GJXAIOU",[[1,72,"\n"]],[60,60],[61,61]]],[1567061282660,["GJX@GJXAIOU",[[1,73,"\n"]],[61,61],[62,62]]],[1567061282693,["GJX@GJXAIOU",[[1,74,"\n"]],[62,62],[63,63]]],[1567061282726,["GJX@GJXAIOU",[[1,75,"\n"]],[63,63],[64,64]]],[1567061282757,["GJX@GJXAIOU",[[1,76,"\n"]],[64,64],[65,65]]],[1567061282790,["GJX@GJXAIOU",[[1,77,"\n"]],[65,65],[66,66]]],[1567061282823,["GJX@GJXAIOU",[[1,78,"\n"]],[66,66],[67,67]]],[1567061282856,["GJX@GJXAIOU",[[1,79,"\n"]],[67,67],[68,68]]],[1567061541313,["GJX@GJXAIOU",[[1,2,"FrameDay01 "]],[2,2],[13,13]]]],null,"GJX@GJXAIOU"],["af90f203-043c-456e-8f19-ec62a530aab6",1567077820134,"# FrameDay01 Mybatis3\n\n\n## 一、简介\n针对于数据库的封装，省去书写 DaoImpl 的步骤；\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1567077782414,["GJX@GJXAIOU",[[1,61,"**[**今日课程大纲**]**\n\n高级软件介绍**(**部分**)**\n\n**MySql** 数据库建库建表语句强调命名规范强调\n\n基于 **MVC** 开发模式完成单表查询和新增\n\n**Eclipse** 中项目默认发布路径高级课程大纲介绍\n\n框架是什么\n\n**MyBatis** 简介\n\n**MyBatis** 搭建流程\n\n数据库连接池和 **JNDI** 复习\n\n搭 建 流 程 详 解 **(** 全 局 配 置 文 件 **,resultType** 原 理 及\n\n**AutoMapping** 等**)**\n\n**MyBatis** 三种查询方式\n\n**[**知识点详解**]**\n\n一**.**高级软件介绍\n\n1. JDK  7\n\n2. Eclipse  mars2\n\n3. MySql\n\n4. Navicat\n\n二**.**数据库 **SQL** 命令\n\n |  |\n|  | ![文本框: Create database 数据库名 default character set utf8](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image001.gif) | \n1 创建数据库并指定编码\n\n2.创建表\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image002.gif)\n\n三.Eclipse 使用\n\n1. 创建项目\n\n1.1 选择 target  runtime,否则出现新建 jsp 报错\n\n1.2 如果忘记选择,右键项目--> build  path --> configure  path -->选项卡 library --> 第四个 add  library --> server  runtime\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg)\n\n2. Eclipse 默认会自己下载所需 tomcat 最简单结构.\n\n# 三**.**命名规范\n\n1.项目名:没有要求,不起中文\n\n2.包:公司域名倒写 com.bjsxt\n\n3.数据访问层:dao, persist, **mapper**\n\n4.实体:entity, model, bean,javabean, **pojo**\n\n5. 业 务 逻 辑 : **service ,**biz 6.控制器: controller, **servlet**,action,web\n\n7.过滤器: filter\n\n8.异常: exception\n\n9.监听器:listener\n\n10.注释:\n\n10.1 类上和方法上使用文档注释 /** */\n\n10.2 在方法里面使用/* */ 或 // 11.类: 大驼峰\n\n12.方法,属性:小驼峰\n\n四**.MVC** 开发模式\n\n1. M: Model 模型,实体类和业务和 dao\n\n2. V: view 视图 现在使用. JSP\n\n3. C:Controller 控制器,现在使用servlet\n\n3.1 作用:视图和逻辑分离\n\n4. MVC 适用场景:大型项目开发.\n\n5. 图示例\n\n5.1 先设计数据库\n\n5.2 再写实体类\n\n5.3 持久层DAO\n\n5.4 业务逻辑\n\n5.5 控制器\n\n5.6 ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image005.gif)视图\n\n |  |\n|  | ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.gif) | \n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image008.gif)\n\n# 五**.**高级课程大纲介绍\n\n1. 正课时间 46 天(9 周零 1 天)\n\n2. 高级分为 3 部分:\n\n2.1 第一部分:SSM 框架.11 天+5 天项目\n\n2.1.1 MyBatis: 数据访问层框架2.1.2\n\nSpring 框架:作用：IoC,AOP\n\n2.1.3 SpringMVC 框架:对 Servlet 封装\n\n2.2 第二部分:分布式项目开发(Ego) 6 天+14 天+5 天\n\n2.3 第三部分:SSH 框架 5 天\n\n六**.**框架是什么**?**\n\n1. 框架:软件的半成品.未解决问题制定的一套约束,在提供功能基础上进行扩充.\n\n2. 框架中一些不能被封装的代码(变量),需要使用框架者新建一个\n\nxml 文件,在文件中添加变量内容.\n\n2.1 需要建立特定位置和特定名称的配置文件.\n\n2.2 需要使用 xml 解析技术和反射技术.\n\n3. 常用概念\n\n3.1 类库:提供的类没有封装一定逻辑.\n\n举例:类库就是名言警句,写作文时引入名言警句\n\n3.2 框架:区别于类库,里面有一些约束. 举例:框架是填空题\n\n七**.MyBatis** 简介\n\n1. Mybatis 开源免费框架.原名叫 iBatis,2010 在 google  code,2013 年迁移到 github\n\n2. 作用: 数据访问层框架.\n\n2.1 底层是对 JDBC 的封装.\n\n3. mybatis 优点之一:\n\n3.1 使用 mybatis 时不需要编写实现类,只需要写需要执行的 sql 命\n\n令\n\n八**.** 环境搭建\n\n1.     |  |  |  |  |\n|  |  | ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image010.gif) |\n|  | ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image009.jpg) |\n|  | \n导入 jar\n\n2. 在 src 下新建全局配置文件(编写 JDBC 四个变量)\n\n2.1 没有名称和地址要求\n\n2.2 在全局配置文件中引入 DTD 或 schema\n\n2.2.1 如果导入 dtd 后没有提示\n\nWindow--> preference --> XML --> XMl catalog --> add 按钮\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image011.jpg)\n\n2.3     |  |\n|  | ![文本框: <?xml  version=\"1.0\"  encoding=\"UTF-8\"?>\n<!DOCTYPE  configuration\nPUBLIC  \"-//mybatis.org//DTD  Config  3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n<!--  default 引用 environment 的 id,当前所使用的环境  -->\n<environments  default=\"default\">\n<!--  声明可以使用的环境  -->\n<environment  id=\"default\">\n<!--  使用原生 JDBC 事务  -->\n<transactionManager  type=\"JDBC\"></transactionManager>\n<dataSource  type=\"POOLED\">\n<property  name=\"driver\"  value=\"com.mysql.jdbc.Driver\"/>\n<property  name=\"url\"  value=\"jdbc:mysql://localhost:3306/ssm\"/>\n<property  name=\"username\"  value=\"root\"/>\n<property  name=\"password\"  value=\"smallming\"/>\n</dataSource>\n</environment>\n</environments>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image012.gif) | \n全局配置文件内容\n\n![文本框: <mappers>\n<mapper  resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n</mappers>\n</configuration>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image013.gif)\n\n3. 新建以 mapper 结尾的包,在包下新建:实体类名+Mapper.xml\n\n3.1 文件作用:编写需要执行的 SQL 命令\n\n3.2 把 xml 文件理解成实现类.\n\n3.3   |  |\n|  | ![文本框: <?xml  version=\"1.0\"  encoding=\"UTF-8\"?>\n\n<!DOCTYPE  mapper\n\nPUBLIC  \"-//mybatis.org//DTD  Mapper  3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!--  namesapce:理解成实现类的全路径(包名+类名)  -->\n<mapper  namespace=\"a.b\"  >\n<!--  id:方法名\nparameterType:定义参数类型\nresultType:返回值类型.\n\n如果方法返回值是 list,在 resultType 中写 List 的泛型,因为 mybatis\n对 jdbc 封装,一行一行读取数据\n-->\n\n<select  id=\"selAll\"\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image014.gif) | \nxml 文件内容\n\n![文本框: resultType=\"com.bjsxt.pojo.Flower\"> select  *  from  flower\n</select>\n\n</mapper>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image015.gif)\n\n4. 测试结果(只有在单独使用 mybatis 时使用,最后 ssm 整合时下面代\n\n |  |\n|  | ![文本框: InputStream  is  = Resources.getResourceAsStream(\"myabtis.xml\");\n//使用工厂设计模式\nSqlSessionFactory  factory  =  new\n\nSqlSessionFactoryBuilder().build(is);\n//生产 SqlSession\nSqlSession  session=factory.openSession();\n\nList<Flower>  list  = session.selectList(\"a.b.selAll\");\nfor  (Flower  flower  :  list)  { System.out.println(flower.toString());\n}\n\nsession.close();\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image016.gif) | \n码不需要编写.)\n\n九**.** 环境搭建详解\n\n1.全局配置文件中内容\n\n1.1 <transactionManager/> type 属性可取值\n\n1.1.1 JDBC,事务管理使用 JDBC 原生事务管理方式\n\n1.1.2 MANAGED 把事务管理转交给其他容器.相当于设置原生\n\nJDBC 事务setAutoMapping(false);\n\n1.2 <dataSouce/>type 属性可取值：\n\n1.2.1 POOLED 使用数据库连接池\n\n1.2.2 UNPOOLED 不使用数据库连接池,和直接使用 JDBC 一样\n\n1.2.3 JNDI  :java 命名目录接口技术.\n\n# 十**.**数据库连接池\n\n1.在内存中开辟一块空间,存放多个数据库连接对象. 2.JDBC Tomcat Pool,直接由 tomcat 产生数据库连接池. 3.图示\n\n3.1  active 活跃状态:当前连接对象被应用程序使用中3.2  Idle 空闲状态:等待应用程序使用\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image021.gif)\n\n4.使用数据库连接池的目的\n\n4.1 在高频率访问数据库时,使用数据库连接池可以降低服务器系统压力,提升程序运行效率.\n\n4.1.1 小型项目不适用数据库连接池.\n\n5.实现 JDBC tomcat Pool 的步骤.\n\n5.1 在 web 项目的 META-INF 中存放 context.xml,在 context.xml 编写数据库连接池相关属性\n\n![文本框: <?xml  version=\"1.0\"  encoding=\"UTF-8\"?>\n\n<Context>\n\n<Resource\ndriverClassName=\"com.mysql.jdbc.Driver\" url=\"jdbc:mysql://localhost:3306/ssm\" username=\"root\"\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image022.gif)\n\n![文本框: password=\"smallming\" maxActive=\"50\" maxIdle=\"20\" name=\"test\"\n// 表示该数据库连接池由Tomcat管理\nauth=\"Container\" maxWait=\"10000\"\n/>type=\"javax.sql.DataSource\"\n</Context>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image023.gif)\n\n5.2 把项目发布到 tomcat 中,则数据库连接池产生了\n\n6.可以在 java 中使用 jndi 获取数据库连接池中对象\n\n6.1 Context:上下文接口.context.xml 文件对象类型\n\n6.2     |  |\n|  | ![文本框: Context  cxt  =  new  InitialContext(); DataSource  ds  =  (DataSource)\ncxt.lookup(\"java:comp/env/test\");\n\nConnection  conn  =  ds.getConnection();\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image024.gif) | \n代码:\n\n6.3 当关闭连接对象时,把连接对象归还给数据库连接池,把状态\n\n改变成 Idle\n\n# 十一**.** 三种查询方式\n\n1. selectList() 返回值为 List<resultType  属性控制>\n\n1.1     |  |\n|  | ![文本框: List<Flower>  list  =  session.selectList(\"a.b.selAll\");\n\nfor  (Flower  flower  :  list)  { System.out.println(flower.toString());\n}\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image025.gif) | \n适用于查询结果都需要遍历的需求\n\n2. selectOne() 返回值 Object,\n\n2.1     |  |\n|  | ![文本框: int  count  =  session.selectOne(\"a.b.selById\");\n\nSystem.out.println(count);\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image026.gif) | \n适用于返回结果只是变量或一行数据时\n\n3. selectMap() 返回值 Map\n\n3.1 适用于需要在查询结果中通过某列的值取到这行数据的需求.\n\n3.2 ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image027.gif)Map<key,resultType  控制>\n\nMap<Object,  Object> map = session.selectMap(\"a.b.c\",  \"name\"); System.**_o_****_u_****_t_**.println(map);"]],[61,61],[7548,7548]]],[1567077827765,["GJX@GJXAIOU",[[-1,61,"**[**今日课程大纲**]**\n\n高级软件介绍**(**部分**)**\n\n**MySql** 数据库建库建表语句强调命名规范强调\n\n基于 **MVC** 开发模式完成单表查询和新增\n\n**Eclipse** 中项目默认发布路径高级课程大纲介绍\n\n框架是什么\n\n**MyBatis** 简介\n\n**MyBatis** 搭建流程\n\n数据库连接池和 **JNDI** 复习\n\n搭 建 流 程 详 解 **(** 全 局 配 置 文 件 **,resultType** 原 理 及\n\n**AutoMapping** 等**)**\n\n**MyBatis** 三种查询方式\n\n**[**知识点详解**]**\n\n一**.**高级软件介绍\n\n1. JDK  7\n\n2. Eclipse  mars2\n\n3. MySql\n\n4. Navicat\n\n"]],[60,426],[60,60]]],[1567077852589,["GJX@GJXAIOU",[[-1,63,"*.**"]],[67,67],[63,63]]],[1567077854142,["GJX@GJXAIOU",[[-1,67,"**"]],[69,69],[67,67]]],[1567077855540,["GJX@GJXAIOU",[[-1,70,"** "]],[73,73],[70,70]]],[1567077856852,["GJX@GJXAIOU",[[-1,61,"二*"]],[63,63],[61,61]]],[1567077858550,["GJX@GJXAIOU",[[1,61,"## "]],[61,61],[73,73]]],[1567077859411,["GJX@GJXAIOU",[[1,73,"二"],[-1,74,""],[-1,2091,"    "],[1,2095,"    "],[-1,2545,"    "],[1,2549,"    "],[-1,3604,"  "],[1,3606,"  "],[-1,6051,"    "],[1,6055,"    "],[-1,6417,"    "],[1,6421,"    "],[-1,6702,"    "],[1,6706,"    "]],[73,73],[74,74]]],[1567077859720,["GJX@GJXAIOU",[[1,74,"、"]],[74,74],[75,75]]],[1567077860580,["GJX@GJXAIOU",[[-1,73,"二、"]],[75,75],[73,73]]],[1567077864319,["GJX@GJXAIOU",[[1,64,"二、"]],[64,64],[66,66]]],[1567077867853,["GJX@GJXAIOU",[[1,76,"Create database 数据库名 default character set utf8"]],[76,76],[123,123]]],[1567077869490,["GJX@GJXAIOU",[[1,76,"·"]],[76,76],[77,77]]],[1567077870734,["GJX@GJXAIOU",[[-1,76,"·"]],[77,77],[76,76]]],[1567077871118,["GJX@GJXAIOU",[[1,76,"`"]],[76,76],[77,77]]],[1567077872345,["GJX@GJXAIOU",[[1,124,"`"]],[124,124],[125,125]]],[1567077896484,["GJX@GJXAIOU",[[-1,127,"|  |\n|  | ![文本框: Create database 数据库名 default character set utf8](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image001.gif) | "]],[126,271],[126,126]]],[1567077899845,["GJX@GJXAIOU",[[1,76,"\n"]],[76,76],[77,77]]],[1567077902030,["GJX@GJXAIOU",[[-1,129,"1 创建数据库并指定编码"]],[129,141],[129,129]]],[1567077903486,["GJX@GJXAIOU",[[1,76,"1 创建数据库并指定编码"]],[76,76],[88,88]]],[1567077905460,["GJX@GJXAIOU",[[-1,76,"1 "],[1,78,"\n"]],[76,78],[77,77]]],[1567077905910,["GJX@GJXAIOU",[[1,77,"- "]],[77,77],[79,79]]],[1567077909293,["GJX@GJXAIOU",[[-1,144,"2."]],[146,146],[144,144]]],[1567077909423,["GJX@GJXAIOU",[[-1,143,"\n"]],[144,144],[143,143]]],[1567077909524,["GJX@GJXAIOU",[[-1,142,"\n"]],[143,143],[142,142]]],[1567077909661,["GJX@GJXAIOU",[[-1,141,"\n"]],[142,142],[141,141]]],[1567077911032,["GJX@GJXAIOU",[[1,141,"\n - "]],[141,141],[145,145]]],[1567077916005,["GJX@GJXAIOU",[[-1,150,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image002.gif)"]],[150,230],[150,150]]],[1567077916220,["GJX@GJXAIOU",[[-1,151,"\n"]],[150,150],[149,149]]],[1567077918015,["GJX@GJXAIOU",[[1,149,"```"]],[149,149],[152,152]]],[1567077918051,["GJX@GJXAIOU",[[1,152,"language\n```\n"]],[152,152],[152,160]]],[1567077919223,["GJX@GJXAIOU",[[-1,152,"language"],[1,160,"j"]],[152,160],[153,153]]],[1567077919639,["GJX@GJXAIOU",[[1,153,"ava"]],[153,153],[156,156]]],[1567077919735,["GJX@GJXAIOU",[[1,157,"\n"]],[156,156],[157,157]]],[1567077929755,["GJX@GJXAIOU",[[1,157,"Createtable baio"]],[157,157],[173,173]]],[1567077930589,["GJX@GJXAIOU",[[-1,169,"baio"]],[173,173],[169,169]]],[1567077934630,["GJX@GJXAIOU",[[1,169,"表名()"]],[169,169],[173,173]]],[1567077936718,["GJX@GJXAIOU",[[1,172,"\n"]],[172,172],[173,173]]],[1567077936853,["GJX@GJXAIOU",[[1,173,"\n"]],[173,173],[174,174]]],[1567077938335,["GJX@GJXAIOU",[[1,175,"；"]],[175,175],[176,176]]],[1567077939508,["GJX@GJXAIOU",[[-1,175,"；"]],[176,176],[175,175]]],[1567077939942,["GJX@GJXAIOU",[[1,175,";"]],[175,175],[176,176]]],[1567077941917,["GJX@GJXAIOU",[[1,173,"    "]],[173,173],[177,177]]],[1567077943381,["GJX@GJXAIOU",[[-1,176," "]],[177,177],[176,176]]],[1567077943854,["GJX@GJXAIOU",[[1,176,"li"]],[176,176],[178,178]]],[1567077944588,["GJX@GJXAIOU",[[-1,176,"li"]],[178,178],[176,176]]],[1567077957015,["GJX@GJXAIOU",[[1,176,"列名 类型 约束 s"]],[176,176],[186,186]]],[1567077957428,["GJX@GJXAIOU",[[-1,185,"s"]],[186,186],[185,185]]],[1567077957558,["GJX@GJXAIOU",[[1,185,"a"]],[185,185],[186,186]]],[1567077958052,["GJX@GJXAIOU",[[-1,185,"a"]],[186,186],[185,185]]],[1567077962959,["GJX@GJXAIOU",[[1,185,"auto_inv"]],[185,185],[193,193]]],[1567077963372,["GJX@GJXAIOU",[[-1,192,"v"]],[193,193],[192,192]]],[1567077974230,["GJX@GJXAIOU",[[1,192,"creament comment \"bi"]],[192,192],[212,212]]],[1567077974768,["GJX@GJXAIOU",[[-1,210,"bi"]],[212,212],[210,210]]],[1567077976894,["GJX@GJXAIOU",[[1,210,"备注\""]],[210,210],[213,213]]],[1567077992885,["GJX@GJXAIOU",[[-1,223,"三.Eclipse 使用\n\n1. 创建项目\n\n1.1 选择 target  runtime,否则出现新建 jsp 报错\n\n1.2 如果忘记选择,右键项目--> build  path --> configure  path -->选项卡 library --> 第四个 add  library --> server  runtime\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg)\n\n2. Eclipse 默认会自己下载所需 tomcat 最简单结构."]],[223,508],[223,223]]],[1567077993004,["GJX@GJXAIOU",[[-1,224,"\n"]],[223,223],[222,222]]],[1567077997470,["GJX@GJXAIOU",[[-1,227,"**.**"]],[232,232],[227,227]]],[1567077999961,["GJX@GJXAIOU",[[1,227,"/"]],[227,227],[228,228]]],[1567078001532,["GJX@GJXAIOU",[[-1,227,"/"]],[228,228],[227,227]]],[1567078002176,["GJX@GJXAIOU",[[1,227,"、"]],[227,227],[228,228]]],[1567078004941,["GJX@GJXAIOU",[[1,225,"#"]],[225,225],[233,233]]],[1567078011213,["GJX@GJXAIOU",[[-1,273,"\n"]],[273,273],[272,272]]],[1567078011988,["GJX@GJXAIOU",[[-1,251,"\n"]],[251,251],[250,250]]],[1567078012805,["GJX@GJXAIOU",[[-1,305,"\n"]],[305,305],[304,304]]],[1567078015821,["GJX@GJXAIOU",[[-1,349,"\n"]],[349,349],[348,348]]],[1567078016814,["GJX@GJXAIOU",[[-1,351," "]],[352,352],[351,351]]],[1567078021493,["GJX@GJXAIOU",[[1,378,"\n"]],[378,378],[379,379]]],[1567078023581,["GJX@GJXAIOU",[[-1,421,"\n"]],[421,421],[420,420]]],[1567078024188,["GJX@GJXAIOU",[[-1,435,"\n"]],[435,435],[434,434]]],[1567078024788,["GJX@GJXAIOU",[[-1,451,"\n"]],[451,451],[450,450]]],[1567078025391,["GJX@GJXAIOU",[[-1,466,"\n"]],[466,466],[465,465]]],[1567078025982,["GJX@GJXAIOU",[[-1,473,"\n"]],[473,473],[472,472]]],[1567078028623,["GJX@GJXAIOU",[[-1,477," 类上和方法上使用文档注释 /** */\n"]],[477,498],[477,477]]],[1567078031673,["GJX@GJXAIOU",[[1,477," 类上和方法上使用文档注释 /** */\n"]],[477,477],[477,498]]],[1567078034005,["GJX@GJXAIOU",[[-1,498,"\n"]],[498,498],[497,497]]],[1567078034620,["GJX@GJXAIOU",[[-1,531,"\n"]],[531,531],[530,530]]],[1567078038063,["GJX@GJXAIOU",[[1,521,"\n"]],[521,521],[522,522]]],[1567078143766,["GJX@GJXAIOU",[[-1,235,"1."]],[235,237],[235,235]]],[1567078145020,["GJX@GJXAIOU",[[-1,249,"2."]],[251,251],[249,249]]],[1567078145876,["GJX@GJXAIOU",[[-1,268,"3."]],[270,270],[268,268]]],[1567078146604,["GJX@GJXAIOU",[[-1,299,"4."]],[301,301],[299,299]]],[1567078147500,["GJX@GJXAIOU",[[-1,341,"5."]],[343,343],[341,341]]],[1567078148220,["GJX@GJXAIOU",[[-1,369,"6."]],[371,371],[369,369]]],[1567078149781,["GJX@GJXAIOU",[[-1,409,"7."]],[410,410],[409,409]]],[1567078150860,["GJX@GJXAIOU",[[-1,421,"8."]],[423,423],[421,421]]],[1567078151693,["GJX@GJXAIOU",[[-1,435,"9."]],[437,437],[435,435]]],[1567078153557,["GJX@GJXAIOU",[[-1,448,"10."]],[451,451],[448,448]]],[1567078154989,["GJX@GJXAIOU",[[-1,478,"0.2 "]],[482,482],[478,478]]],[1567078156374,["GJX@GJXAIOU",[[-1,452,"10.1 "]],[457,457],[452,452]]],[1567078157252,["GJX@GJXAIOU",[[-1,472,"1"]],[473,473],[472,472]]],[1567078158423,["GJX@GJXAIOU",[[-1,491,"11."]],[494,494],[491,491]]],[1567078159391,["GJX@GJXAIOU",[[-1,498,"12."]],[501,501],[498,498]]],[1567078159581,["GJX@GJXAIOU",[[-1,497,"\n"]],[498,498],[497,497]]],[1567078160957,["GJX@GJXAIOU",[[1,497,"\n"]],[497,497],[498,498]]],[1567078163790,["GJX@GJXAIOU",[[1,235,"* "],[1,249,"* "],[1,268,"* "],[1,299,"* "],[1,341,"* "],[1,369,"* "],[1,409,"* "],[1,421,"* "],[1,435,"* "],[1,448,"* "],[1,452,"* "],[1,472,"* "],[1,491,"* "],[1,498,"* "]],[235,507],[237,535]]],[1567078166413,["GJX@GJXAIOU",[[1,472,"  "]],[474,474],[476,476]]],[1567078167343,["GJX@GJXAIOU",[[1,496,"  "]],[498,498],[500,500]]],[1567078172751,["GJX@GJXAIOU",[[-1,548,"** "]],[551,551],[548,548]]],[1567078175381,["GJX@GJXAIOU",[[-1,542,"**."]],[545,545],[542,542]]],[1567078176559,["GJX@GJXAIOU",[[1,542,"/"]],[542,542],[543,543]]],[1567078177285,["GJX@GJXAIOU",[[-1,542,"/"]],[543,543],[542,542]]],[1567078178216,["GJX@GJXAIOU",[[1,542,"、"]],[542,542],[543,543]]],[1567078180204,["GJX@GJXAIOU",[[1,541,"## "]],[543,543],[553,553]]],[1567078182213,["GJX@GJXAIOU",[[-1,582,"\n"]],[582,582],[581,581]]],[1567078183117,["GJX@GJXAIOU",[[-1,606,"\n"]],[606,606],[605,605]]],[1567078183983,["GJX@GJXAIOU",[[-1,638,"\n"]],[638,638],[637,637]]],[1567078184709,["GJX@GJXAIOU",[[-1,653,"\n"]],[653,653],[652,652]]],[1567078186445,["GJX@GJXAIOU",[[1,638,"  "]],[638,638],[640,640]]],[1567078189525,["GJX@GJXAIOU",[[-1,675,"\n"]],[675,675],[674,674]]],[1567078201549,["GJX@GJXAIOU",[[-1,678,"图示例"]],[681,681],[678,678]]],[1567078213351,["GJX@GJXAIOU",[[1,678,"项目实现步骤："]],[678,678],[685,685]]],[1567078216968,["GJX@GJXAIOU",[[-1,687,"5.1 "]],[687,691],[687,687]]],[1567078217344,["GJX@GJXAIOU",[[1,687,"- "]],[687,687],[689,689]]],[1567078219798,["GJX@GJXAIOU",[[-1,697,"5.2 "]],[697,701],[697,697]]],[1567078220183,["GJX@GJXAIOU",[[1,697,"- "]],[697,697],[699,699]]],[1567078222885,["GJX@GJXAIOU",[[-1,706,"5.3 "]],[706,710],[706,706]]],[1567078223270,["GJX@GJXAIOU",[[1,706,"- "]],[706,706],[708,708]]],[1567078225821,["GJX@GJXAIOU",[[-1,716,"5.4 "]],[716,720],[716,716]]],[1567078226231,["GJX@GJXAIOU",[[1,716,"- "]],[716,716],[718,718]]],[1567078228861,["GJX@GJXAIOU",[[-1,715,"\n"]],[715,715],[714,714]]],[1567078229326,["GJX@GJXAIOU",[[-1,705,"\n"]],[705,705],[704,704]]],[1567078229965,["GJX@GJXAIOU",[[-1,696,"\n"]],[696,696],[695,695]]],[1567078230831,["GJX@GJXAIOU",[[-1,686,"\n"]],[686,686],[685,685]]],[1567078237469,["GJX@GJXAIOU",[[1,686,"  "],[1,695,"  "],[1,703,"  "],[1,712,"  "]],[686,718],[686,726]]],[1567078241461,["GJX@GJXAIOU",[[-1,677," "]],[678,678],[677,677]]],[1567078243141,["GJX@GJXAIOU",[[-1,657," "]],[658,658],[657,657]]],[1567078245125,["GJX@GJXAIOU",[[-1,608," "]],[609,609],[608,608]]],[1567078246719,["GJX@GJXAIOU",[[-1,584," "]],[585,585],[584,584]]],[1567078251800,["GJX@GJXAIOU",[[-1,555,"1. "]],[558,558],[555,555]]],[1567078252312,["GJX@GJXAIOU",[[1,555,"- "]],[555,555],[557,557]]],[1567078254453,["GJX@GJXAIOU",[[-1,581,"2."]],[583,583],[581,581]]],[1567078255544,["GJX@GJXAIOU",[[1,581,"- "]],[581,581],[583,583]]],[1567078257084,["GJX@GJXAIOU",[[-1,604,"3."]],[606,606],[604,604]]],[1567078257535,["GJX@GJXAIOU",[[1,604,"- "]],[604,604],[606,606]]],[1567078259768,["GJX@GJXAIOU",[[-1,638,".1"]],[640,640],[638,638]]],[1567078260034,["GJX@GJXAIOU",[[1,638,"-"]],[638,638],[639,639]]],[1567078261101,["GJX@GJXAIOU",[[-1,637,"3-"]],[639,639],[637,637]]],[1567078261858,["GJX@GJXAIOU",[[1,637,"-"]],[637,637],[638,638]]],[1567078263957,["GJX@GJXAIOU",[[-1,650,"4."]],[652,652],[650,650]]],[1567078264903,["GJX@GJXAIOU",[[1,650,"- "]],[650,650],[652,652]]],[1567078266412,["GJX@GJXAIOU",[[-1,669,"5."]],[671,671],[669,669]]],[1567078266904,["GJX@GJXAIOU",[[1,669,"- "]],[669,669],[671,671]]],[1567078290757,["GJX@GJXAIOU",[[-1,720,"\n"]],[720,720],[719,719]]],[1567078293477,["GJX@GJXAIOU",[[-1,720,"5.5 "]],[724,724],[720,720]]],[1567078294528,["GJX@GJXAIOU",[[1,720,"- "]],[720,720],[722,722]]],[1567078295365,["GJX@GJXAIOU",[[1,720,"  "]],[722,722],[724,724]]],[1567078306908,["GJX@GJXAIOU",[[-1,729,"5.6 ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image005.gif)视图\n\n |  |\n|  | ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.gif) | \n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image008.gif)\n"]],[733,994],[729,729]]],[1567078307332,["GJX@GJXAIOU",[[-1,729,"\n"]],[729,729],[728,728]]],[1567078307783,["GJX@GJXAIOU",[[-1,728,"\n"]],[728,728],[727,727]]],[1567078308751,["GJX@GJXAIOU",[[1,728,"  - \n"]],[727,727],[732,732]]],[1567078310088,["GJX@GJXAIOU",[[1,732,"试图"]],[732,732],[734,734]]],[1567078310688,["GJX@GJXAIOU",[[-1,732,"试图"]],[734,734],[732,732]]],[1567078313217,["GJX@GJXAIOU",[[1,732,"视图"]],[732,732],[734,734]]],[1567078314328,["GJX@GJXAIOU",[[1,735,"  - \n"]],[734,734],[739,739]]],[1567078314460,["GJX@GJXAIOU",[[-1,735,"  - "]],[739,739],[736,736]]],[1567078314612,["GJX@GJXAIOU",[[1,736,"\n"]],[736,736],[737,737]]],[1567078339754,["GJX@GJXAIOU",[[1,735,"![MVC开发模式]($resource/MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F.png)"]],[735,735],[801,801]]],[1567078345285,["GJX@GJXAIOU",[[-1,805,"**.**"]],[810,810],[805,805]]],[1567078346760,["GJX@GJXAIOU",[[1,805,"、"]],[805,805],[806,806]]],[1567078404972,["GJX@GJXAIOU",[[-1,802,"# 五、高级课程大纲介绍\n\n1. 正课时间 46 天(9 周零 1 天)\n\n2. 高级分为 3 部分:\n\n2.1 第一部分:SSM 框架.11 天+5 天项目\n\n2.1.1 MyBatis: 数据访问层框架2.1.2\n\nSpring 框架:作用：IoC,AOP\n\n2.1.3 SpringMVC 框架:对 Servlet 封装\n\n2.2 第二部分:分布式项目开发(Ego) 6 天+14 天+5 天\n\n2.3 第三部分:SSH 框架 5 天\n"]],[802,1023],[802,802]]],[1567078476004,["GJX@GJXAIOU",[[-1,803,"六**.**"]],[809,809],[803,803]]],[1567078477679,["GJX@GJXAIOU",[[1,803,"五、"]],[803,803],[805,805]]],[1567078481892,["GJX@GJXAIOU",[[-1,807,"是什么**?**"]],[815,815],[807,807]]],[1567078483432,["GJX@GJXAIOU",[[1,807,"概念"]],[807,807],[809,809]]],[1567078485935,["GJX@GJXAIOU",[[-1,851,"\n"]],[851,851],[850,850]]],[1567078489500,["GJX@GJXAIOU",[[-1,884,"\n"]],[885,885],[884,884]]],[1567078489901,["GJX@GJXAIOU",[[-1,883,"\n"]],[884,884],[883,883]]],[1567078495719,["GJX@GJXAIOU",[[1,854,"**"],[1,900,"**"]],[854,900],[854,904]]],[1567078506429,["GJX@GJXAIOU",[[-1,810,"\n"]],[810,810],[809,809]]],[1567078508688,["GJX@GJXAIOU",[[1,803,"## "]],[809,809],[812,812]]],[1567078513853,["GJX@GJXAIOU",[[-1,853,"2. "]],[853,856],[853,853]]],[1567078516639,["GJX@GJXAIOU",[[-1,813,"1. "]],[813,816],[813,813]]],[1567078517657,["GJX@GJXAIOU",[[1,813,"- "]],[813,813],[815,815]]],[1567078520229,["GJX@GJXAIOU",[[1,852,"\n"]],[852,852],[853,853]]],[1567078520711,["GJX@GJXAIOU",[[1,853,"- "]],[853,853],[855,855]]],[1567078527693,["GJX@GJXAIOU",[[-1,908,"2.1 "]],[912,912],[908,908]]],[1567078528068,["GJX@GJXAIOU",[[-1,907,"\n"]],[908,908],[907,907]]],[1567078529575,["GJX@GJXAIOU",[[1,907,"  - "]],[907,907],[911,911]]],[1567078533188,["GJX@GJXAIOU",[[-1,932,"2.2 "]],[936,936],[932,932]]],[1567078533508,["GJX@GJXAIOU",[[-1,931,"\n"]],[932,932],[931,931]]],[1567078535017,["GJX@GJXAIOU",[[1,931,"  - "]],[931,931],[935,935]]],[1567078557830,["GJX@GJXAIOU",[[-1,956,"3. "]],[959,959],[956,956]]],[1567078559007,["GJX@GJXAIOU",[[1,956,"- "]],[956,956],[958,958]]],[1567078561541,["GJX@GJXAIOU",[[-1,964,"3.1 "]],[964,968],[964,964]]],[1567078561976,["GJX@GJXAIOU",[[1,964,"- "]],[964,964],[966,966]]],[1567078565261,["GJX@GJXAIOU",[[-1,963,"\n"]],[963,963],[962,962]]],[1567078568158,["GJX@GJXAIOU",[[-1,956,"- "]],[956,958],[956,956]]],[1567078570854,["GJX@GJXAIOU",[[1,956,"**"],[1,960,"**"]],[956,960],[956,964]]],[1567078573655,["GJX@GJXAIOU",[[-1,984,"\n"]],[984,984],[983,983]]],[1567078576109,["GJX@GJXAIOU",[[-1,1008,"3.2"]],[1008,1011],[1008,1008]]],[1567078576319,["GJX@GJXAIOU",[[1,1008,"-"]],[1008,1008],[1009,1009]]],[1567078580236,["GJX@GJXAIOU",[[-1,1050,"** "]],[1053,1053],[1050,1050]]],[1567078582878,["GJX@GJXAIOU",[[1,1050," "]],[1050,1050],[1051,1051]]],[1567078585660,["GJX@GJXAIOU",[[-1,1039,"七**."]],[1043,1043],[1039,1039]]],[1567078585949,["GJX@GJXAIOU",[[-1,1038,"\n"]],[1039,1039],[1038,1038]]],[1567078586988,["GJX@GJXAIOU",[[1,1038,"\n"]],[1038,1038],[1039,1039]]],[1567078593959,["GJX@GJXAIOU",[[1,1039,"## liu"]],[1039,1039],[1045,1045]]],[1567078595166,["GJX@GJXAIOU",[[-1,1042,"liu"]],[1045,1045],[1042,1042]]],[1567078595696,["GJX@GJXAIOU",[[1,1042,"Liu"]],[1042,1042],[1045,1045]]],[1567078596909,["GJX@GJXAIOU",[[-1,1042,"Liu"]],[1045,1045],[1042,1042]]],[1567078597673,["GJX@GJXAIOU",[[1,1042,"Liu "]],[1042,1042],[1046,1046]]],[1567078598516,["GJX@GJXAIOU",[[-1,1042,"Liu "]],[1046,1046],[1042,1042]]],[1567078599495,["GJX@GJXAIOU",[[1,1042,"六 "]],[1042,1042],[1043,1043]]],[1567078599801,["GJX@GJXAIOU",[[1,1043,"、"]],[1043,1043],[1044,1044]]],[1567078601165,["GJX@GJXAIOU",[[-1,1043,"、"]],[1044,1044],[1043,1043]]],[1567078602825,["GJX@GJXAIOU",[[1,1043,"、"]],[1043,1043],[1044,1044]]],[1567078603942,["GJX@GJXAIOU",[[-1,1044," "]],[1045,1045],[1044,1044]]],[1567078611973,["GJX@GJXAIOU",[[1,1130,"**"],[1,1137,"**"]],[1130,1137],[1130,1141]]],[1567078614292,["GJX@GJXAIOU",[[1,1137,"（）"]],[1137,1137],[1139,1139]]],[1567078619321,["GJX@GJXAIOU",[[1,1138,"即是D奥"]],[1138,1138],[1142,1142]]],[1567078619356,["GJX@GJXAIOU",[[1,1140," "]],[1142,1142],[1143,1143]]],[1567078619951,["GJX@GJXAIOU",[[-1,1142,"奥"]],[1143,1143],[1142,1142]]],[1567078620891,["GJX@GJXAIOU",[[1,1142,"ao"]],[1142,1142],[1144,1144]]],[1567078626327,["GJX@GJXAIOU",[[-1,1056,"1. "]],[1056,1059],[1056,1056]]],[1567078626726,["GJX@GJXAIOU",[[1,1056,"- "]],[1056,1056],[1058,1058]]],[1567078629671,["GJX@GJXAIOU",[[-1,1122,"2. "]],[1125,1125],[1122,1122]]],[1567078630678,["GJX@GJXAIOU",[[1,1122,"- "]],[1122,1122],[1124,1124]]],[1567078633612,["GJX@GJXAIOU",[[-1,1150,"2.1 "]],[1154,1154],[1150,1150]]],[1567078633940,["GJX@GJXAIOU",[[-1,1149,"\n"]],[1150,1150],[1149,1149]]],[1567078634904,["GJX@GJXAIOU",[[1,1149,"- "]],[1149,1149],[1151,1151]]],[1567078635285,["GJX@GJXAIOU",[[1,1149,"  "]],[1151,1151],[1153,1153]]],[1567078638063,["GJX@GJXAIOU",[[-1,1169,"3. "]],[1172,1172],[1169,1169]]],[1567078639783,["GJX@GJXAIOU",[[1,1169,"- "]],[1169,1169],[1171,1171]]],[1567078643574,["GJX@GJXAIOU",[[-1,1186,"3.1 "]],[1190,1190],[1186,1186]]],[1567078643908,["GJX@GJXAIOU",[[-1,1185,"\n"]],[1186,1186],[1185,1185]]],[1567078645008,["GJX@GJXAIOU",[[1,1185,"- "]],[1185,1185],[1187,1187]]],[1567078645493,["GJX@GJXAIOU",[[1,1185,"  "]],[1187,1187],[1189,1189]]],[1567078649429,["GJX@GJXAIOU",[[-1,1226,"\n"]],[1227,1227],[1226,1226]]],[1567078649766,["GJX@GJXAIOU",[[-1,1225,"\n"]],[1226,1226],[1225,1225]]],[1567078656642,["GJX@GJXAIOU",[[1,1189,"**"],[1,1226,"**."]],[1189,1226],[1229,1229]]],[1567078657853,["GJX@GJXAIOU",[[-1,1228,"."]],[1229,1229],[1228,1228]]],[1567078658769,["GJX@GJXAIOU",[[1,1228,"。"]],[1228,1228],[1229,1229]]],[1567078719112,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567078719112,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567078680142,["GJX@GJXAIOU",[[1,1233,"\n"]],[1232,1232],[1233,1233]]],[1567078680269,["GJX@GJXAIOU",[[1,1234,"\n"]],[1233,1233],[1234,1234]]],[1567078680391,["GJX@GJXAIOU",[[1,1235,"\n"]],[1234,1234],[1235,1235]]],[1567078684647,["GJX@GJXAIOU",[[1,1235,"## 七、"]],[1235,1235],[1240,1240]]],[1567078779111,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567078779111,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567078744232,["GJX@GJXAIOU",[[1,1240,"Myba"]],[1240,1240],[1244,1244]]],[1567078747999,["GJX@GJXAIOU",[[-1,1242,"ba"]],[1244,1244],[1242,1242]]],[1567078751739,["GJX@GJXAIOU",[[1,1242,"Batis shiyong"]],[1242,1242],[1255,1255]]],[1567078752876,["GJX@GJXAIOU",[[-1,1248,"shiyong"]],[1255,1255],[1248,1248]]],[1567078753944,["GJX@GJXAIOU",[[1,1248,"使用"]],[1248,1248],[1250,1250]]],[1567078754236,["GJX@GJXAIOU",[[1,1251,"\n"]],[1250,1250],[1251,1251]]],[1567078839112,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567078839112,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567078787886,["GJX@GJXAIOU",[[-1,1252,"八**.** "]],[1259,1259],[1252,1252]]],[1567078788141,["GJX@GJXAIOU",[[-1,1251,"\n"]],[1252,1252],[1251,1251]]],[1567078792250,["GJX@GJXAIOU",[[1,1251,"### （）"]],[1251,1251],[1257,1257]]],[1567078793722,["GJX@GJXAIOU",[[1,1256,"一"]],[1256,1256],[1257,1257]]],[1567078795814,["GJX@GJXAIOU",[[1,1251,"\n"]],[1251,1251],[1252,1252]]],[1567078899114,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567078899114,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567078864020,["GJX@GJXAIOU",[[-1,1265,"1.     |  |  |  |  |\n|  |  | ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image010.gif) |\n|  | ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image009.jpg) |\n|  | "]],[1265,1470],[1265,1265]]],[1567078866671,["GJX@GJXAIOU",[[-1,1265,"\n"]],[1266,1266],[1265,1265]]],[1567078866797,["GJX@GJXAIOU",[[-1,1264,"\n"]],[1265,1265],[1264,1264]]],[1567078866924,["GJX@GJXAIOU",[[-1,1263,"\n"]],[1264,1264],[1263,1263]]],[1567078867940,["GJX@GJXAIOU",[[1,1263,"\n"]],[1263,1263],[1264,1264]]],[1567078868988,["GJX@GJXAIOU",[[1,1264,"\n"]],[1264,1264],[1265,1265]]],[1567078871503,["GJX@GJXAIOU",[[1,1265,"- "]],[1265,1265],[1267,1267]]],[1567078876300,["GJX@GJXAIOU",[[1,1274,"- \n"]],[1273,1273],[1276,1276]]],[1567078880693,["GJX@GJXAIOU",[[-1,1278,"2. "]],[1281,1281],[1278,1278]]],[1567078880812,["GJX@GJXAIOU",[[-1,1277,"\n"]],[1278,1278],[1277,1277]]],[1567078880968,["GJX@GJXAIOU",[[-1,1276,"\n"]],[1277,1277],[1276,1276]]],[1567078881109,["GJX@GJXAIOU",[[-1,1275," "]],[1276,1276],[1275,1275]]],[1567078882064,["GJX@GJXAIOU",[[1,1275," "]],[1275,1275],[1276,1276]]],[1567078884622,["GJX@GJXAIOU",[[1,1274,"\n"]],[1274,1274],[1275,1275]]],[1567079019113,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079019113,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079011299,["GJX@GJXAIOU",[[1,1274,"![MyBatis需要导入的Jar包]($resource/MyBatis%E9%9C%80%E8%A6%81%E5%AF%BC%E5%85%A5%E7%9A%84Jar%E5%8C%85.png)"]],[1274,1274],[1374,1374]]],[1567079079116,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079079116,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079034413,["GJX@GJXAIOU",[[-1,1407,"2.1 "]],[1411,1411],[1407,1407]]],[1567079034742,["GJX@GJXAIOU",[[-1,1406,"\n"]],[1407,1407],[1406,1406]]],[1567079035775,["GJX@GJXAIOU",[[1,1406,"- "]],[1406,1406],[1408,1408]]],[1567079036140,["GJX@GJXAIOU",[[1,1406,"  "]],[1408,1408],[1410,1410]]],[1567079040917,["GJX@GJXAIOU",[[-1,1421,"2.2 "]],[1425,1425],[1421,1421]]],[1567079041213,["GJX@GJXAIOU",[[-1,1420,"\n"]],[1421,1421],[1420,1420]]],[1567079042281,["GJX@GJXAIOU",[[1,1420,"- "]],[1420,1420],[1422,1422]]],[1567079042773,["GJX@GJXAIOU",[[1,1420,"  "]],[1422,1422],[1424,1424]]],[1567079045893,["GJX@GJXAIOU",[[-1,1449,"2.2.1 "]],[1455,1455],[1449,1449]]],[1567079046182,["GJX@GJXAIOU",[[-1,1448,"\n"]],[1449,1449],[1448,1448]]],[1567079048098,["GJX@GJXAIOU",[[1,1448,"    - "]],[1448,1448],[1454,1454]]],[1567079061983,["GJX@GJXAIOU",[[-1,1469,"\n"]],[1470,1470],[1469,1469]]],[1567079062110,["GJX@GJXAIOU",[[-1,1468,"\n"]],[1469,1469],[1468,1468]]],[1567079064583,["GJX@GJXAIOU",[[1,1468,"："]],[1468,1468],[1469,1469]]],[1567079077046,["GJX@GJXAIOU",[[-1,1607,"\n"]],[1606,1607],[1606,1606]]],[1567079077398,["GJX@GJXAIOU",[[-1,1604,"g)"]],[1606,1606],[1604,1604]]],[1567079139117,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079139117,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079080773,["GJX@GJXAIOU",[[-1,1526,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image011.jp"]],[1526,1604],[1526,1526]]],[1567079102426,["GJX@GJXAIOU",[[1,1267,"不周一"]],[1267,1267],[1270,1270]]],[1567079103581,["GJX@GJXAIOU",[[-1,1266," 不周一"]],[1270,1270],[1266,1266]]],[1567079107088,["GJX@GJXAIOU",[[1,1266," 步骤一："]],[1266,1266],[1271,1271]]],[1567079110759,["GJX@GJXAIOU",[[1,1380,"步骤二："]],[1380,1380],[1384,1384]]],[1567079113143,["GJX@GJXAIOU",[[1,1535,"\n"]],[1533,1533],[1534,1534]]],[1567079125472,["GJX@GJXAIOU",[[1,1534,"- 步骤三：全局配置文件内筒"]],[1534,1534],[1548,1548]]],[1567079125935,["GJX@GJXAIOU",[[-1,1546,"内筒"]],[1548,1548],[1546,1546]]],[1567079127851,["GJX@GJXAIOU",[[1,1546,"呢诶荣"]],[1546,1546],[1549,1549]]],[1567079128525,["GJX@GJXAIOU",[[-1,1546,"呢诶荣"]],[1549,1549],[1546,1546]]],[1567079130160,["GJX@GJXAIOU",[[1,1546,"内容"]],[1546,1546],[1548,1548]]],[1567079130580,["GJX@GJXAIOU",[[1,1549,"- \n"]],[1548,1548],[1551,1551]]],[1567079131676,["GJX@GJXAIOU",[[-1,1549,"- "]],[1551,1551],[1549,1549]]],[1567079199121,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079199121,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079148926,["GJX@GJXAIOU",[[-1,1551,"2.3     |  |\n|  | ![文本框: <?xml  version=\"1.0\"  encoding=\"UTF-8\"?>\n<!DOCTYPE  configuration\nPUBLIC  \"-//mybatis.org//DTD  Config  3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n<!--  default 引用 environment 的 id,当前所使用的环境  -->\n<environments  default=\"default\">\n<!--  声明可以使用的环境  -->\n<environment  id=\"default\">\n<!--  使用原生 JDBC 事务  -->\n<transactionManager  type=\"JDBC\"></transactionManager>\n<dataSource  type=\"POOLED\">\n<property  name=\"driver\"  value=\"com.mysql.jdbc.Driver\"/>\n<property  name=\"url\"  value=\"jdbc:mysql://localhost:3306/ssm\"/>\n<property  name=\"username\"  value=\"root\"/>\n<property  name=\"password\"  value=\"smallming\"/>\n</dataSource>\n</environment>\n</environments>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image012.gif) | \n全局配置文件内容\n\n![文本框: <mappers>\n<mapper  resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n</mappers>\n</configuration>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image013.gif)"]],[1551,2520],[1551,1551]]],[1567079157319,["GJX@GJXAIOU",[[1,1549,"···"]],[1549,1549],[1552,1552]]],[1567079159316,["GJX@GJXAIOU",[[-1,1549,"···"]],[1552,1552],[1549,1549]]],[1567079160152,["GJX@GJXAIOU",[[1,1549,"```"]],[1549,1549],[1552,1552]]],[1567079160186,["GJX@GJXAIOU",[[1,1552,"language\n```\n"]],[1552,1552],[1552,1560]]],[1567079160936,["GJX@GJXAIOU",[[-1,1552,"language"],[1,1560,"j"]],[1552,1560],[1553,1553]]],[1567079161288,["GJX@GJXAIOU",[[1,1553,"ava"]],[1553,1553],[1556,1556]]],[1567079161347,["GJX@GJXAIOU",[[1,1557,"\n"]],[1556,1556],[1557,1557]]],[1567079259120,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079259120,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079236990,["GJX@GJXAIOU",[[1,1557,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n  PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\t<!-- default引用environment的id,当前所使用的环境 -->\n\t<environments default=\"default\">\n\t\t<!-- 声明可以使用的环境 -->\n\t\t<environment id=\"default\">\n\t\t\t<!-- 使用原生JDBC事务 -->\n\t\t\t<transactionManager type=\"JDBC\"></transactionManager>\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n\t\t\t\t<property name=\"url\" value=\"jdbc:mysql://localhost:3306/ssm\"/>\n\t\t\t\t<property name=\"username\" value=\"root\"/>\n\t\t\t\t<property name=\"password\" value=\"smallming\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t<mappers>\n\t\t<mapper resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n\t</mappers>\n</configuration>"]],[1557,1557],[2337,2337]]],[1567079242472,["GJX@GJXAIOU",[[1,1715,"  \n"]],[1714,1714],[1717,1717]]],[1567079251514,["GJX@GJXAIOU",[[1,1747,"wei"]],[1747,1747],[1750,1750]]],[1567079252301,["GJX@GJXAIOU",[[-1,1747,"wei"]],[1750,1750],[1747,1747]]],[1567079253801,["GJX@GJXAIOU",[[1,1747," 为"]],[1747,1747],[1749,1749]]],[1567079255663,["GJX@GJXAIOU",[[1,1751," "]],[1751,1751],[1752,1752]]],[1567079257727,["GJX@GJXAIOU",[[1,1763," "]],[1763,1763],[1764,1764]]],[1567079259017,["GJX@GJXAIOU",[[1,1765," "]],[1765,1765],[1766,1766]]],[1567079319124,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079319124,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079261956,["GJX@GJXAIOU",[[1,1769,"即"]],[1769,1769],[1770,1770]]],[1567079281445,["GJX@GJXAIOU",[[-1,1533,"\n"]],[1533,1533],[1532,1532]]],[1567079284766,["GJX@GJXAIOU",[[-1,1534," 步骤三："]],[1539,1539],[1534,1534]]],[1567079285442,["GJX@GJXAIOU",[[1,1534," "]],[1534,1534],[1535,1535]]],[1567079289461,["GJX@GJXAIOU",[[-1,2350,"3. "]],[2353,2353],[2350,2350]]],[1567079289629,["GJX@GJXAIOU",[[-1,2349,"\n"]],[2350,2350],[2349,2349]]],[1567079289829,["GJX@GJXAIOU",[[-1,2348,"\n"]],[2349,2349],[2348,2348]]],[1567079290590,["GJX@GJXAIOU",[[-1,2347,"\n"]],[2348,2348],[2347,2347]]],[1567079291056,["GJX@GJXAIOU",[[1,2347,"- "]],[2347,2347],[2349,2349]]],[1567079294279,["GJX@GJXAIOU",[[1,1533,"  "]],[1533,1533],[1535,1535]]],[1567079298712,["GJX@GJXAIOU",[[1,2351,"步骤三："]],[2351,2351],[2355,2355]]],[1567079316086,["GJX@GJXAIOU",[[-1,2394,"3.1 "]],[2394,2398],[2394,2394]]],[1567079316343,["GJX@GJXAIOU",[[-1,2393,"\n"]],[2394,2394],[2393,2393]]],[1567079317986,["GJX@GJXAIOU",[[1,2393,"  - "]],[2393,2393],[2397,2397]]],[1567079379125,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079379125,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079320957,["GJX@GJXAIOU",[[-1,2418,"3.2 "]],[2422,2422],[2418,2418]]],[1567079321264,["GJX@GJXAIOU",[[-1,2417,"\n"]],[2418,2418],[2417,2417]]],[1567079322679,["GJX@GJXAIOU",[[1,2417,"  - "]],[2417,2417],[2421,2421]]],[1567079338594,["GJX@GJXAIOU",[[1,2437,"- xml 文件内容为："]],[2437,2437],[2449,2449]]],[1567079340709,["GJX@GJXAIOU",[[1,2437,"  "]],[2438,2438],[2440,2440]]],[1567079439134,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079439134,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079402424,["GJX@GJXAIOU",[[-1,2452,"3.3   |  |\n|  | ![文本框: <?xml  version=\"1.0\"  encoding=\"UTF-8\"?>\n\n<!DOCTYPE  mapper\n\nPUBLIC  \"-//mybatis.org//DTD  Mapper  3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!--  namesapce:理解成实现类的全路径(包名+类名)  -->\n<mapper  namespace=\"a.b\"  >\n<!--  id:方法名\nparameterType:定义参数类型\nresultType:返回值类型.\n\n如果方法返回值是 list,在 resultType 中写 List 的泛型,因为 mybatis\n对 jdbc 封装,一行一行读取数据\n-->\n\n<select  id=\"selAll\"\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image014.gif) | \nxml 文件内容\n\n![文本框: resultType=\"com.bjsxt.pojo.Flower\"> select  *  from  flower\n</select>\n\n</mapper>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image015.gif)"]],[2452,3103],[2452,2452]]],[1567079403831,["GJX@GJXAIOU",[[1,2452,"··"]],[2452,2452],[2454,2454]]],[1567079404423,["GJX@GJXAIOU",[[-1,2452,"··"]],[2454,2454],[2452,2452]]],[1567079405674,["GJX@GJXAIOU",[[1,2452,"```"]],[2452,2452],[2455,2455]]],[1567079405710,["GJX@GJXAIOU",[[1,2455,"language\n```\n"]],[2455,2455],[2455,2463]]],[1567079406017,["GJX@GJXAIOU",[[-1,2455,"language"],[1,2463,"j"]],[2455,2463],[2456,2456]]],[1567079406976,["GJX@GJXAIOU",[[1,2456,"ava"]],[2456,2456],[2459,2459]]],[1567079407079,["GJX@GJXAIOU",[[1,2460,"\n"]],[2459,2459],[2460,2460]]],[1567079409851,["GJX@GJXAIOU",[[1,2460,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:表示方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect * from flower\n\t</select>\n</mapper>"]],[2460,2460],[2906,2906]]],[1567079422845,["GJX@GJXAIOU",[[-1,2913,"4. "]],[2916,2916],[2913,2913]]],[1567079423429,["GJX@GJXAIOU",[[-1,2912,"\n"]],[2913,2913],[2912,2912]]],[1567079424731,["GJX@GJXAIOU",[[1,2912,"- b "]],[2912,2912],[2915,2915]]],[1567079425216,["GJX@GJXAIOU",[[1,2915,"uzhou"]],[2915,2915],[2920,2920]]],[1567079426317,["GJX@GJXAIOU",[[-1,2914,"buzhou"]],[2920,2920],[2914,2914]]],[1567079429304,["GJX@GJXAIOU",[[1,2914,"步骤四："]],[2914,2914],[2918,2918]]],[1567079431021,["GJX@GJXAIOU",[[-1,2918," "]],[2919,2919],[2918,2918]]],[1567079437768,["GJX@GJXAIOU",[[-1,2955,"代"]],[2956,2956],[2955,2955]]],[1567079438552,["GJX@GJXAIOU",[[1,2955,"代码"]],[2955,2955],[2957,2957]]],[1567079499128,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079499128,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079441594,["GJX@GJXAIOU",[[1,2957,"不需要编写"]],[2957,2957],[2962,2962]]],[1567079495414,["GJX@GJXAIOU",[[-1,2964," |  |\n|  | ![文本框: InputStream  is  = Resources.getResourceAsStream(\"myabtis.xml\");\n//使用工厂设计模式\nSqlSessionFactory  factory  =  new\n\nSqlSessionFactoryBuilder().build(is);\n//生产 SqlSession\nSqlSession  session=factory.openSession();\n\nList<Flower>  list  = session.selectList(\"a.b.selAll\");\nfor  (Flower  flower  :  list)  { System.out.println(flower.toString());\n}\n\nsession.close();\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image016.gif) | \n码不需要编写.)\n"]],[2963,3431],[2963,2963]]],[1567079497335,["GJX@GJXAIOU",[[1,2963,"··"]],[2963,2963],[2965,2965]]],[1567079497983,["GJX@GJXAIOU",[[-1,2963,"··"]],[2965,2965],[2963,2963]]],[1567079499017,["GJX@GJXAIOU",[[1,2963,"``"]],[2963,2963],[2965,2965]]],[1567079559129,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079559129,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079499200,["GJX@GJXAIOU",[[1,2965,"`"]],[2965,2965],[2966,2966]]],[1567079499237,["GJX@GJXAIOU",[[1,2966,"language\n```\n"]],[2966,2966],[2966,2974]]],[1567079499503,["GJX@GJXAIOU",[[-1,2966,"language"],[1,2974,"j"]],[2966,2974],[2967,2967]]],[1567079500091,["GJX@GJXAIOU",[[1,2967,"ava"]],[2967,2967],[2970,2970]]],[1567079500221,["GJX@GJXAIOU",[[1,2971,"\n"]],[2970,2970],[2971,2971]]],[1567079504099,["GJX@GJXAIOU",[[1,2971,"import com.bjsxt.pojo.Flower;\n\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\tsession.close();\n\t}\n}"]],[2971,2971],[3456,3456]]],[1567079511079,["GJX@GJXAIOU",[[-1,3463,"九**.** "]],[3470,3470],[3463,3463]]],[1567079511205,["GJX@GJXAIOU",[[-1,3462,"\n"]],[3463,3463],[3462,3462]]],[1567079524463,["GJX@GJXAIOU",[[1,3462,"### ()"]],[3462,3462],[3468,3468]]],[1567079525720,["GJX@GJXAIOU",[[-1,3466,"()"]],[3468,3468],[3466,3466]]],[1567079526610,["GJX@GJXAIOU",[[1,3466,"（）"]],[3466,3466],[3468,3468]]],[1567079527955,["GJX@GJXAIOU",[[1,3467,"二"]],[3467,3467],[3468,3468]]],[1567079549822,["GJX@GJXAIOU",[[-1,3477,"1."]],[3477,3479],[3477,3477]]],[1567079550264,["GJX@GJXAIOU",[[1,3477,"- "]],[3477,3477],[3479,3479]]],[1567079553381,["GJX@GJXAIOU",[[-1,3477,"- "]],[3479,3479],[3477,3477]]],[1567079557166,["GJX@GJXAIOU",[[1,3477,"**"],[1,3486,"**"]],[3477,3486],[3477,3490]]],[1567079619131,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079619131,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079559782,["GJX@GJXAIOU",[[-1,3492,"1.1 "]],[3492,3496],[3492,3492]]],[1567079559941,["GJX@GJXAIOU",[[-1,3491,"\n"]],[3492,3492],[3491,3491]]],[1567079561232,["GJX@GJXAIOU",[[1,3491,"- "]],[3491,3491],[3493,3493]]],[1567079564175,["GJX@GJXAIOU",[[-1,3527,"1.1.1 "]],[3527,3533],[3527,3527]]],[1567079564296,["GJX@GJXAIOU",[[-1,3526,"\n"]],[3527,3527],[3526,3526]]],[1567079564736,["GJX@GJXAIOU",[[1,3526,"- "]],[3526,3526],[3528,3528]]],[1567079565581,["GJX@GJXAIOU",[[1,3526,"  "]],[3528,3528],[3530,3530]]],[1567079568381,["GJX@GJXAIOU",[[-1,3557,"1.1.2 "]],[3557,3563],[3557,3557]]],[1567079568565,["GJX@GJXAIOU",[[-1,3556,"\n"]],[3557,3557],[3556,3556]]],[1567079569840,["GJX@GJXAIOU",[[1,3556,"- "]],[3556,3556],[3558,3558]]],[1567079570166,["GJX@GJXAIOU",[[1,3556,"  "]],[3558,3558],[3560,3560]]],[1567079574854,["GJX@GJXAIOU",[[-1,3589,"\n"]],[3590,3590],[3589,3589]]],[1567079575006,["GJX@GJXAIOU",[[-1,3588,"\n"]],[3589,3589],[3588,3588]]],[1567079580006,["GJX@GJXAIOU",[[-1,3619,"1.2 "]],[3623,3623],[3619,3619]]],[1567079580494,["GJX@GJXAIOU",[[-1,3618,"\n"]],[3619,3619],[3618,3618]]],[1567079582881,["GJX@GJXAIOU",[[1,3618,"- "]],[3618,3618],[3620,3620]]],[1567079586405,["GJX@GJXAIOU",[[-1,3645,"1.2.1 "]],[3651,3651],[3645,3645]]],[1567079586736,["GJX@GJXAIOU",[[-1,3644,"\n"]],[3645,3645],[3644,3644]]],[1567079588345,["GJX@GJXAIOU",[[1,3644,"- "]],[3644,3644],[3646,3646]]],[1567079589246,["GJX@GJXAIOU",[[1,3644,"  "]],[3646,3646],[3648,3648]]],[1567079592885,["GJX@GJXAIOU",[[-1,3665,"1.2.2 "]],[3671,3671],[3665,3665]]],[1567079594397,["GJX@GJXAIOU",[[-1,3664,"\n"]],[3665,3665],[3664,3664]]],[1567079595566,["GJX@GJXAIOU",[[1,3664,"- "]],[3664,3664],[3666,3666]]],[1567079595830,["GJX@GJXAIOU",[[1,3664,"  "]],[3666,3666],[3668,3668]]],[1567079598726,["GJX@GJXAIOU",[[-1,3702,"1.2.3 "]],[3708,3708],[3702,3702]]],[1567079598989,["GJX@GJXAIOU",[[-1,3701,"\n"]],[3702,3702],[3701,3701]]],[1567079600150,["GJX@GJXAIOU",[[1,3701,"-  "]],[3701,3701],[3704,3704]]],[1567079601797,["GJX@GJXAIOU",[[1,3701,"  "]],[3704,3704],[3706,3706]]],[1567079604430,["GJX@GJXAIOU",[[-1,3705," "]],[3706,3706],[3705,3705]]],[1567079607726,["GJX@GJXAIOU",[[-1,3710," "]],[3711,3711],[3710,3710]]],[1567079611039,["GJX@GJXAIOU",[[1,3711,"是 "]],[3711,3711],[3712,3712]]],[1567079615508,["GJX@GJXAIOU",[[-1,3732,"**.**"]],[3737,3737],[3732,3732]]],[1567079679130,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079679130,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079623439,["GJX@GJXAIOU",[[-1,3731,"十"]],[3732,3732],[3731,3731]]],[1567079625462,["GJX@GJXAIOU",[[1,3730,"#"]],[3731,3731],[3738,3738]]],[1567079630056,["GJX@GJXAIOU",[[1,3732,"八、"]],[3732,3732],[3734,3734]]],[1567079635835,["GJX@GJXAIOU",[[1,3740,"【补充知识】"]],[3740,3740],[3746,3746]]],[1567079678205,["GJX@GJXAIOU",[[1,3750,"\n"]],[3750,3750],[3751,3751]]],[1567079678542,["GJX@GJXAIOU",[[-1,3750,"\n"]],[3751,3751],[3750,3750]]],[1567079739133,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079739133,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079679334,["GJX@GJXAIOU",[[-1,3748,"1."]],[3750,3750],[3748,3748]]],[1567079679920,["GJX@GJXAIOU",[[1,3748,"- "]],[3748,3748],[3750,3750]]],[1567079683693,["GJX@GJXAIOU",[[-1,3774,"2."]],[3776,3776],[3774,3774]]],[1567079683941,["GJX@GJXAIOU",[[1,3774,"\n"]],[3774,3774],[3775,3775]]],[1567079684440,["GJX@GJXAIOU",[[1,3775,"- "]],[3775,3775],[3777,3777]]],[1567079686822,["GJX@GJXAIOU",[[1,3815,"\n"]],[3815,3815],[3816,3816]]],[1567079687615,["GJX@GJXAIOU",[[1,3816,"- "]],[3816,3816],[3818,3818]]],[1567079695424,["GJX@GJXAIOU",[[1,3822,":yig"]],[3822,3822],[3826,3826]]],[1567079695936,["GJX@GJXAIOU",[[-1,3823,"yig"]],[3826,3826],[3823,3823]]],[1567079697784,["GJX@GJXAIOU",[[1,3823,"数据可"]],[3823,3823],[3826,3826]]],[1567079698301,["GJX@GJXAIOU",[[-1,3825,"可"]],[3826,3826],[3825,3825]]],[1567079711977,["GJX@GJXAIOU",[[1,3825,"库连接池中有很多连接，他们坑你"]],[3825,3825],[3840,3840]]],[1567079712557,["GJX@GJXAIOU",[[-1,3838,"坑你"]],[3840,3840],[3838,3838]]],[1567079725800,["GJX@GJXAIOU",[[1,3838,"可能处于Active"]],[3838,3838],[3848,3848]]],[1567079725835,["GJX@GJXAIOU",[[1,3842," "]],[3848,3848],[3849,3849]]],[1567079727251,["GJX@GJXAIOU",[[1,3849,"或者"]],[3849,3849],[3851,3851]]],[1567079727286,["GJX@GJXAIOU",[[1,3849," "]],[3851,3851],[3852,3852]]],[1567079730082,["GJX@GJXAIOU",[[1,3852,"Idle"]],[3852,3852],[3856,3856]]],[1567079730119,["GJX@GJXAIOU",[[1,3852," "]],[3856,3856],[3857,3857]]],[1567079732693,["GJX@GJXAIOU",[[1,3857,"等等"]],[3857,3857],[3859,3859]]],[1567079732729,["GJX@GJXAIOU",[[1,3857," "]],[3859,3859],[3860,3860]]],[1567079735938,["GJX@GJXAIOU",[[1,3860,"状态；"]],[3860,3860],[3863,3863]]],[1567079799136,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079799136,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079743623,["GJX@GJXAIOU",[[-1,3865,"3.1  "]],[3870,3870],[3865,3865]]],[1567079743893,["GJX@GJXAIOU",[[-1,3864,"\n"]],[3865,3865],[3864,3864]]],[1567079745285,["GJX@GJXAIOU",[[1,3864,"-  "]],[3864,3864],[3867,3867]]],[1567079748461,["GJX@GJXAIOU",[[-1,3818,"3."]],[3820,3820],[3818,3818]]],[1567079750501,["GJX@GJXAIOU",[[1,3862,"  "]],[3862,3862],[3864,3864]]],[1567079751925,["GJX@GJXAIOU",[[-1,3866," "]],[3867,3867],[3866,3866]]],[1567079756830,["GJX@GJXAIOU",[[-1,3892,"3.2  "]],[3892,3897],[3892,3892]]],[1567079758616,["GJX@GJXAIOU",[[1,3892,"\n  - "]],[3892,3892],[3897,3897]]],[1567079769328,["GJX@GJXAIOU",[[-1,3917,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image021.gif)"]],[3917,3997],[3917,3917]]],[1567079769655,["GJX@GJXAIOU",[[-1,3918,"\n"]],[3917,3917],[3916,3916]]],[1567079771525,["GJX@GJXAIOU",[[-1,3918,"4."]],[3920,3920],[3918,3918]]],[1567079771688,["GJX@GJXAIOU",[[-1,3917,"\n"]],[3918,3918],[3917,3917]]],[1567079772150,["GJX@GJXAIOU",[[-1,3916,"\n"]],[3917,3917],[3916,3916]]],[1567079773207,["GJX@GJXAIOU",[[1,3916,"- "]],[3916,3916],[3918,3918]]],[1567079776941,["GJX@GJXAIOU",[[-1,3931,"4.1 "]],[3935,3935],[3931,3931]]],[1567079777393,["GJX@GJXAIOU",[[-1,3930,"\n"]],[3931,3931],[3930,3930]]],[1567079778088,["GJX@GJXAIOU",[[1,3930,"- "]],[3930,3930],[3932,3932]]],[1567079778285,["GJX@GJXAIOU",[[1,3930,"  "]],[3932,3932],[3934,3934]]],[1567079782221,["GJX@GJXAIOU",[[-1,3976,"4.1.1 "]],[3982,3982],[3976,3976]]],[1567079782424,["GJX@GJXAIOU",[[-1,3975,"\n"]],[3976,3976],[3975,3975]]],[1567079782790,["GJX@GJXAIOU",[[-1,3974,"\n"]],[3975,3975],[3974,3974]]],[1567079786286,["GJX@GJXAIOU",[[1,3974,"\n  -  "]],[3974,3974],[3980,3980]]],[1567079787032,["GJX@GJXAIOU",[[1,3977,"  "]],[3980,3980],[3982,3982]]],[1567079792525,["GJX@GJXAIOU",[[-1,3998,"5."]],[4000,4000],[3998,3998]]],[1567079792941,["GJX@GJXAIOU",[[-1,3997,"\n"]],[3998,3998],[3997,3997]]],[1567079794192,["GJX@GJXAIOU",[[1,3997,"- "]],[3997,3997],[3999,3999]]],[1567079798064,["GJX@GJXAIOU",[[-1,4025,"5.1 "]],[4029,4029],[4025,4025]]],[1567079798397,["GJX@GJXAIOU",[[-1,4024,"\n"]],[4025,4025],[4024,4024]]],[1567079859137,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079859137,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079799384,["GJX@GJXAIOU",[[1,4024,"- "]],[4024,4024],[4026,4026]]],[1567079799677,["GJX@GJXAIOU",[[1,4024,"  "]],[4026,4026],[4028,4028]]],[1567079919139,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079919139,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079877280,["GJX@GJXAIOU",[[-1,4091,"![文本框: <?xml  version=\"1.0\"  encoding=\"UTF-8\"?>\n\n<Context>\n\n<Resource\ndriverClassName=\"com.mysql.jdbc.Driver\" url=\"jdbc:mysql://localhost:3306/ssm\" username=\"root\"\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image022.gif)\n\n![文本框: password=\"smallming\" maxActive=\"50\" maxIdle=\"20\" name=\"test\"\n// 表示该数据库连接池由Tomcat管理\nauth=\"Container\" maxWait=\"10000\"\n/>type=\"javax.sql.DataSource\"\n</Context>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image023.gif)"]],[4091,4577],[4091,4091]]],[1567079905761,["GJX@GJXAIOU",[[1,4090,"·"]],[4090,4090],[4091,4091]]],[1567079906533,["GJX@GJXAIOU",[[-1,4090,"·"]],[4091,4091],[4090,4090]]],[1567079907071,["GJX@GJXAIOU",[[1,4093,"\n"]],[4090,4090],[4091,4091]]],[1567079908423,["GJX@GJXAIOU",[[-1,4093,"\n"]],[4091,4091],[4090,4090]]],[1567079909442,["GJX@GJXAIOU",[[1,4090,"```"]],[4090,4090],[4093,4093]]],[1567079909479,["GJX@GJXAIOU",[[1,4093,"language\n```\n"]],[4093,4093],[4093,4101]]],[1567079909847,["GJX@GJXAIOU",[[-1,4093,"language"],[1,4101,"j"]],[4093,4101],[4094,4094]]],[1567079910024,["GJX@GJXAIOU",[[1,4094,"a"]],[4094,4094],[4095,4095]]],[1567079910726,["GJX@GJXAIOU",[[-1,4093,"ja"]],[4095,4095],[4093,4093]]],[1567079911626,["GJX@GJXAIOU",[[1,4093,"xml"]],[4093,4093],[4096,4096]]],[1567079911920,["GJX@GJXAIOU",[[1,4097,"\n"]],[4096,4096],[4097,4097]]],[1567079913173,["GJX@GJXAIOU",[[1,4097,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\t<Resource\n\t\tdriverClassName=\"com.mysql.jdbc.Driver\"\n\t\turl=\"jdbc:mysql://localhost:3306/ssm\"\n\t\tusername=\"root\"\n\t\tpassword=\"smallming\"\n\t\tmaxActive=\"50\"\n\t\tmaxIdle=\"20\"\n\t\tname=\"test\"\n\t\tauth=\"Container\"\n\t\tmaxWait=\"10000\"\n\t\ttype=\"javax.sql.DataSource\"\n\t/>\n</Context>"]],[4097,4097],[4407,4407]]],[1567079979144,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567079979144,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567079925533,["GJX@GJXAIOU",[[-1,4415,"5.2 "]],[4419,4419],[4415,4415]]],[1567079925719,["GJX@GJXAIOU",[[-1,4414,"\n"]],[4415,4415],[4414,4414]]],[1567079926101,["GJX@GJXAIOU",[[-1,4413,"\n"]],[4414,4414],[4413,4413]]],[1567079929954,["GJX@GJXAIOU",[[1,4413,"- "]],[4413,4413],[4415,4415]]],[1567079930781,["GJX@GJXAIOU",[[1,4413,"  "]],[4415,4415],[4417,4417]]],[1567079941493,["GJX@GJXAIOU",[[-1,4415,"- 把项目发布到 tomcat 中,则数据库连接池产生了"]],[4415,4443],[4415,4415]]],[1567079943391,["GJX@GJXAIOU",[[1,4090,"  - \n"]],[4089,4089],[4094,4094]]],[1567079943720,["GJX@GJXAIOU",[[1,4094,"- 把项目发布到 tomcat 中,则数据库连接池产生了"]],[4094,4094],[4122,4122]]],[1567079946254,["GJX@GJXAIOU",[[-1,4094,"- "]],[4096,4096],[4094,4094]]],[1567079949397,["GJX@GJXAIOU",[[-1,4448,"6."]],[4450,4450],[4448,4448]]],[1567079949550,["GJX@GJXAIOU",[[-1,4447,"\n"]],[4448,4448],[4447,4447]]],[1567079949737,["GJX@GJXAIOU",[[-1,4446,"\n"]],[4447,4447],[4446,4446]]],[1567079950862,["GJX@GJXAIOU",[[-1,4445," "]],[4446,4446],[4445,4445]]],[1567079951400,["GJX@GJXAIOU",[[1,4445,"- "]],[4445,4445],[4447,4447]]],[1567079954837,["GJX@GJXAIOU",[[-1,4478,"6.1 "]],[4482,4482],[4478,4478]]],[1567079955213,["GJX@GJXAIOU",[[-1,4477,"\n"]],[4478,4478],[4477,4477]]],[1567079956400,["GJX@GJXAIOU",[[1,4477,"- "]],[4477,4477],[4479,4479]]],[1567079956720,["GJX@GJXAIOU",[[1,4477,"  "]],[4479,4479],[4481,4481]]],[1567079972920,["GJX@GJXAIOU",[[-1,4775,"6.3 当关闭连接对象时,把连接对象归还给数据库连接池,把状态\n\n改变成 Idle"]],[4775,4816],[4775,4775]]],[1567079974752,["GJX@GJXAIOU",[[1,4514,"  - \n"]],[4513,4513],[4518,4518]]],[1567079975103,["GJX@GJXAIOU",[[1,4518,"6.3 当关闭连接对象时,把连接对象归还给数据库连接池,把状态\n\n改变成 Idle"]],[4518,4518],[4559,4559]]],[1567079978461,["GJX@GJXAIOU",[[-1,4518,"6.3 "]],[4522,4522],[4518,4518]]],[1567080039146,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567080039146,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567080023661,["GJX@GJXAIOU",[[-1,4546,"\n"]],[4546,4546],[4545,4545]]],[1567080025888,["GJX@GJXAIOU",[[-1,4545,"\n"]],[4546,4546],[4545,4545]]],[1567080028394,["GJX@GJXAIOU",[[1,4554,"`"]],[4554,4554],[4555,4555]]],[1567080029006,["GJX@GJXAIOU",[[-1,4554,"`"]],[4555,4555],[4554,4554]]],[1567080030202,["GJX@GJXAIOU",[[1,4554,"···"]],[4554,4554],[4557,4557]]],[1567080030934,["GJX@GJXAIOU",[[-1,4554,"···"]],[4557,4557],[4554,4554]]],[1567080032049,["GJX@GJXAIOU",[[1,4554,"```"]],[4554,4554],[4557,4557]]],[1567080032086,["GJX@GJXAIOU",[[1,4557,"language\n```\n"]],[4557,4557],[4557,4565]]],[1567080032347,["GJX@GJXAIOU",[[-1,4557,"language"],[1,4565,"j"]],[4557,4565],[4558,4558]]],[1567080033672,["GJX@GJXAIOU",[[1,4558,"ava"]],[4558,4558],[4561,4561]]],[1567080033806,["GJX@GJXAIOU",[[1,4562,"\n"]],[4561,4561],[4562,4562]]],[1567080037099,["GJX@GJXAIOU",[[1,4562,"@WebServlet(\"/pool\")\npublic class DemoServlet extends HttpServlet {\n\t@Override\n\tprotected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n\t\ttry {\n\t\t\tContext cxt = new InitialContext();\n\t\t\tDataSource ds = (DataSource) cxt.lookup(\"java:comp/env/test\");\n\t\t\tConnection conn = ds.getConnection();\n\t\t\tPreparedStatement ps = conn.prepareStatement(\"select * from flower\");\n\t\t\tResultSet rs = ps.executeQuery();\n\t\t\tres.setContentType(\"text/html;charset=utf-8\");\n\t\t\tPrintWriter out = res.getWriter();\n\t\t\twhile(rs.next()){\n\t\t\t\tout.print(rs.getInt(1)+\"&nbsp;&nbsp;&nbsp;&nbsp;\"+rs.getString(2)+\"<br/>\");\n\t\t\t}\n\t\t\tout.flush();\n\t\t\tout.close();\n\t\t\trs.close();\n\t\t} catch (NamingException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (SQLException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}"]],[4562,4562],[5451,5451]]],[1567080099147,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567080099147,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567080044656,["GJX@GJXAIOU",[[-1,5290,"\t\t\t// TODO Auto-generated catch block"]],[5291,5327],[5290,5290]]],[1567080045016,["GJX@GJXAIOU",[[-1,5290,"\n"]],[5290,5290],[5289,5289]]],[1567080047248,["GJX@GJXAIOU",[[-1,5343,"\t\t\t// TODO Auto-generated catch block"]],[5343,5380],[5343,5343]]],[1567080047582,["GJX@GJXAIOU",[[-1,5343,"\n"]],[5343,5343],[5342,5342]]],[1567080059986,["GJX@GJXAIOU",[[1,4513,";daij"]],[4513,4513],[4518,4518]]],[1567080061398,["GJX@GJXAIOU",[[-1,4513,";daij"]],[4518,4518],[4513,4513]]],[1567080065458,["GJX@GJXAIOU",[[1,4513,"；代码见下面"]],[4513,4513],[4519,4519]]],[1567080072968,["GJX@GJXAIOU",[[-1,5387,"6.2     |  |\n|  | ![文本框: Context  cxt  =  new  InitialContext(); DataSource  ds  =  (DataSource)\ncxt.lookup(\"java:comp/env/test\");\n\nConnection  conn  =  ds.getConnection();\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image024.gif) | \n代码:"]],[5387,5645],[5387,5387]]],[1567080073102,["GJX@GJXAIOU",[[-1,5390,"\n"]],[5387,5387],[5386,5386]]],[1567080079893,["GJX@GJXAIOU",[[-1,5392,"十一**.** "]],[5400,5400],[5392,5392]]],[1567080081565,["GJX@GJXAIOU",[[1,5392,"就"]],[5392,5392],[5393,5393]]],[1567080082000,["GJX@GJXAIOU",[[-1,5392,"就"]],[5393,5393],[5392,5392]]],[1567080083961,["GJX@GJXAIOU",[[1,5392,"九、"]],[5392,5392],[5394,5394]]],[1567080085925,["GJX@GJXAIOU",[[1,5391,"#"]],[5394,5394],[5401,5401]]],[1567080087806,["GJX@GJXAIOU",[[-1,5389,"\n"]],[5388,5388],[5387,5387]]],[1567080087925,["GJX@GJXAIOU",[[-1,5388,"\n"]],[5387,5387],[5386,5386]]],[1567080279150,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567080279150,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567080274303,["GJX@GJXAIOU",[[1,6208,"```"]],[6208,6208],[6211,6211]]],[1567080274340,["GJX@GJXAIOU",[[1,6211,"language\n```\n"]],[6211,6211],[6211,6219]]],[1567080275249,["GJX@GJXAIOU",[[-1,6211,"language"],[1,6219,"j"]],[6211,6219],[6212,6212]]],[1567080275642,["GJX@GJXAIOU",[[1,6212,"ava"]],[6212,6212],[6215,6215]]],[1567080275713,["GJX@GJXAIOU",[[1,6216,"\n"]],[6215,6215],[6216,6216]]],[1567080278680,["GJX@GJXAIOU",[[1,6216,"public class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\t// selectList\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t// selectOne\n\t\tint count = session.selectOne(\"a.b.selById\");\n\t\tSystem.out.println(count);\n\t\t\n\t\t// selectMap\n\t\t//把数据库中哪个列的值当作map的key\n\t\tMap<Object, Object> map = session.selectMap(\"a.b.c\", \"name123\");\n\t\tSystem.out.println(map);\n\t\t\n\t\tsession.close();\n\t}\n}"]],[6216,6216],[6914,6914]]],[1567080339147,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567080339147,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567080292742,["GJX@GJXAIOU",[[-1,5401,"1. "]],[5401,5404],[5401,5401]]],[1567080293097,["GJX@GJXAIOU",[[1,5401,"- "]],[5401,5401],[5403,5403]]],[1567080297304,["GJX@GJXAIOU",[[1,5416," "]],[5416,5416],[5417,5417]]],[1567080301198,["GJX@GJXAIOU",[[-1,5446,"1.1     |  |\n|  | ![文本框: List<Flower>  list  =  session.selectList(\"a.b.selAll\");\n\nfor  (Flower  flower  :  list)  { System.out.println(flower.toString());\n}\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image025.gif) | "]],[5446,5685],[5446,5446]]],[1567080301502,["GJX@GJXAIOU",[[-1,5446,"\n"]],[5446,5446],[5445,5445]]],[1567080302166,["GJX@GJXAIOU",[[-1,5445,"\n"]],[5445,5445],[5444,5444]]],[1567080305799,["GJX@GJXAIOU",[[-1,5462,"2. "]],[5462,5465],[5462,5462]]],[1567080306217,["GJX@GJXAIOU",[[1,5462,"- "]],[5462,5462],[5464,5464]]],[1567080314455,["GJX@GJXAIOU",[[-1,5489,"2.1     |  |\n|  | ![文本框: int  count  =  session.selectOne(\"a.b.selById\");\n\nSystem.out.println(count);\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image026.gif) | \n"]],[5489,5673],[5489,5489]]],[1567080314829,["GJX@GJXAIOU",[[-1,5488,"\n"]],[5489,5489],[5488,5488]]],[1567080317950,["GJX@GJXAIOU",[[-1,5507,"3. "]],[5507,5510],[5507,5507]]],[1567080318330,["GJX@GJXAIOU",[[1,5507,"- "]],[5507,5507],[5509,5509]]],[1567080321694,["GJX@GJXAIOU",[[-1,5529,"\n3.1"]],[5529,5533],[5529,5529]]],[1567080330237,["GJX@GJXAIOU",[[-1,5559,"3.2 ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image027.gif)"]],[5559,5643],[5559,5559]]],[1567080330376,["GJX@GJXAIOU",[[-1,5558,"\n"]],[5559,5559],[5558,5558]]],[1567080331609,["GJX@GJXAIOU",[[1,5558,"- "]],[5558,5558],[5560,5560]]],[1567080333648,["GJX@GJXAIOU",[[1,5529,"-"]],[5529,5529],[5530,5530]]],[1567080334855,["GJX@GJXAIOU",[[1,5529,"  "]],[5530,5530],[5532,5532]]],[1567080335502,["GJX@GJXAIOU",[[1,5561,"  "]],[5562,5562],[5564,5564]]],[1567080399151,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567080399151,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567080339430,["GJX@GJXAIOU",[[-1,5590,"Map<Object,  Object> map = session.selectMap(\"a.b.c\",  \"name\"); System.**_o_****_u_****_t_**.println(map);"]],[5590,5696],[5590,5590]]],[1567080339550,["GJX@GJXAIOU",[[-1,5591,"\n"]],[5590,5590],[5589,5589]]],[1567080340854,["GJX@GJXAIOU",[[-1,5590,"\n"]],[5590,5590],[5589,5589]]],[1567080340989,["GJX@GJXAIOU",[[-1,5589,"\n"]],[5589,5589],[5588,5588]]],[1567080345150,["GJX@GJXAIOU",[[1,6328,"\n"]],[6299,6299],[6300,6300]]],[1567080345264,["GJX@GJXAIOU",[[1,6329,"\n"]],[6300,6300],[6301,6301]]],[1567080346121,["GJX@GJXAIOU",[[1,6301,"dui"]],[6301,6301],[6304,6304]]],[1567080346877,["GJX@GJXAIOU",[[-1,6301,"dui"]],[6304,6304],[6301,6301]]],[1567080350612,["GJX@GJXAIOU",[[1,6301,"对应的XMLO"]],[6301,6301],[6308,6308]]],[1567080350648,["GJX@GJXAIOU",[[1,6304," "]],[6308,6308],[6309,6309]]],[1567080351198,["GJX@GJXAIOU",[[-1,6308,"O"]],[6309,6309],[6308,6308]]],[1567080352208,["GJX@GJXAIOU",[[1,6308,"问"]],[6308,6308],[6309,6309]]],[1567080352247,["GJX@GJXAIOU",[[1,6308," "]],[6309,6309],[6310,6310]]],[1567080352736,["GJX@GJXAIOU",[[-1,6309,"问"]],[6310,6310],[6309,6309]]],[1567080353875,["GJX@GJXAIOU",[[1,6309,"文件"]],[6309,6309],[6311,6311]]],[1567080354189,["GJX@GJXAIOU",[[1,6340,"\n"]],[6311,6311],[6312,6312]]],[1567080389450,["GJX@GJXAIOU",[[1,6313,"···"]],[6313,6313],[6316,6316]]],[1567080390566,["GJX@GJXAIOU",[[-1,6313,"···"]],[6316,6316],[6313,6313]]],[1567080390861,["GJX@GJXAIOU",[[-1,6340,"\n"]],[6313,6313],[6312,6312]]],[1567080392066,["GJX@GJXAIOU",[[1,6312,"```"]],[6312,6312],[6315,6315]]],[1567080392104,["GJX@GJXAIOU",[[1,6315,"language\n```\n"]],[6315,6315],[6315,6323]]],[1567080393019,["GJX@GJXAIOU",[[-1,6315,"language"],[1,6323,"x"]],[6315,6323],[6316,6316]]],[1567080393336,["GJX@GJXAIOU",[[1,6316,"ml"]],[6316,6316],[6318,6318]]],[1567080393613,["GJX@GJXAIOU",[[1,6319,"\n"]],[6318,6318],[6319,6319]]],[1567080397224,["GJX@GJXAIOU",[[1,6319,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n\t<select id=\"selById\" resultType=\"int\">\n\t\tselect count(*) from flower\n\t</select>\n\t\n\t<select id=\"c\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n</mapper>"]],[6319,6319],[6998,6998]]],[1567080579155,[null,[[-1,1230,"."],[1,1231,"*"]],[1230,1230],[1232,1232]]],[1567080579155,[null,[[1,1230,"."],[-1,1230,"*"]],[1232,1232],[1230,1230]]],[1567080554798,["GJX@GJXAIOU",[[-1,24,"## 一、简介\n针对于数据库的封装，省去书写 DaoImpl 的步骤；"]],[24,59],[24,24]]],[1567080554918,["GJX@GJXAIOU",[[-1,25,"\n"]],[24,24],[23,23]]],[1567080556597,["GJX@GJXAIOU",[[-1,24,"\n"]],[23,23],[22,22]]],[1567080559990,["GJX@GJXAIOU",[[-1,27,"二"]],[28,28],[27,27]]],[1567080560803,["GJX@GJXAIOU",[[1,27,"qian"]],[27,27],[31,31]]],[1567080561901,["GJX@GJXAIOU",[[-1,27,"qian"]],[31,31],[27,27]]],[1567080564599,["GJX@GJXAIOU",[[1,27,"一"]],[27,27],[28,28]]],[1567080569566,["GJX@GJXAIOU",[[1,29,"前言："]],[29,29],[32,32]]],[1567080575173,["GJX@GJXAIOU",[[-1,189,"\n"]],[189,189],[188,188]]],[1567080577969,["GJX@GJXAIOU",[[-1,192,"三"]],[193,193],[192,192]]],[1567080578385,["GJX@GJXAIOU",[[1,192,"二"]],[192,192],[193,193]]],[1567080639157,[null,[[-1,1195,"."],[1,1196,"*"]],[1195,1195],[1197,1197]]],[1567080639157,[null,[[1,1195,"."],[-1,1195,"*"]],[1197,1197],[1195,1195]]],[1567080584533,["GJX@GJXAIOU",[[-1,335," ,"]],[337,337],[335,335]]],[1567080586168,["GJX@GJXAIOU",[[1,337,"，"]],[337,337],[338,338]]],[1567080597417,["GJX@GJXAIOU",[[1,453,"·"]],[453,453],[454,454]]],[1567080598753,["GJX@GJXAIOU",[[-1,453,"·"]],[454,454],[453,453]]],[1567080599162,["GJX@GJXAIOU",[[1,453,"`"]],[453,453],[454,454]]],[1567080600447,["GJX@GJXAIOU",[[1,460,"`"]],[460,460],[461,461]]],[1567080601368,["GJX@GJXAIOU",[[1,484,"`"]],[484,484],[485,485]]],[1567080602128,["GJX@GJXAIOU",[[1,480,"`"]],[480,480],[481,481]]],[1567080603479,["GJX@GJXAIOU",[[-1,481," "]],[482,482],[481,481]]],[1567080604870,["GJX@GJXAIOU",[[-1,483," "]],[484,484],[483,483]]],[1567080607464,["GJX@GJXAIOU",[[1,478,"`"]],[478,478],[479,479]]],[1567080608463,["GJX@GJXAIOU",[[1,473,"`"]],[473,473],[474,474]]],[1567080623023,["GJX@GJXAIOU",[[1,564,"y"]],[564,564],[565,565]]],[1567080623109,["GJX@GJXAIOU",[[1,564," "],[1,565," i"]],[565,565],[567,567]]],[1567080624454,["GJX@GJXAIOU",[[-1,565,"yi "]],[567,567],[564,564]]],[1567080625708,["GJX@GJXAIOU",[[1,564,"一般"]],[564,564],[566,566]]],[1567080627579,["GJX@GJXAIOU",[[1,562,"；"]],[562,562],[563,563]]],[1567080631231,["GJX@GJXAIOU",[[-1,536,","]],[537,537],[536,536]]],[1567080631730,["GJX@GJXAIOU",[[1,536,"；"]],[536,536],[537,537]]],[1567080635502,["GJX@GJXAIOU",[[-1,613,":"]],[614,614],[613,613]]],[1567080635924,["GJX@GJXAIOU",[[1,613,"："]],[613,613],[614,614]]],[1567080638801,["GJX@GJXAIOU",[[1,580," "]],[580,580],[581,581]]],[1567080699157,[null,[[-1,1203,"."],[1,1204,"*"]],[1203,1203],[1205,1205]]],[1567080699157,[null,[[1,1203,"."],[-1,1203,"*"]],[1205,1205],[1203,1203]]],[1567080659442,["GJX@GJXAIOU",[[1,786,"\n"]],[786,786],[787,787]]],[1567080662302,["GJX@GJXAIOU",[[-1,826,"\n"]],[826,826],[825,825]]],[1567080696141,["GJX@GJXAIOU",[[-1,999,". "]],[1001,1001],[999,999]]],[1567080697210,["GJX@GJXAIOU",[[1,999,"。"]],[999,999],[1000,1000]]],[1567080697711,["GJX@GJXAIOU",[[1,1000,"\n"]],[1000,1000],[1001,1001]]],[1567080759159,[null,[[-1,1203,"."],[1,1204,"*"]],[1203,1203],[1205,1205]]],[1567080759159,[null,[[1,1203,"."],[-1,1203,"*"]],[1205,1205],[1203,1203]]],[1567080702101,["GJX@GJXAIOU",[[1,956,"、。"]],[956,956],[958,958]]],[1567080703957,["GJX@GJXAIOU",[[-1,955,".、"]],[957,957],[955,955]]],[1567080706125,["GJX@GJXAIOU",[[-1,926,"."]],[927,927],[926,926]]],[1567080706488,["GJX@GJXAIOU",[[1,926,"。"]],[926,926],[927,927]]],[1567080708518,["GJX@GJXAIOU",[[-1,902,"."]],[903,903],[902,902]]],[1567080708955,["GJX@GJXAIOU",[[1,902,"。"]],[902,902],[903,903]]],[1567080711542,["GJX@GJXAIOU",[[-1,824,"."]],[825,825],[824,824]]],[1567080711993,["GJX@GJXAIOU",[[1,824,"。"]],[824,824],[825,825]]],[1567080714016,["GJX@GJXAIOU",[[-1,878,"."]],[879,879],[878,878]]],[1567080714502,["GJX@GJXAIOU",[[1,878,"。"]],[878,878],[879,879]]],[1567080753383,["GJX@GJXAIOU",[[-1,1207,"\n"]],[1206,1206],[1205,1205]]],[1567080879161,[null,[[-1,1203,"."],[1,1204,"*"]],[1203,1203],[1205,1205]]],[1567080879161,[null,[[1,1203,"."],[-1,1203,"*"]],[1205,1205],[1203,1203]]],[1567080848415,["GJX@GJXAIOU",[[1,1356,"**"],[1,1371,"**"]],[1356,1371],[1356,1375]]]],null,"GJX@GJXAIOU"],["79d538e4-4ff0-4e92-b2d1-3112dbaf1eab",1567125264935,"# FrameDay01 Mybatis3\n\n\n## 一、前言：数据库 SQL命令\n\n- 创建数据库并指定编码\n`Create database 数据库名 default character set utf8`\n \n - 创建表\n```java\nCreatetable 表名(\n   列名 类型 约束 auto_increament comment \"备注\"\n);\n```\n\n\n## 二、命名规范\n\n* 项目名:没有要求,不起中文\n* 包:公司域名倒写 com.bjsxt\n* 数据访问层:dao, persist, **mapper**\n* 实体:entity, model, bean,javabean, **pojo**\n* 业 务 逻 辑 : **service**，biz \n* 控制器: controller, **servlet**,action,web\n* 过滤器: filter\n* 异常: exception\n* 监听器:listener\n* 注释:\n  * 类上和方法上使用文档注释 `/** */`\n  * 在方法里面使用`/* */` 或`//`\n* 类: 大驼峰\n* 方法,属性:小驼峰\n\n## 四、MVC开发模式\n\n- M: Model 模型；实体类和业务和 dao\n- V: view 视图 ；现在一般 使用. JSP\n- C: Controller 控制器,现在使用servlet\n  - 作用：视图和逻辑分离\n- MVC 适用场景:大型项目开发.\n- 项目实现步骤：\n  - 先设计数据库\n  - 再写实体类\n  - 持久层DAO\n  - 业务逻辑\n  - 控制器\n  - 视图\n![MVC开发模式]($resource/MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F.png)\n\n\n## 五、框架概念\n\n- 框架:软件的半成品.未解决问题制定的一套约束,在提供功能基础上进行扩充。\n- **框架中一些不能被封装的代码(变量),需要使用框架者新建一个xml 文件,在文件中添加变量内容**。\n  - 需要建立特定位置和特定名称的配置文件。\n  - 需要使用 xml 解析技术和反射技术。\n\n**常用概念**\n- 类库:提供的类没有封装一定逻辑。\n举例:类库就是名言警句,写作文时引入名言警句\n\n- 框架:区别于类库,里面有一些约束。\n举例:框架是填空题\n\n## 六、MyBatis 简介\n\n- Mybatis 开源免费框架.原名叫 iBatis,2010 在 google  code,2013 年迁移到 github\n\n- 作用: **数据访问层（即是 Dao）框架**.\n  - 底层是对 JDBC 的封装.\n\n- mybatis 优点之一:\n  - **使用 mybatis 时不需要编写实现类,只需要写需要执行的 sql 命令。**\n\n\n## 七、MyBatis 使用\n\n### （一）环境搭建\n\n- 步骤一：导入 jar\n![MyBatis需要导入的Jar包]($resource/MyBatis%E9%9C%80%E8%A6%81%E5%AF%BC%E5%85%A5%E7%9A%84Jar%E5%8C%85.png)\n- 步骤二：**在 src 下新建全局配置文件**(编写 JDBC 四个变量)\n  - 没有名称和地址要求\n  - 在全局配置文件中引入 DTD 或 schema\n    - 如果导入 dtd 后没有提示：Window--> preference --> XML --> XMl catalog --> add 按钮\n  - 全局配置文件内容\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n  PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n  \n<configuration>\n\t<!-- default 为引用 environment 的 id,即当前所使用的环境 -->\n\t<environments default=\"default\">\n\t\t<!-- 声明可以使用的环境 -->\n\t\t<environment id=\"default\">\n\t\t\t<!-- 使用原生JDBC事务 -->\n\t\t\t<transactionManager type=\"JDBC\"></transactionManager>\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n\t\t\t\t<property name=\"url\" value=\"jdbc:mysql://localhost:3306/ssm\"/>\n\t\t\t\t<property name=\"username\" value=\"root\"/>\n\t\t\t\t<property name=\"password\" value=\"smallming\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t<mappers>\n\t\t<mapper resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n\t</mappers>\n</configuration>\n```\n\n- 步骤三：新建以 mapper 结尾的包,在包下新建:实体类名+Mapper.xml\n  - 文件作用:编写需要执行的 SQL 命令\n  - 把 xml 文件理解成实现类.\n  - xml 文件内容为：\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:表示方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect * from flower\n\t</select>\n</mapper>\n```\n\n- 步骤四：测试结果(只有在单独使用 mybatis 时使用,最后 ssm 整合时下面代码不需要编写\n```java\nimport com.bjsxt.pojo.Flower;\n\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n### （二）环境搭建详解\n\n**全局配置文件中内容**\n- <transactionManager/> type 属性可取值\n  - JDBC,事务管理使用 JDBC 原生事务管理方式\n  - MANAGED 把事务管理转交给其他容器.相当于设置原生JDBC 事务setAutoMapping(false);\n- <dataSouce/>type 属性可取值：\n  - POOLED 使用数据库连接池\n  - UNPOOLED 不使用数据库连接池,和直接使用 JDBC 一样\n  - JNDI :是 java 命名目录接口技术.\n\n## 八、数据库连接池【补充知识】\n\n- 在内存中开辟一块空间,存放多个数据库连接对象. \n- JDBC Tomcat Pool,直接由 tomcat 产生数据库连接池. \n- 图示:数据库连接池中有很多连接，他们可能处于 Active 或者 Idle 等等状态；\n  - active 活跃状态:当前连接对象被应用程序使用中\n  - Idle 空闲状态:等待应用程序使用\n- 使用数据库连接池的目的\n  - 在高频率访问数据库时,使用数据库连接池可以降低服务器系统压力,提升程序运行效率.\n    -  小型项目不适用数据库连接池.\n- 实现 JDBC tomcat Pool 的步骤.\n  - 在 web 项目的 META-INF 中存放 context.xml,在 context.xml 编写数据库连接池相关属性\n  - 把项目发布到 tomcat 中,则数据库连接池产生了\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\t<Resource\n\t\tdriverClassName=\"com.mysql.jdbc.Driver\"\n\t\turl=\"jdbc:mysql://localhost:3306/ssm\"\n\t\tusername=\"root\"\n\t\tpassword=\"smallming\"\n\t\tmaxActive=\"50\"\n\t\tmaxIdle=\"20\"\n\t\tname=\"test\"\n\t\tauth=\"Container\"\n\t\tmaxWait=\"10000\"\n\t\ttype=\"javax.sql.DataSource\"\n\t/>\n</Context>\n```\n\n - 可以在 java 中使用 jndi 获取数据库连接池中对象\n  - Context:上下文接口.context.xml 文件对象类型；代码见下面\n  - 当关闭连接对象时,把连接对象归还给数据库连接池,把状态改变成 Idle\n```java\n@WebServlet(\"/pool\")\npublic class DemoServlet extends HttpServlet {\n\t@Override\n\tprotected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n\t\ttry {\n\t\t\tContext cxt = new InitialContext();\n\t\t\tDataSource ds = (DataSource) cxt.lookup(\"java:comp/env/test\");\n\t\t\tConnection conn = ds.getConnection();\n\t\t\tPreparedStatement ps = conn.prepareStatement(\"select * from flower\");\n\t\t\tResultSet rs = ps.executeQuery();\n\t\t\tres.setContentType(\"text/html;charset=utf-8\");\n\t\t\tPrintWriter out = res.getWriter();\n\t\t\twhile(rs.next()){\n\t\t\t\tout.print(rs.getInt(1)+\"&nbsp;&nbsp;&nbsp;&nbsp;\"+rs.getString(2)+\"<br/>\");\n\t\t\t}\n\t\t\tout.flush();\n\t\t\tout.close();\n\t\t\trs.close();\n\t\t} catch (NamingException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n```\n\n\n## 九、三种查询方式\n\n- selectList()  返回值为 List<resultType  属性控制>\n适用于查询结果都需要遍历的需求\n\n- selectOne() 返回值 Object,\n适用于返回结果只是变量或一行数据时\n\n- selectMap() 返回值 Map\n  - 适用于需要在查询结果中通过某列的值取到这行数据的需求.\n  - Map<key,resultType  控制>\n```java\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\t// selectList\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t// selectOne\n\t\tint count = session.selectOne(\"a.b.selById\");\n\t\tSystem.out.println(count);\n\t\t\n\t\t// selectMap\n\t\t//把数据库中哪个列的值当作map的key\n\t\tMap<Object, Object> map = session.selectMap(\"a.b.c\", \"name123\");\n\t\tSystem.out.println(map);\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n对应的 XML 文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n\t<select id=\"selById\" resultType=\"int\">\n\t\tselect count(*) from flower\n\t</select>\n\t\n\t<select id=\"c\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n</mapper>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1567125251602,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1567125251706,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1567125253173,["GJX@GJXAIOU",[[1,0,"-"]],[0,0],[1,1]]],[1567125253300,["GJX@GJXAIOU",[[1,0,"-"]],[1,1],[2,2]]],[1567125253436,["GJX@GJXAIOU",[[1,2,"-"]],[2,2],[3,3]]],[1567125253471,["GJX@GJXAIOU",[[1,5,"---\n\n\n"]],[3,3],[4,4]]],[1567125257746,["GJX@GJXAIOU",[[1,4,"style: summer"]],[4,4],[17,17]]],[1567125260304,["GJX@GJXAIOU",[[-1,23,"\n"]],[23,23],[22,22]]],[1567125260423,["GJX@GJXAIOU",[[-1,22,"\n"]],[22,22],[21,21]]],[1567125263080,["GJX@GJXAIOU",[[-1,45,"\n"]],[45,45],[44,44]]],[1567125664838,["GJX@GJXAIOU",[[1,665,"**"],[1,671,"**"]],[665,671],[665,675]]],[1567125728091,["GJX@GJXAIOU",[[1,697,":yongy"]],[697,697],[703,703]]],[1567125729321,["GJX@GJXAIOU",[[-1,697,":yongy"]],[703,703],[697,697]]],[1567125732551,["GJX@GJXAIOU",[[1,697,"：用于分装"]],[697,697],[702,702]]],[1567125734081,["GJX@GJXAIOU",[[-1,700,"分装"]],[702,702],[700,700]]],[1567125741270,["GJX@GJXAIOU",[[1,700,"封装数据"]],[700,700],[704,704]]],[1567125768442,["GJX@GJXAIOU",[[1,916,"**"],[1,934,"**"]],[916,934],[916,938]]],[1567125773609,["GJX@GJXAIOU",[[1,944,"**"],[1,962,"**"]],[944,962],[944,966]]],[1567126135941,["GJX@GJXAIOU",[[1,1471,"【使用见Blogs"]],[1471,1471],[1480,1480]]],[1567126135978,["GJX@GJXAIOU",[[1,1475," "]],[1480,1480],[1481,1481]]],[1567126137386,["GJX@GJXAIOU",[[1,1481," __"]],[1481,1481],[1483,1483]]],[1567126138105,["GJX@GJXAIOU",[[-1,1483,"_"]],[1483,1483],[1482,1482]]],[1567126139481,["GJX@GJXAIOU",[[-1,1482,"_"]],[1483,1483],[1482,1482]]],[1567126145132,["GJX@GJXAIOU",[[1,1482,"-> DTD】"]],[1482,1482],[1489,1489]]],[1567126296106,["GJX@GJXAIOU",[[-1,2128,"ssm"]],[2131,2131],[2128,2128]]],[1567126299646,["GJX@GJXAIOU",[[1,2128,"数据库名"]],[2128,2128],[2132,2132]]],[1567126309803,["GJX@GJXAIOU",[[-1,2011,"\t"],[-1,2068,"\t"],[-1,2139,"\t"],[-1,2181,"\t"]],[2012,2230],[2011,2226]]],[1567126311908,["GJX@GJXAIOU",[[1,2008,"  "],[1,2067,"  "],[1,2134,"  "],[1,2178,"  "]],[2011,2226],[2013,2234]]],[1567126312537,["GJX@GJXAIOU",[[1,2010,"  "],[1,2069,"  "],[1,2140,"  "],[1,2184,"  "]],[2013,2234],[2015,2242]]],[1567126316057,["GJX@GJXAIOU",[[-1,2014,"\t"]],[2015,2015],[2014,2014]]],[1567126317317,["GJX@GJXAIOU",[[1,2014,"  "]],[2014,2014],[2016,2016]]],[1567126320225,["GJX@GJXAIOU",[[-1,2077,"\t\t"]],[2079,2079],[2077,2077]]],[1567126321973,["GJX@GJXAIOU",[[1,2077,"      "]],[2077,2077],[2083,2083]]],[1567126325297,["GJX@GJXAIOU",[[-1,2153,"\t"]],[2154,2154],[2153,2153]]],[1567126326115,["GJX@GJXAIOU",[[1,2153,"  "]],[2153,2153],[2155,2155]]],[1567126328626,["GJX@GJXAIOU",[[-1,2201,"\t\t"]],[2203,2203],[2201,2201]]],[1567126330308,["GJX@GJXAIOU",[[1,2201,"      "]],[2201,2201],[2207,2207]]],[1567126359961,["GJX@GJXAIOU",[[-1,2240,"smallming"]],[2249,2249],[2240,2240]]],[1567126362420,["GJX@GJXAIOU",[[1,2240,"GJXAIOU"]],[2240,2240],[2247,2247]]],[1567126527765,["GJX@GJXAIOU",[[1,2457,"  "]],[2457,2457],[2459,2459]]],[1567126530738,["GJX@GJXAIOU",[[-1,2456,":  "]],[2459,2459],[2456,2456]]],[1567126531438,["GJX@GJXAIOU",[[1,2456,"："]],[2456,2456],[2457,2457]]],[1567126572402,["GJX@GJXAIOU",[[-1,2493," - "]],[2496,2496],[2493,2493]]],[1567127096131,["GJX@GJXAIOU",[[-1,4812,"\t"],[-1,4819,"\t"],[-1,4858,"\t"],[-1,4926,"\t"],[-1,4965,"\t"],[-1,5040,"\t"],[-1,5075,"\t"],[-1,5125,"\t"],[-1,5165,"\t"],[-1,5184,"\t"],[-1,5266,"\t"],[-1,5269,"\t"],[-1,5285,"\t"],[-1,5303,"\t"],[-1,5316,"\t"],[-1,5350,"\t"],[-1,5372,"\t"],[-1,5403,"\t"],[-1,5425,"\t"]],[4813,5428],[4812,5409]]],[1567127099780,["GJX@GJXAIOU",[[1,4811,"  "],[1,4818,"  "],[1,4856,"  "],[1,4921,"  "],[1,4961,"  "],[1,5033,"  "],[1,5069,"  "],[1,5118,"  "],[1,5155,"  "],[1,5175,"  "],[1,5254,"  "],[1,5258,"  "],[1,5273,"  "],[1,5288,"  "],[1,5302,"  "],[1,5333,"  "],[1,5356,"  "],[1,5384,"  "],[1,5407,"  "]],[4812,5409],[4814,5447]]],[1567127102458,["GJX@GJXAIOU",[[1,4814,"  "]],[4814,4814],[4816,4816]]],[1567127103488,["GJX@GJXAIOU",[[1,4826,"  "]],[4826,4826],[4828,4828]]],[1567127106642,["GJX@GJXAIOU",[[-1,4826,"  "]],[4828,4828],[4826,4826]]],[1567127113649,["GJX@GJXAIOU",[[-1,5450,"\t"]],[5451,5451],[5450,5450]]],[1567127114749,["GJX@GJXAIOU",[[1,5450,"  "]],[5450,5450],[5452,5452]]],[1567127137048,["GJX@GJXAIOU",[[-1,4512,"jndi"]],[4516,4516],[4512,4512]]],[1567127139838,["GJX@GJXAIOU",[[1,4512,"JNDI"]],[4512,4512],[4516,4516]]],[1567127159681,["GJX@GJXAIOU",[[-1,4503,"j"]],[4504,4504],[4503,4503]]],[1567127161519,["GJX@GJXAIOU",[[1,4503,"J"]],[4503,4503],[4504,4504]]],[1567127271285,["GJX@GJXAIOU",[[1,5478,"·"]],[5478,5478],[5479,5479]]],[1567127272827,["GJX@GJXAIOU",[[-1,5478,"·"]],[5479,5479],[5478,5478]]],[1567127274101,["GJX@GJXAIOU",[[1,5477,"`"]],[5477,5477],[5478,5478]]],[1567127277521,["GJX@GJXAIOU",[[1,5490,"`"]],[5490,5490],[5491,5491]]],[1567127279589,["GJX@GJXAIOU",[[1,5498,"`"]],[5498,5498],[5499,5499]]],[1567127284813,["GJX@GJXAIOU",[[1,5521,"`"]],[5521,5521],[5522,5522]]],[1567127288459,["GJX@GJXAIOU",[[1,5564,"`"]],[5564,5564],[5565,5565]]],[1567127290323,["GJX@GJXAIOU",[[1,5558,"`"]],[5558,5558],[5559,5559]]],[1567127291927,["GJX@GJXAIOU",[[1,5553,"`"]],[5553,5553],[5554,5554]]],[1567127294573,["GJX@GJXAIOU",[[1,5542,"`"]],[5542,5542],[5543,5543]]],[1567127298733,["GJX@GJXAIOU",[[1,5591,"`"]],[5591,5591],[5592,5592]]],[1567127300988,["GJX@GJXAIOU",[[1,5603,"`"]],[5603,5603],[5604,5604]]],[1567127302356,["GJX@GJXAIOU",[[1,5609,"`"]],[5609,5609],[5610,5610]]],[1567127304035,["GJX@GJXAIOU",[[1,5613,"`"]],[5613,5613],[5614,5614]]],[1567127309783,["GJX@GJXAIOU",[[1,5651,"`"]],[5651,5651],[5652,5652]]],[1567127313668,["GJX@GJXAIOU",[[1,5675,"`"]],[5675,5675],[5676,5676]]],[1567127362268,["GJX@GJXAIOU",[[1,6874,"// 这里的 "]],[6874,6874],[6881,6881]]],[1567127364340,["GJX@GJXAIOU",[[1,6881,"int xiang"]],[6881,6881],[6890,6890]]],[1567127365392,["GJX@GJXAIOU",[[-1,6885,"xiang"]],[6890,6890],[6885,6885]]],[1567127365982,["GJX@GJXAIOU",[[1,6885,"xiang"]],[6885,6885],[6890,6890]]],[1567127367401,["GJX@GJXAIOU",[[-1,6885,"xiang"]],[6890,6890],[6885,6885]]],[1567127373724,["GJX@GJXAIOU",[[1,6885,"相当于  IN"]],[6885,6885],[6892,6892]]],[1567127374585,["GJX@GJXAIOU",[[-1,6888,"  IN"]],[6892,6892],[6888,6888]]],[1567127402566,["GJX@GJXAIOU",[[1,6888," InIeget"]],[6888,6888],[6896,6896]]],[1567127403698,["GJX@GJXAIOU",[[-1,6891,"Ieget"]],[6896,6896],[6891,6891]]],[1567127405771,["GJX@GJXAIOU",[[1,6891,"ger"]],[6891,6891],[6894,6894]]],[1567127413785,["GJX@GJXAIOU",[[-1,6893,"r"]],[6894,6894],[6893,6893]]],[1567127414987,["GJX@GJXAIOU",[[1,6893,"ter"]],[6893,6893],[6896,6896]]],[1567127464962,["GJX@GJXAIOU",[[1,7141,"\n"]],[7112,7112],[7113,7113]]],[1567127465065,["GJX@GJXAIOU",[[1,7142,"\n"]],[7113,7113],[7114,7114]]],[1567127465177,["GJX@GJXAIOU",[[1,7143,"\n"]],[7114,7114],[7115,7115]]],[1567127465290,["GJX@GJXAIOU",[[1,7144,"\n"]],[7115,7115],[7116,7116]]],[1567127465418,["GJX@GJXAIOU",[[1,7145,"\n"]],[7116,7116],[7117,7117]]],[1567127465657,["GJX@GJXAIOU",[[1,7146,"\n"]],[7117,7117],[7118,7118]]],[1567127465801,["GJX@GJXAIOU",[[1,7147,"\n"]],[7118,7118],[7119,7119]]],[1567127465908,["GJX@GJXAIOU",[[1,7148,"\n"]],[7119,7119],[7120,7120]]],[1567127467093,["GJX@GJXAIOU",[[1,7120,"## "]],[7120,7120],[7123,7123]]]],null,"GJX@GJXAIOU"],["68d35084-4c53-4179-8f14-9b6bc072a1f9",1567317723452,"---\nstyle: summer\n---\n# FrameDay01 Mybatis3\n\n## 一、前言：数据库 SQL命令\n\n- 创建数据库并指定编码\n`Create database 数据库名 default character set utf8`\n \n - 创建表\n```java\nCreatetable 表名(\n   列名 类型 约束 auto_increament comment \"备注\"\n);\n```\n\n\n## 二、命名规范\n\n* 项目名:没有要求,不起中文\n* 包:公司域名倒写 com.bjsxt\n* 数据访问层:dao, persist, **mapper**\n* 实体:entity, model, bean,javabean, **pojo**\n* 业 务 逻 辑 : **service**，biz \n* 控制器: controller, **servlet**,action,web\n* 过滤器: filter\n* 异常: exception\n* 监听器:listener\n* 注释:\n  * 类上和方法上使用文档注释 `/** */`\n  * 在方法里面使用`/* */` 或`//`\n* 类: 大驼峰\n* 方法,属性:小驼峰\n\n## 四、MVC开发模式\n\n- M: Model 模型；实体类和业务和 dao\n- V: view 视图 ；现在一般 使用. JSP\n- C: Controller 控制器,现在使用servlet\n  - 作用：视图和逻辑分离\n- MVC 适用场景:大型项目开发.\n- **项目实现步骤**：\n  - 先设计数据库\n  - 再写实体类：用于封装数据\n  - 持久层DAO\n  - 业务逻辑\n  - 控制器\n  - 视图\n![MVC开发模式]($resource/MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F.png)\n\n\n## 五、框架概念\n\n- 框架:软件的半成品.未解决问题制定的一套约束,在提供功能基础上进行扩充。\n- **框架中一些不能被封装的代码(变量),需要使用框架者新建一个xml 文件,在文件中添加变量内容**。\n  - **需要建立特定位置和特定名称的配置文件**。\n  - **需要使用 xml 解析技术和反射技术**。\n\n**常用概念**\n- 类库:提供的类没有封装一定逻辑。\n举例:类库就是名言警句,写作文时引入名言警句\n\n- 框架:区别于类库,里面有一些约束。\n举例:框架是填空题\n\n## 六、MyBatis 简介\n\n- Mybatis 开源免费框架.原名叫 iBatis,2010 在 google  code,2013 年迁移到 github\n\n- 作用: **数据访问层（即是 Dao）框架**.\n  - 底层是对 JDBC 的封装.\n\n- mybatis 优点之一:\n  - **使用 mybatis 时不需要编写实现类,只需要写需要执行的 sql 命令。**\n\n\n## 七、MyBatis 使用\n\n### （一）环境搭建\n\n- 步骤一：导入 jar\n![MyBatis需要导入的Jar包]($resource/MyBatis%E9%9C%80%E8%A6%81%E5%AF%BC%E5%85%A5%E7%9A%84Jar%E5%8C%85.png)\n- 步骤二：**在 src 下新建全局配置文件**(编写 JDBC 四个变量)\n  - 没有名称和地址要求\n  - 在全局配置文件中引入 DTD 或 schema【使用见 Blogs -> DTD】\n    - 如果导入 dtd 后没有提示：Window--> preference --> XML --> XMl catalog --> add 按钮\n  - 全局配置文件内容\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n  PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n  \n<configuration>\n\t<!-- default 为引用 environment 的 id,即当前所使用的环境 -->\n\t<environments default=\"default\">\n\t\t<!-- 声明可以使用的环境 -->\n\t\t<environment id=\"default\">\n\t\t\t<!-- 使用原生JDBC事务 -->\n\t\t\t<transactionManager type=\"JDBC\"></transactionManager>\n\t\t\t<dataSource type=\"POOLED\">\n    \t\t  <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n    \t      <property name=\"url\" value=\"jdbc:mysql://localhost:3306/数据库名\"/>\n    \t\t  <property name=\"username\" value=\"root\"/>\n    \t      <property name=\"password\" value=\"GJXAIOU\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t<mappers>\n\t\t<mapper resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n\t</mappers>\n</configuration>\n```\n\n- 步骤三：新建以 mapper 结尾的包,在包下新建:实体类名+Mapper.xml\n  - 文件作用：编写需要执行的 SQL 命令\n  - 把 xml 文件理解成实现类.\n xml 文件内容为：\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:表示方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect * from flower\n\t</select>\n</mapper>\n```\n\n- 步骤四：测试结果(只有在单独使用 mybatis 时使用,最后 ssm 整合时下面代码不需要编写\n```java\nimport com.bjsxt.pojo.Flower;\n\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n### （二）环境搭建详解\n\n**全局配置文件中内容**\n- <transactionManager/> type 属性可取值\n  - JDBC,事务管理使用 JDBC 原生事务管理方式\n  - MANAGED 把事务管理转交给其他容器.相当于设置原生JDBC 事务setAutoMapping(false);\n- <dataSouce/>type 属性可取值：\n  - POOLED 使用数据库连接池\n  - UNPOOLED 不使用数据库连接池,和直接使用 JDBC 一样\n  - JNDI :是 java 命名目录接口技术.\n\n## 八、数据库连接池【补充知识】\n\n- 在内存中开辟一块空间,存放多个数据库连接对象. \n- JDBC Tomcat Pool,直接由 tomcat 产生数据库连接池. \n- 图示:数据库连接池中有很多连接，他们可能处于 Active 或者 Idle 等等状态；\n  - active 活跃状态:当前连接对象被应用程序使用中\n  - Idle 空闲状态:等待应用程序使用\n- 使用数据库连接池的目的\n  - 在高频率访问数据库时,使用数据库连接池可以降低服务器系统压力,提升程序运行效率.\n    -  小型项目不适用数据库连接池.\n- 实现 JDBC tomcat Pool 的步骤.\n  - 在 web 项目的 META-INF 中存放 context.xml,在 context.xml 编写数据库连接池相关属性\n  - 把项目发布到 tomcat 中,则数据库连接池产生了\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\t<Resource\n\t\tdriverClassName=\"com.mysql.jdbc.Driver\"\n\t\turl=\"jdbc:mysql://localhost:3306/ssm\"\n\t\tusername=\"root\"\n\t\tpassword=\"smallming\"\n\t\tmaxActive=\"50\"\n\t\tmaxIdle=\"20\"\n\t\tname=\"test\"\n\t\tauth=\"Container\"\n\t\tmaxWait=\"10000\"\n\t\ttype=\"javax.sql.DataSource\"\n\t/>\n</Context>\n```\n\n - 可以在 Java 中使用 JNDI 获取数据库连接池中对象\n  - Context:上下文接口.context.xml 文件对象类型；代码见下面\n  - 当关闭连接对象时,把连接对象归还给数据库连接池,把状态改变成 Idle\n```java\n@WebServlet(\"/pool\")\npublic class DemoServlet extends HttpServlet {\n\t@Override\n\tprotected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n  \t  try {\n  \t\tContext cxt = new InitialContext();\n  \t\tDataSource ds = (DataSource) cxt.lookup(\"java:comp/env/test\");\n  \t\tConnection conn = ds.getConnection();\n  \t\tPreparedStatement ps = conn.prepareStatement(\"select * from flower\");\n  \t\tResultSet rs = ps.executeQuery();\n  \t\tres.setContentType(\"text/html;charset=utf-8\");\n  \t\tPrintWriter out = res.getWriter();\n  \t\twhile(rs.next()){\n  \t\t\tout.print(rs.getInt(1)+\"&nbsp;&nbsp;&nbsp;&nbsp;\"+rs.getString(2)+\"<br/>\");\n  \t\t}\n  \t\tout.flush();\n  \t\tout.close();\n  \t\trs.close();\n  \t} catch (NamingException e) {\n  \t\te.printStackTrace();\n  \t} catch (SQLException e) {\n  \t\te.printStackTrace();\n  \t}\n  }\n}\n```\n\n\n## 九、三种查询方式\n\n- `selectList()`  返回值为 `List<resultType  属性控制>`\n适用于查询结果都需要遍历的需求\n\n- `selectOne()` 返回值 `Object`,\n适用于返回结果只是变量或一行数据时\n\n- `selectMap()` 返回值 `Map`\n  - 适用于需要在查询结果中通过某列的值取到这行数据的需求.\n  - `Map<key,resultType  控制>`\n```java\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\t// selectList\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t// selectOne\n\t\tint count = session.selectOne(\"a.b.selById\");\n\t\tSystem.out.println(count);\n\t\t\n\t\t// selectMap\n\t\t//把数据库中哪个列的值当作map的key\n\t\tMap<Object, Object> map = session.selectMap(\"a.b.c\", \"name123\");\n\t\tSystem.out.println(map);\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n对应的 XML 文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t// 这里的 int 相当于 Ingeter\n\t<select id=\"selById\" resultType=\"int\">\n\t\tselect count(*) from flower\n\t</select>\n\t\n\t<select id=\"c\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n</mapper>\n```\n\n\n\n\n\n\n\n## \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1567317681177,["GJX@GJXAIOU",[[1,7123," "]],[7123,7123],[7124,7124]]],[1567317977741,["GJX@GJXAIOU",[[1,7153,"\n"]],[7124,7124],[7125,7125]]],[1567317979185,["GJX@GJXAIOU",[[1,7125,"**[**今日课程大纲**]**\n\n**<settings>**标签常用属性介绍\n\n**MyBatis** 对 **Log4J** 的支持\n\n**Log4J** 复习\n\n**parameterType** 属性**(**对象**,map,**基本类型**,#{},${}**等**)**\n\n**<typeAliases>**两种别名配置及内置别名**MyBatis** 实现新增及 **MyBatis** 事务\n\n**MyBatis** 实现删除\n\n**MyBatis** 实现修改\n\n**[**知识点详解**]**\n\n一**.**注解\n\n1.注解存在的意义:简化 xml 文件的开发.\n\n2.注解在 servlet 3.0 规范之后大力推广的.\n\n3.注解前面的@XXX,表示引用一个@interface\n\n3.1 @interface 表示注解声明\n\n4.注解可以有属性,因为注解其实就是一个接口(类)\n\n4.1 每次使用注解都需要导包\n\n5.注解语法: @XXXX(属性名= 值)\n\n6.值的分类\n\n6.1 如果值是基本数据类型或字符串: 属性名=值\n\n6.2 如果值是数组类型: 属性名={值,值}\n\n6.2.1 如果只有一个值可以省略大括号\n\n6.3 如果值是类类型,属性名=@名称\n\n7.如果注解只需要给一个属性赋值,且这个属性是默认属性,可以省略属性名\n\n二**.** 路径\n\n1. 编写路径为了告诉编译器如何找到其他资源.\n\n2. 路径分类\n\n2.1 相对路径: 从当前资源出发找到其他资源的过程\n\n2.2 绝对路径: 从根目录(服务器根目录或项目根目录)出发找到其他资源的过程\n\n2.2.1 标志: 只要以/开头的都是绝对路径\n\n3. 绝对路径:\n\n3.1 如果是请求转发 / 表示项目根目录(WebContent)\n\n3.2 其他重定向,<img/> <script/>,<style/>,location.href 等/都表示服务器根目录(tomcat/webapps 文件夹)\n\n4. 如果客户端请求的控制器,控制器转发到JSP 后,jsp 中如果使用相对路径,需要按照控制器的路径去找其他资源.\n\n4.1 保险办法:使用绝对路径,可以防止上面的问题.\n\n# 三. Log4J\n\n1. 由 apache 推出的开源免费日志处理的类库.\n\n2. 为什么需要日志:\n\n2.1 在项目中编写 System.out.println();输出到控制台,当项目发布到 tomcat 后,没有控制台(在命令行界面能看见.),不容易观察一些输出结果.\n\n2.2 log4j 作用,不仅能把内容输出到控制台,还能把内容输出到文件中.便于观察结果.\n\n3. 使用步骤:\n\n3.1 导入 log4j-xxx.jar\n\n3.2 在 src 下新建 log4j.properties(路径和名称都不允许改变)\n\n3.2.1 ConversionPattern :写表达式\n\n3.2.2 log4j.appender.LOGFILE.File  文件位置及名称(日志文件扩展名.log)\n\n![文本框: log4j.rootCategory=DEBUG,  CONSOLE  ,LOGFILE\n\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppend er log4j.appender.CONSOLE.layout=org.apache.log4j.Patter nLayout log4j.appender.CONSOLE.layout.ConversionPattern=%C  %d{\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image001.gif)\n\n![文本框: YYYY-MM-dd  hh:mm:ss}\t%m  %n\n\nlog4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=E:/my.log log4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.Patter nLayout log4j.appender.LOGFILE.layout.ConversionPattern=%C\t%m\n%L %n\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image002.gif)\n\n4. log4j 输出级别（一共五个级别）\n\n4.1 fatal(致命错误) >  error  ( 错误)  >  warn  ( 警告)  >  info(普通信息)  >  debug(调试信息)\n\n4.2 ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image003.jpg)在 log4j.properties 的第一行中控制输出级别，只有大于等于该级别信息才输出\n\n5. log4j 输出目的地\n\n5.1 在一行控制输出目的地\n\n表示控制台 ，表示文件\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg)\n\n实际使用：新建一个类，例如：Test类\n\n |  | \n\n6\\. pattern\n\n |   | 中常用几个表达式（区分大小写）Logger  logger = Logger.getLogger(Test.class);\n\nlogger.debug(\"这是调试信息\"); // 具体的方法看\n\n上面输出级别调用不同的方法\n\n6.1 %C输出包名+类名\n\n6.2 %d{YYYY-MM-dd  HH:mm:ss}\n\n使 用 二 ： 在 catch 中 ： logger.error(e.getMessage()); 即可，注意在\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg)时间log4j配置文件中加上相关的表达式；\n\n6.3 %L 行号\n\n6.4%m 信息\n\n6.5%n 换行\n\n上面可以多个一起使用， 中间空格就行\n\n# 四. <settings>标签\n\n往控制台输出\n\n往日志文件输出\n\nPatternLayout表示输出格式为表达式\n\n这个是具体的表达式格式\n\n输出日志文件名，默认是相对路径 true表示往后追加，flase表示先清空然后追加\n\n1.在 mybatis 全局配置文件中通过<settings>标签控制 mybatis 全局开\n\n关\n\n2.在 mybatis.xml 中开启 log4j 命令如下：\n\n2.1 必须保证有 log4j.jar\n\n2.2     |  |\n|  | ![文本框: <settings>](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image007.gif) | \n在 src 下有 log4j.properties\n\n![文本框: <setting  name=\"logImpl\"  value=\"LOG4J\"/>\n\n</settings>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image008.gif)\n\n3. log4j 中可以输出指定内容的日志(控制某个局部内容的日志级别)\n\n3.1 命名级别(包级别): <mapper>namespace 属性中除了最后一个类名\n\n例如 namespace=”com.bjsxt.mapper.PeopleMapper” 其中包级别\n\n为com.bjsxt.mapper ,需要在 log4j.propeties 中做两件事情\n\n3.1.1 先在总体级别调成 Error 不输出无用信息\n\n3.1.2 在设置某个指定位置级别为 DEBUG\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image009.jpg)只有这个类输出是Debug级别，其他都是ERROR级别。\n\n3.2 类级别\n\n3.2.1 namespace 属性值 ,相当于namespace 类名\n\n3.3 方法级别\n\n3.3.2 使用 namespace 属性值+标签 id 属性值\n\n五 **parameterType** 属性（Mybatis中参数设置）\n\n1. 在 XXXMapper.xml  中<select><delete>等标签的 parameterType 可以\n\n控制参数类型（例如可以传入select语句的参数，控制输入参数的类型）\n\n2. SqlSession 的 selectList()和 selectOne()的第二个参数和 selectMap()的第三个参数都表示方法的参数.\n\n2.1     |  |\n|  | ![文本框: People  p  =  session.selectOne(\"a.b.selById\",1);\n\nSystem.out.println(p);\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image010.gif) | \n示例,\n\n2.2 在 Mapper.xml  中可以通过#{}获取参数（代码见下）\n\n2.2.1 parameterType  控制参数类型\n\n2.2.2 #{}获取参数内容\n\n2.2.2.1 使用索引,从 0 开始 #{0}表示第一个参数\n\n2.2.2.2 也可以使用#{param1}第一个参数\n\n2.2.2.3 如果只有一个参数(其参数应该是基本数据类型或 String),mybatis 对#{}里面内容没有要求只要写内容即可.\n\n2.2.2.4 如果参数是对象#{属性名}\n\n2.2.2.5     |  | \n\n<select id=_\"__s__e__l__B__y__I__d__\"_ resultType=_\"__c__o__m__.__b__j__sx__t.__po__j__o__.__P__eop__l__e__\"_ **p****a****r****a****m****e****t****e****r****T****y****p****e****=****_\"_****_i_****_n_****_t_****_\"_**>\n\nselect *  from  people  where  id=**#{0****}**\n\n</select>\n\n |   | 如果参数是 map， 写成#{key} ：当需要传递多个参数时候，目前只能使用map 或者对象\n\n3\\. #{} 和 ${} 的 区 别\n\n3.1 #{} 获取参数的内容,支持索引获取,或者使用param1 获取指定位置参数,并且 SQL 使用?占位符\n\n3.2 ${} 字符串拼接，不使用?,默认找${内容}内容的 get/set 方法,如果\n\n写数字,就是一个数字\n\n<select id=\"test\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"com.bjsxt.pojo.People\"> PeopleMapper.xml: select * from people where id =  ${id}\n\n  </select>\n\nPeople peo =new People();\n\nTest.java\n\npeo.setId(1);\n\nPeople p = session.selectOne(\"a.b.selById\",people)\n\n**4.** 如果在 xml 文件中出现 “<” , “>” ,双引号 等特殊字符时可以使用\n\n**XML** 文件转义标签**(XML** 自身的**)**\n\n4.1 <![CDATA[ 内 容 ]]>\n\n**5.** mybatis 中实现 mysql  分页写法\n\n5.1 ?不允许在关键字前后进行数学运算,需要在代码中计算完成后传递到 mapper.xml  中\n\n5.2     |  |\n|  | ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image011.gif) | \n在 java  代码中计算\n\n5.3 在 mapper.xml  中代码\n\n![文本框: <select id=\"page\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"map\">\nselect * from people limit #{pageStart},#{pageSize}\n\n</select>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image012.gif)\n\n六**. typeAliases** 别名（在mybatis.xml中进行配置，命令如下）\n\n1.系统内置别名: 就是把类型全小写（见文档）\n\n2.给某个类起别名\n\n2.1  |  |\n|  | ![文本框: <typeAliases>\n\n<typeAlias  type=\"com.bjsxt.pojo.People\" alias=\"peo\"/>\n</typeAliases>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image013.gif) | \nalias=”自定义”\n\n2.2 mapper.xml  中 peo 引用 People 类\n\n![文本框: <select  id=\"page\"  resultType=\"peo\"\n\nparameterType=\"map\">\n\nselect * from people limit #{pageStart},#{pageSize}\n\n</select>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image014.gif)\n\n3.直接给某个包下所有类起别名,别名为类名,区分大小写\n\n3.1  |  |\n|  | ![文本框: <typeAliases>\n\n<package  name=\"com.bjsxt.pojo\"  />\n\n</typeAliases>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image015.gif) | \nmybatis.xml 中配置\n\n3.2 mapper.xml  中通过类名引用\n\n![文本框: <select  id=\"page\"  resultType=\"People\"\n\nparameterType=\"map\">\n\nselect * from people limit #{pageStart},#{pageSize}\n\n</select>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image016.gif)\n\n七**.MyBatis** 实现新增\n\n1. 概念复习\n\n1.1 功能:从应用程序角度出发,软件具有哪些功能.\n\n1.2 业务:完成功能时的逻辑.对应 Service 中一个方法\n\n1.3 事务:从数据库角度出发,完成业务时需要执行的 SQL 集合,统称一个事务\n\n1.3.1 事务回滚：如果在一个事务中某个 SQL 执行事务,希望回归到事务的原点,保证数据库数据的完整性.\n\n2. 在 mybatis 中默认是关闭了 JDBC 的自动提交功能\n\n2.1 每一个 SqlSession 默认都是不自动提交事务.\n\n2.2 可以使用session.commit()提交事务.\n\n2.3 也可以使用openSession(true);自动提交底层为：.setAutoCommit(true);\n\n3. mybatis 底层是对 JDBC 的封装.\n\n3.1 JDBC 中 executeUpdate()执行新增,删除,修改的 SQL.方法的返回值 int,表示受影响的行数.\n\n3.2 应为上面原因，因此mybatis 中<insert> <delete> <update>标签没有resultType 属性,认为返回值都是 int\n\n4. 在 openSession() 时 Mybatis 会创建 SqlSession 时同时创建一个\n\nTransaction(事务对象),同时 autoCommit 都为 false\n\n4.1 如果出现异常,应该 session.rollback()回滚事务.\n\n5. 实现新增的步骤\n\n5.1     |  |\n|  | ![文本框: <insert  id=\"ins\"  parameterType=\"People\">\n\ninsert  into  people  values(default,#{name},#{age})\n\n</insert>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image017.gif) | \n在 mapper.xml  中提供<insert>标签,标签没有返回值类型\n\n5.2 通过 session.insert()调用新增方法\n\n![文本框: int  index1  =  session.insert(\"a.b.ins\",  p); if(index1>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image018.gif)\n\n八**.MyBatis** 实现修改\n\n1.     |  |\n|  | ![文本框: <update  id=\"upd\"  parameterType=\"People\">\n\nupdate  people  set  name  =  #{name}  where  id  =  #{id}\n\n</update>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image019.gif) | \n在 mapper.xml  中提供<update>标签\n\n2. 编写代码\n\n![文本框: People  peo  =  new  People(); peo.setId(3);\npeo.setName(\"王五\");\nint  index  =  session.update(\"a.b.upd\",  peo);\n\nif(index>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\n\nsession.commit();\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image020.gif)\n\n九**.mybatis** 实现删除\n\n1.     |  |\n|  | ![文本框: <delete  id=\"del\"  parameterType=\"int\"> delete  from  people  where  id  =  #{0}\n</delete>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image021.gif) | \n在 mapper.xml  提供<delete>标签\n\n2. 编写代码\n\n![文本框: int  del  =  session.delete(\"a.b.del\",3);\n\nif(del>0){\nSystem.out.println(\"成功\");\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image022.gif)\n\n![文本框: }else{\nSystem.out.println(\"失败\");\n}\n\nsession.commit();\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image023.gif)"]],[7125,7125],[16036,16036]]],[1567317987266,["GJX@GJXAIOU",[[-1,7125,"**[**今日课程大纲**]**\n\n**<settings>**标签常用属性介绍\n\n**MyBatis** 对 **Log4J** 的支持\n\n**Log4J** 复习\n\n**parameterType** 属性**(**对象**,map,**基本类型**,#{},${}**等**)**\n\n**<typeAliases>**两种别名配置及内置别名**MyBatis** 实现新增及 **MyBatis** 事务\n\n**MyBatis** 实现删除\n\n**MyBatis** 实现修改\n\n**[**知识点详解**]**"]],[7125,7383],[7125,7125]]],[1567317987654,["GJX@GJXAIOU",[[-1,7126,"\n"]],[7125,7125],[7124,7124]]],[1567317995491,["GJX@GJXAIOU",[[-1,7126,"一**.**"]],[7132,7132],[7126,7126]]],[1567317995858,["GJX@GJXAIOU",[[-1,7125,"\n"]],[7126,7126],[7125,7125]]],[1567317996699,["GJX@GJXAIOU",[[-1,7124,"\n"]],[7125,7125],[7124,7124]]],[1567317997035,["GJX@GJXAIOU",[[-1,7124,""],[1,7124," "],[-1,9230," "],[1,9231," "],[-1,9830,"    "],[1,9834,"    "],[-1,10768,"    "],[1,10772,"    "],[-1,11196,"    "],[1,11200,"    "],[-1,11435," "],[1,11436," "],[-1,11441," "],[1,11442," "],[-1,11449," "],[1,11450," "],[-1,11456," "],[1,11457," "],[-1,11488," "],[1,11489," "],[-1,11828," "],[1,11829," "],[-1,12136,"    "],[1,12140,"    "],[-1,12583," "],[1,12584," "],[-1,13059," "],[1,13060," "],[-1,14147,"    "],[1,14151,"    "],[-1,14660,"    "],[1,14664,"    "],[-1,15231,"    "],[1,15235,"    "]],[7124,7124],[7125,7125]]],[1567318000967,["GJX@GJXAIOU",[[1,7125,"十、"]],[7125,7125],[7127,7127]]],[1567318003245,["GJX@GJXAIOU",[[-1,7124," "]],[7125,7125],[7124,7124]]],[1567318035234,["GJX@GJXAIOU",[[-1,7154,"\n"]],[7154,7154],[7153,7153]]],[1567318036884,["GJX@GJXAIOU",[[-1,7183,"\n"]],[7183,7183],[7182,7182]]],[1567318040560,["GJX@GJXAIOU",[[-1,7130,"1."]],[7132,7132],[7130,7130]]],[1567318041682,["GJX@GJXAIOU",[[1,7130,"- "]],[7130,7130],[7132,7132]]],[1567318043167,["GJX@GJXAIOU",[[-1,7154,"2."]],[7156,7156],[7154,7154]]],[1567318044174,["GJX@GJXAIOU",[[1,7154,"- "]],[7154,7154],[7156,7156]]],[1567318045649,["GJX@GJXAIOU",[[-1,7183,"3."]],[7185,7185],[7183,7183]]],[1567318046057,["GJX@GJXAIOU",[[1,7183,"- "]],[7183,7183],[7185,7185]]],[1567318052419,["GJX@GJXAIOU",[[-1,7213,"3.1 "]],[7217,7217],[7213,7213]]],[1567318052874,["GJX@GJXAIOU",[[-1,7212,"\n"]],[7213,7213],[7212,7212]]],[1567318054221,["GJX@GJXAIOU",[[1,7212,"- "]],[7212,7212],[7214,7214]]],[1567318055315,["GJX@GJXAIOU",[[1,7212,"  "]],[7214,7214],[7216,7216]]],[1567318058028,["GJX@GJXAIOU",[[-1,7236,"."]],[7237,7237],[7236,7236]]],[1567318058123,["GJX@GJXAIOU",[[1,7236,"="]],[7236,7236],[7237,7237]]],[1567318058770,["GJX@GJXAIOU",[[-1,7235,"4="]],[7237,7237],[7235,7235]]],[1567318059261,["GJX@GJXAIOU",[[-1,7234,"\n"]],[7235,7235],[7234,7234]]],[1567318060351,["GJX@GJXAIOU",[[1,7234,"- "]],[7234,7234],[7236,7236]]],[1567318065238,["GJX@GJXAIOU",[[1,7259,"；"]],[7259,7259],[7260,7260]]],[1567318067376,["GJX@GJXAIOU",[[1,7211,"；"]],[7211,7211],[7212,7212]]],[1567318068523,["GJX@GJXAIOU",[[-1,7181,"."]],[7182,7182],[7181,7181]]],[1567318068942,["GJX@GJXAIOU",[[1,7181,"；"]],[7181,7181],[7182,7182]]],[1567318070045,["GJX@GJXAIOU",[[-1,7152,"."]],[7153,7153],[7152,7152]]],[1567318070447,["GJX@GJXAIOU",[[1,7152,"；"]],[7152,7152],[7153,7153]]],[1567318074298,["GJX@GJXAIOU",[[-1,7263,"4.1 "]],[7267,7267],[7263,7263]]],[1567318074685,["GJX@GJXAIOU",[[-1,7262,"\n"]],[7263,7263],[7262,7262]]],[1567318075894,["GJX@GJXAIOU",[[1,7262,"- "]],[7262,7262],[7264,7264]]],[1567318271511,["GJX@GJXAIOU",[[-1,7277,"5."]],[7279,7279],[7277,7277]]],[1567318271906,["GJX@GJXAIOU",[[-1,7276,"\n"]],[7277,7277],[7276,7276]]],[1567318273035,["GJX@GJXAIOU",[[1,7276,"- "]],[7276,7276],[7278,7278]]],[1567318275910,["GJX@GJXAIOU",[[-1,7299,"6."]],[7301,7301],[7299,7299]]],[1567318276394,["GJX@GJXAIOU",[[-1,7298,"\n"]],[7299,7299],[7298,7298]]],[1567318277489,["GJX@GJXAIOU",[[1,7298,"- "]],[7298,7298],[7300,7300]]],[1567318285795,["GJX@GJXAIOU",[[-1,7305,"\n"]],[7305,7305],[7304,7304]]],[1567318289310,["GJX@GJXAIOU",[[-1,7305,"6.1 "]],[7309,7309],[7305,7305]]],[1567318290442,["GJX@GJXAIOU",[[1,7305,"- "]],[7305,7305],[7307,7307]]],[1567318290749,["GJX@GJXAIOU",[[1,7305,"  "]],[7307,7307],[7309,7309]]],[1567318299918,["GJX@GJXAIOU",[[-1,7332,"6.2 "]],[7336,7336],[7332,7332]]],[1567318300858,["GJX@GJXAIOU",[[-1,7331,"\n"]],[7332,7332],[7331,7331]]],[1567318302087,["GJX@GJXAIOU",[[1,7331,"- "]],[7331,7331],[7333,7333]]],[1567318303407,["GJX@GJXAIOU",[[1,7331,"  "]],[7333,7333],[7335,7335]]],[1567318311411,["GJX@GJXAIOU",[[-1,7356,"6.2.1 "]],[7362,7362],[7356,7356]]],[1567318311867,["GJX@GJXAIOU",[[-1,7355,"\n"]],[7356,7356],[7355,7355]]],[1567318312927,["GJX@GJXAIOU",[[1,7355,"- "]],[7355,7355],[7357,7357]]],[1567318314310,["GJX@GJXAIOU",[[1,7355,"    "]],[7357,7357],[7361,7361]]],[1567318315558,["GJX@GJXAIOU",[[-1,7360," "]],[7361,7361],[7360,7360]]],[1567318317082,["GJX@GJXAIOU",[[1,7360," "]],[7360,7360],[7361,7361]]],[1567318319015,["GJX@GJXAIOU",[[-1,7357,"  "]],[7361,7361],[7359,7359]]],[1567318321862,["GJX@GJXAIOU",[[1,7373,"；"]],[7373,7373],[7374,7374]]],[1567318323577,["GJX@GJXAIOU",[[1,7354,"；"]],[7354,7354],[7355,7355]]],[1567318325647,["GJX@GJXAIOU",[[1,7330,"；"]],[7330,7330],[7331,7331]]],[1567318353859,["GJX@GJXAIOU",[[-1,7378,"6.3 "]],[7382,7382],[7378,7378]]],[1567318354454,["GJX@GJXAIOU",[[-1,7377,"\n"]],[7378,7378],[7377,7377]]],[1567318356084,["GJX@GJXAIOU",[[1,7377,"- "]],[7377,7377],[7379,7379]]],[1567318357405,["GJX@GJXAIOU",[[1,7377,"  "]],[7379,7379],[7381,7381]]],[1567318360868,["GJX@GJXAIOU",[[-1,7398,"7."]],[7400,7400],[7398,7398]]],[1567318361395,["GJX@GJXAIOU",[[-1,7397,"\n"]],[7398,7398],[7397,7397]]],[1567318362594,["GJX@GJXAIOU",[[1,7397,"- "]],[7397,7397],[7399,7399]]],[1567318789816,["GJX@GJXAIOU",[[1,7116,"···"]],[7116,7116],[7119,7119]]],[1567318790610,["GJX@GJXAIOU",[[-1,7116,"···"]],[7119,7119],[7116,7116]]],[1567318791827,["GJX@GJXAIOU",[[1,7116,"```"]],[7116,7116],[7119,7119]]],[1567318791889,["GJX@GJXAIOU",[[1,7119,"language\n```\n"]],[7119,7119],[7119,7127]]],[1567318793150,["GJX@GJXAIOU",[[-1,7119,"language"],[1,7127,"j"]],[7119,7127],[7120,7120]]],[1567318793568,["GJX@GJXAIOU",[[1,7120,"ava"]],[7120,7120],[7123,7123]]],[1567318793843,["GJX@GJXAIOU",[[1,7124,"\n"]],[7123,7123],[7124,7124]]],[1567318810499,["GJX@GJXAIOU",[[-1,7458,"1."],[1,7460,"*"],[-1,7482,"\n2."],[1,7485,"* \n*"],[1,7491,"* "],[1,7492,"* "],[1,7519,"* "],[1,7520,"* "],[1,7560,"* "],[1,7561,"* "]],[7459,7585],[7458,7597]]],[1567318817282,["GJX@GJXAIOU",[[1,7458,"\n"]],[7456,7456],[7457,7457]]],[1567318821397,["GJX@GJXAIOU",[[1,7457,"- "]],[7457,7457],[7459,7459]]],[1567318822087,["GJX@GJXAIOU",[[-1,7457,"- "]],[7459,7459],[7457,7457]]],[1567318822293,["GJX@GJXAIOU",[[-1,7458,"\n"]],[7457,7457],[7456,7456]]],[1567318824037,["GJX@GJXAIOU",[[1,7447,"## "]],[7456,7456],[7459,7459]]],[1567318827326,["GJX@GJXAIOU",[[-1,7450,"二**.** "]],[7457,7457],[7450,7450]]],[1567318828654,["GJX@GJXAIOU",[[1,7450,"e "]],[7450,7450],[7451,7451]]],[1567318828756,["GJX@GJXAIOU",[[1,7451,"r"]],[7451,7451],[7452,7452]]],[1567318829341,["GJX@GJXAIOU",[[-1,7450,"er"]],[7452,7452],[7450,7450]]],[1567318830856,["GJX@GJXAIOU",[[1,7450,"二、"]],[7450,7450],[7452,7452]]],[1567318833099,["GJX@GJXAIOU",[[-1,7452," "]],[7453,7453],[7452,7452]]],[1567318883530,["GJX@GJXAIOU",[[1,7447,"\n"]],[7446,7446],[7447,7447]]],[1567320019717,["GJX@GJXAIOU",[[1,7372,"  "]],[7372,7372],[7374,7374]]],[1567320027483,["GJX@GJXAIOU",[[-1,7482,"* "]],[7484,7484],[7482,7482]]],[1567320032507,["GJX@GJXAIOU",[[-1,7480,"."]],[7481,7481],[7480,7480]]],[1567320032869,["GJX@GJXAIOU",[[1,7480,"；"]],[7480,7480],[7481,7481]]],[1567320036282,["GJX@GJXAIOU",[[-1,7490,"* "]],[7492,7492],[7490,7490]]],[1567320039818,["GJX@GJXAIOU",[[1,7491,"  "]],[7491,7491],[7493,7493]]],[1567320041537,["GJX@GJXAIOU",[[-1,7522,"* "]],[7524,7524],[7522,7522]]],[1567320042017,["GJX@GJXAIOU",[[-1,7522,"\n"]],[7522,7522],[7521,7521]]],[1567320044453,["GJX@GJXAIOU",[[-1,7564,"* "]],[7566,7566],[7564,7564]]],[1567320044798,["GJX@GJXAIOU",[[1,7564,"  "]],[7564,7564],[7566,7566]]],[1567320046357,["GJX@GJXAIOU",[[-1,7568," "]],[7568,7568],[7568,7568]]],[1567320046626,["GJX@GJXAIOU",[[1,7568,"  "]],[7568,7568],[7570,7570]]],[1567320047930,["GJX@GJXAIOU",[[-1,7569," "]],[7570,7570],[7569,7569]]],[1567320050274,["GJX@GJXAIOU",[[-1,7564,"  "]],[7566,7566],[7564,7564]]],[1567320050770,["GJX@GJXAIOU",[[-1,7564,"\n"]],[7564,7564],[7563,7563]]],[1567320052627,["GJX@GJXAIOU",[[1,7564,"  "]],[7589,7589],[7591,7591]]],[1567320054409,["GJX@GJXAIOU",[[1,7522,"  "]],[7546,7546],[7548,7548]]],[1567320057076,["GJX@GJXAIOU",[[-1,7490,"\n"]],[7490,7490],[7489,7489]]],[1567320060098,["GJX@GJXAIOU",[[1,7567,"  "]],[7567,7567],[7569,7569]]],[1567320075123,["GJX@GJXAIOU",[[-1,7595,"\n"]],[7595,7595],[7594,7594]]],[1567320082257,["GJX@GJXAIOU",[[-1,7595,"3. "]],[7598,7598],[7595,7595]]],[1567320084586,["GJX@GJXAIOU",[[1,7595,"- "]],[7595,7595],[7597,7597]]],[1567320089378,["GJX@GJXAIOU",[[-1,7603,"\n"]],[7603,7603],[7602,7602]]],[1567320093642,["GJX@GJXAIOU",[[-1,7603,"3.1 "]],[7607,7607],[7603,7603]]],[1567320094738,["GJX@GJXAIOU",[[1,7603,"- "]],[7603,7603],[7605,7605]]],[1567320095564,["GJX@GJXAIOU",[[1,7603,"  "]],[7605,7605],[7607,7607]]],[1567320098123,["GJX@GJXAIOU",[[-1,7638,"3.2 "]],[7642,7642],[7638,7638]]],[1567320098506,["GJX@GJXAIOU",[[-1,7637,"\n"]],[7638,7638],[7637,7637]]],[1567320099575,["GJX@GJXAIOU",[[1,7637,"- "]],[7637,7637],[7639,7639]]],[1567320100114,["GJX@GJXAIOU",[[1,7637,"  "]],[7639,7639],[7641,7641]]],[1567320107818,["GJX@GJXAIOU",[[-1,7720,"4. "]],[7723,7723],[7720,7720]]],[1567320108225,["GJX@GJXAIOU",[[-1,7719,"\n"]],[7720,7720],[7719,7719]]],[1567320109425,["GJX@GJXAIOU",[[1,7719,"- "]],[7719,7719],[7721,7721]]],[1567320112653,["GJX@GJXAIOU",[[-1,7778,"4.1 "]],[7782,7782],[7778,7778]]],[1567320113034,["GJX@GJXAIOU",[[-1,7777,"\n"]],[7778,7778],[7777,7777]]],[1567320114446,["GJX@GJXAIOU",[[1,7777,"- "]],[7777,7777],[7779,7779]]],[1567320114782,["GJX@GJXAIOU",[[1,7777,"  "]],[7779,7779],[7781,7781]]],[1567320121278,["GJX@GJXAIOU",[[-1,7802,"."]],[7803,7803],[7802,7802]]],[1567320121726,["GJX@GJXAIOU",[[1,7802,"；"]],[7802,7802],[7803,7803]]],[1567320123262,["GJX@GJXAIOU",[[-1,7775,"."]],[7776,7776],[7775,7775]]],[1567320123613,["GJX@GJXAIOU",[[1,7775,"；"]],[7775,7775],[7776,7776]]],[1567320133985,["GJX@GJXAIOU",[[-1,7805,"# 三. Log4J"]],[7815,7815],[7805,7805]]],[1567320144938,["GJX@GJXAIOU",[[1,7805,"## Log4J"]],[7805,7805],[7813,7813]]],[1567320186768,["GJX@GJXAIOU",[[-1,7815,"1. "]],[7818,7818],[7815,7815]]],[1567320186876,["GJX@GJXAIOU",[[-1,7814,"\n"]],[7815,7815],[7814,7814]]],[1567320188139,["GJX@GJXAIOU",[[1,7814,"\n"]],[7814,7814],[7815,7815]]],[1567320188597,["GJX@GJXAIOU",[[1,7815,"- "]],[7815,7815],[7817,7817]]],[1567320190810,["GJX@GJXAIOU",[[-1,7843,"2. "]],[7846,7846],[7843,7843]]],[1567320191928,["GJX@GJXAIOU",[[1,7843,"- "]],[7843,7843],[7845,7845]]],[1567320200297,["GJX@GJXAIOU",[[-1,7855,"2.1 "]],[7859,7859],[7855,7855]]],[1567320200780,["GJX@GJXAIOU",[[-1,7854,"\n"]],[7855,7855],[7854,7854]]],[1567320201801,["GJX@GJXAIOU",[[1,7854,"- "]],[7854,7854],[7856,7856]]],[1567320202156,["GJX@GJXAIOU",[[1,7854,"  "]],[7856,7856],[7858,7858]]],[1567320209621,["GJX@GJXAIOU",[[-1,7941,"2.2 "]],[7945,7945],[7941,7941]]],[1567320210045,["GJX@GJXAIOU",[[-1,7940,"\n"]],[7941,7941],[7940,7940]]],[1567320211534,["GJX@GJXAIOU",[[1,7940,"- "]],[7940,7940],[7942,7942]]],[1567320216034,["GJX@GJXAIOU",[[1,7940,"  "]],[7942,7942],[7944,7944]]],[1567320218077,["GJX@GJXAIOU",[[-1,7952,","]],[7953,7953],[7952,7952]]],[1567320218693,["GJX@GJXAIOU",[[1,7952,"："]],[7952,7952],[7953,7953]]],[1567320221018,["GJX@GJXAIOU",[[-1,7949," "]],[7950,7950],[7949,7949]]],[1567320221474,["GJX@GJXAIOU",[[1,7949," "]],[7949,7949],[7950,7950]]],[1567320225890,["GJX@GJXAIOU",[[1,7944,"**"],[1,7952,"**"]],[7944,7952],[7944,7956]]],[1567320340898,["GJX@GJXAIOU",[[-1,7840,"."]],[7841,7841],[7840,7840]]],[1567320341283,["GJX@GJXAIOU",[[1,7840,"；"]],[7840,7840],[7841,7841]]],[1567320344298,["GJX@GJXAIOU",[[-1,7938,"."]],[7939,7939],[7938,7938]]],[1567320344852,["GJX@GJXAIOU",[[1,7938,"。"]],[7938,7938],[7939,7939]]],[1567320347170,["GJX@GJXAIOU",[[-1,7988,"."]],[7989,7989],[7988,7988]]],[1567320347693,["GJX@GJXAIOU",[[1,7988,"。"]],[7988,7988],[7989,7989]]],[1567320351477,["GJX@GJXAIOU",[[-1,7991,"3. "]],[7994,7994],[7991,7991]]],[1567320352788,["GJX@GJXAIOU",[[1,7991,"- "]],[7991,7991],[7993,7993]]],[1567320363376,["GJX@GJXAIOU",[[-1,8000,"3.1 "]],[8004,8004],[8000,8000]]],[1567320364820,["GJX@GJXAIOU",[[1,7999,"- "]],[7999,7999],[8001,8001]]],[1567320367748,["GJX@GJXAIOU",[[-1,8019,"3.2 "]],[8019,8023],[8019,8019]]],[1567320368075,["GJX@GJXAIOU",[[-1,8018,"\n"]],[8019,8019],[8018,8018]]],[1567320369508,["GJX@GJXAIOU",[[1,8018,"- "]],[8018,8018],[8020,8020]]],[1567320376576,["GJX@GJXAIOU",[[1,7993,"**"],[1,7997,"**"]],[7993,7997],[7993,8001]]],[1567320423226,["GJX@GJXAIOU",[[-1,8065,"3.2.1 "]],[8071,8071],[8065,8065]]],[1567320423546,["GJX@GJXAIOU",[[-1,8064,"\n"]],[8065,8065],[8064,8064]]],[1567320483834,[null,[[-1,8005,"\n"],[1,8022,"\n"],[-1,8023," "],[-1,8064," "],[1,8065,"\n"]],[8005,8005],[8066,8066]]],[1567320483834,[null,[[1,8005,"\n"],[-1,8021,"\n"],[1,8023," "],[1,8063," "],[-1,8063,"\n"]],[8066,8066],[8005,8005]]],[1567320424616,["GJX@GJXAIOU",[[1,8064,"- "]],[8064,8064],[8066,8066]]],[1567320427098,["GJX@GJXAIOU",[[1,8003,"  "]],[8003,8003],[8005,8005]]],[1567320427723,["GJX@GJXAIOU",[[1,8024,"  "]],[8028,8028],[8030,8030]]],[1567320428374,["GJX@GJXAIOU",[[1,8068,"  "]],[8073,8073],[8075,8075]]],[1567320431222,["GJX@GJXAIOU",[[1,8072,"在 "]],[8072,8072],[8073,8073]]],[1567320434146,["GJX@GJXAIOU",[[-1,8092,":"]],[8093,8093],[8092,8092]]],[1567320435070,["GJX@GJXAIOU",[[1,8092,"中共"]],[8092,8092],[8094,8094]]],[1567320435786,["GJX@GJXAIOU",[[-1,8093,"共"]],[8094,8094],[8093,8093]]],[1567320439799,["GJX@GJXAIOU",[[1,8093,"书写"]],[8093,8093],[8095,8095]]],[1567320440114,["GJX@GJXAIOU",[[-1,8095,"写"]],[8095,8095],[8094,8094]]],[1567320442580,["GJX@GJXAIOU",[[1,8098,"；"]],[8098,8098],[8099,8099]]],[1567320458162,["GJX@GJXAIOU",[[-1,8101,"3.2.2 "]],[8101,8107],[8101,8101]]],[1567320458586,["GJX@GJXAIOU",[[-1,8100,"\n"]],[8101,8101],[8100,8100]]],[1567320460774,["GJX@GJXAIOU",[[1,8100,"- "]],[8100,8100],[8102,8102]]],[1567320461341,["GJX@GJXAIOU",[[1,8100,"  "]],[8102,8102],[8104,8104]]],[1567320470155,["GJX@GJXAIOU",[[1,8070,"  "]],[8072,8072],[8074,8074]]],[1567320471390,["GJX@GJXAIOU",[[1,8104,"  "]],[8106,8106],[8108,8108]]],[1567320543835,[null,[[-1,8007,"\n"],[1,8024,"\n"],[-1,8027," "],[1,8068,"\n"],[-1,8075," "],[1,8094," "],[-1,8097,"写"],[-1,8100,"；式"],[1,8102,"式；\n"],[-1,8107," "]],[8007,8007],[8107,8107]]],[1567320543835,[null,[[1,8007,"\n"],[-1,8023,"\n"],[1,8027," "],[-1,8067,"\n"],[1,8075," "],[-1,8093," "],[1,8097,"写"],[1,8099,"；式"],[-1,8099,"式；\n"],[1,8107," "]],[8107,8107],[8007,8007]]],[1567320488860,["GJX@GJXAIOU",[[-1,8159,"![文本框: "]],[8166,8166],[8159,8159]]],[1567320490639,["GJX@GJXAIOU",[[1,8158,"··"]],[8158,8158],[8160,8160]]],[1567320491750,["GJX@GJXAIOU",[[-1,8158,"··"]],[8160,8160],[8158,8158]]],[1567320492583,["GJX@GJXAIOU",[[1,8158,"```"]],[8158,8158],[8161,8161]]],[1567320492639,["GJX@GJXAIOU",[[1,8161,"language\n```\n"]],[8161,8161],[8161,8169]]],[1567320493572,["GJX@GJXAIOU",[[-1,8161,"language"],[1,8169,"j"]],[8161,8169],[8162,8162]]],[1567320493975,["GJX@GJXAIOU",[[1,8162,"ava"]],[8162,8162],[8165,8165]]],[1567320494078,["GJX@GJXAIOU",[[1,8166,"\n"]],[8165,8165],[8166,8166]]],[1567320500816,["GJX@GJXAIOU",[[-1,8172,"log4j.rootCategory=DEBUG,  CONSOLE  ,LOGFILE\n\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppend er log4j.appender.CONSOLE.layout=org.apache.log4j.Patter nLayout log4j.appender.CONSOLE.layout.ConversionPattern=%C  %d{\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image001.gif)\n\n![文本框: YYYY-MM-dd  hh:mm:ss}\t%m  %n\n\nlog4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=E:/my.log log4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.Patter nLayout log4j.appender.LOGFILE.layout.ConversionPattern=%C\t%m\n%L %n"]],[8172,8757],[8172,8172]]],[1567320502618,["GJX@GJXAIOU",[[1,8166,"log4j.rootCategory=DEBUG,  CONSOLE  ,LOGFILE\n\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppend er log4j.appender.CONSOLE.layout=org.apache.log4j.Patter nLayout log4j.appender.CONSOLE.layout.ConversionPattern=%C  %d{\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image001.gif)\n\n![文本框: YYYY-MM-dd  hh:mm:ss}\t%m  %n\n\nlog4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=E:/my.log log4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.Patter nLayout log4j.appender.LOGFILE.layout.ConversionPattern=%C\t%m\n%L %n"]],[8166,8166],[8751,8751]]],[1567320508504,["GJX@GJXAIOU",[[-1,8200,"  "]],[8202,8202],[8200,8200]]],[1567320509492,["GJX@GJXAIOU",[[1,8201," "]],[8201,8201],[8202,8202]]],[1567320511948,["GJX@GJXAIOU",[[-1,8192," "]],[8193,8193],[8192,8192]]],[1567320529485,["GJX@GJXAIOU",[[-1,8385,"](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image001.gif)"]],[8386,8463],[8385,8385]]],[1567320530012,["GJX@GJXAIOU",[[-1,8386,"\n"]],[8385,8385],[8384,8384]]],[1567320534059,["GJX@GJXAIOU",[[-1,8379,"  "]],[8381,8381],[8379,8379]]],[1567320536069,["GJX@GJXAIOU",[[1,8379,", "]],[8379,8379],[8381,8381]]],[1567320538693,["GJX@GJXAIOU",[[-1,8379,", "]],[8381,8381],[8379,8379]]],[1567320539350,["GJX@GJXAIOU",[[1,8379," "]],[8379,8379],[8380,8380]]],[1567320543063,["GJX@GJXAIOU",[[-1,8385,"![文本框: "]],[8385,8392],[8385,8385]]],[1567320543425,["GJX@GJXAIOU",[[-1,8384,"\n"]],[8385,8385],[8384,8384]]],[1567320603897,[null,[[-1,8007,"\n"],[1,8024,"\n"],[-1,8027," "],[1,8068,"\n"],[-1,8075," "],[1,8094," "],[-1,8097,"写"],[-1,8100,"；式"],[1,8102,"式；\n"],[-1,8107," "],[1,8158,"\n"],[-1,8667,"n"]],[8007,8007],[8667,8667]]],[1567320603897,[null,[[1,8007,"\n"],[-1,8023,"\n"],[1,8027," "],[-1,8067,"\n"],[1,8075," "],[-1,8093," "],[1,8097,"写"],[1,8099,"；式"],[-1,8099,"式；\n"],[1,8107," "],[-1,8157,"\n"],[1,8667,"n"]],[8667,8667],[8007,8007]]],[1567320543961,["GJX@GJXAIOU",[[-1,8383,"\n"]],[8384,8384],[8383,8383]]],[1567320550689,["GJX@GJXAIOU",[[-1,8404,"\t"]],[8405,8405],[8404,8404]]],[1567320568458,["GJX@GJXAIOU",[[1,8503,"\n"]],[8503,8503],[8504,8504]]],[1567320571796,["GJX@GJXAIOU",[[-1,8654,"\n"]],[8655,8655],[8654,8654]]],[1567320572473,["GJX@GJXAIOU",[[1,8654," "]],[8654,8654],[8655,8655]]],[1567320582517,["GJX@GJXAIOU",[[-1,7814,"\n"]],[7814,7814],[7813,7813]]],[1567320589066,["GJX@GJXAIOU",[[-1,8666,"](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image002.gif)"]],[8666,8744],[8666,8666]]],[1567320592891,["GJX@GJXAIOU",[[-1,8667,"\n"]],[8666,8666],[8665,8665]]],[1567320593322,["GJX@GJXAIOU",[[-1,8666,"\n"]],[8665,8665],[8664,8664]]],[1567320597066,["GJX@GJXAIOU",[[1,8165,"\n"]],[8164,8164],[8165,8165]]],[1567320603758,["GJX@GJXAIOU",[[1,8165,"// 遇到什么样"]],[8165,8165],[8173,8173]]],[1567320663893,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8674,"n"]],[8006,8006],[8674,8674]]],[1567320663893,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8674,"n"]],[8674,8674],[8006,8006]]],[1567320604752,["GJX@GJXAIOU",[[-1,8172,"样"]],[8173,8173],[8172,8172]]],[1567320612364,["GJX@GJXAIOU",[[1,8172,"级别才输出："]],[8172,8172],[8178,8178]]],[1567320626663,["GJX@GJXAIOU",[[-1,8680,"4. "]],[8683,8683],[8680,8680]]],[1567320627405,["GJX@GJXAIOU",[[-1,8679,"\n"]],[8680,8680],[8679,8679]]],[1567320628459,["GJX@GJXAIOU",[[1,8679,"- "]],[8679,8679],[8681,8681]]],[1567320631453,["GJX@GJXAIOU",[[-1,8701,"4.1 "]],[8705,8705],[8701,8701]]],[1567320631939,["GJX@GJXAIOU",[[-1,8700,"\n"]],[8701,8701],[8700,8700]]],[1567320632677,["GJX@GJXAIOU",[[1,8700,"- "]],[8700,8700],[8702,8702]]],[1567320633490,["GJX@GJXAIOU",[[1,8700,"  "]],[8702,8702],[8704,8704]]],[1567320653274,["GJX@GJXAIOU",[[-1,8780,"4.2 ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image003.jpg)"]],[8780,8864],[8780,8780]]],[1567320653685,["GJX@GJXAIOU",[[-1,8779,"\n"]],[8780,8780],[8779,8779]]],[1567320654940,["GJX@GJXAIOU",[[1,8779,"- "]],[8779,8779],[8781,8781]]],[1567320655850,["GJX@GJXAIOU",[[1,8779,"  "]],[8781,8781],[8783,8783]]],[1567320723899,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8681," "],[1,8700,"\n"],[-1,8703," "],[1,8779,"\n"],[-1,8783,")"]],[8006,8006],[8783,8783]]],[1567320723899,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8681," "],[-1,8699,"\n"],[1,8703," "],[-1,8778,"\n"],[1,8783,")"]],[8783,8783],[8006,8006]]],[1567320691187,["GJX@GJXAIOU",[[1,8814,"**"],[1,8828,"**"]],[8814,8828],[8814,8832]]],[1567320783907,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8681," "],[1,8700,"\n"],[-1,8703," "],[1,8779,"\n"],[-1,8783,")"],[1,8814,"，"],[-1,8816,"，"],[1,8830,"出"],[-1,8832,"出"]],[8006,8006],[8832,8832]]],[1567320783907,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8681," "],[-1,8699,"\n"],[1,8703," "],[-1,8778,"\n"],[1,8783,")"],[-1,8813,"，"],[1,8816,"，"],[-1,8829,"出"],[1,8832,"出"]],[8832,8832],[8006,8006]]],[1567320726708,["GJX@GJXAIOU",[[1,8178,"调试信息瘦西湖"]],[8178,8178],[8185,8185]]],[1567320727442,["GJX@GJXAIOU",[[-1,8182,"瘦西湖"]],[8185,8185],[8182,8182]]],[1567320738933,["GJX@GJXAIOU",[[1,8182,"输出， 输出到控制台，输出考"]],[8182,8182],[8196,8196]]],[1567320739521,["GJX@GJXAIOU",[[-1,8195,"考"]],[8196,8196],[8195,8195]]],[1567320742425,["GJX@GJXAIOU",[[1,8195,"到log文件"]],[8195,8195],[8201,8201]]],[1567320743694,["GJX@GJXAIOU",[[1,8199," "]],[8199,8199],[8200,8200]]],[1567320744877,["GJX@GJXAIOU",[[1,8196," "]],[8196,8196],[8197,8197]]],[1567320752812,["GJX@GJXAIOU",[[-1,8859,"5. "]],[8861,8862],[8859,8859]]],[1567320754377,["GJX@GJXAIOU",[[1,8859,"- "]],[8859,8859],[8861,8861]]],[1567320903901,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8706," "],[1,8725,"\n"],[-1,8728," "],[1,8804,"\n"],[-1,8808,")"],[1,8839,"，"],[-1,8841,"，"],[1,8855,"出"],[-1,8857,"出"],[1,8858,"\n"],[-1,8860," "]],[8006,8006],[8860,8860]]],[1567320903901,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8706," "],[-1,8724,"\n"],[1,8728," "],[-1,8803,"\n"],[1,8808,")"],[-1,8838,"，"],[1,8841,"，"],[-1,8854,"出"],[1,8857,"出"],[-1,8857,"\n"],[1,8860," "]],[8860,8860],[8006,8006]]],[1567320897888,["GJX@GJXAIOU",[[-1,8874,"5.1 "]],[8874,8878],[8874,8874]]],[1567320898063,["GJX@GJXAIOU",[[-1,8873,"\n"]],[8874,8874],[8873,8873]]],[1567320899734,["GJX@GJXAIOU",[[1,8873,"-  "]],[8873,8873],[8876,8876]]],[1567320900602,["GJX@GJXAIOU",[[1,8873,"  "]],[8876,8876],[8878,8878]]],[1567320963909,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8706," "],[1,8725,"\n"],[-1,8728," "],[1,8804,"\n"],[-1,8808,")"],[1,8839,"，"],[-1,8841,"，"],[1,8855,"出"],[-1,8857,"出"],[1,8858,"\n"],[-1,8860," "],[1,8873,"\n"],[-1,8876," "]],[8006,8006],[8876,8876]]],[1567320963909,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8706," "],[-1,8724,"\n"],[1,8728," "],[-1,8803,"\n"],[1,8808,")"],[-1,8838,"，"],[1,8841,"，"],[-1,8854,"出"],[1,8857,"出"],[-1,8857,"\n"],[1,8860," "],[-1,8872,"\n"],[1,8876," "]],[8876,8876],[8006,8006]]],[1567320913913,["GJX@GJXAIOU",[[-1,8889,"\n"]],[8889,8889],[8888,8888]]],[1567320915971,["GJX@GJXAIOU",[[1,8889,"  "]],[8889,8889],[8891,8891]]],[1567320917111,["GJX@GJXAIOU",[[-1,8890," "]],[8891,8891],[8890,8890]]],[1567320927134,["GJX@GJXAIOU",[[1,8890,"其中 CONSOLE "]],[8890,8890],[8900,8900]]],[1567320935596,["GJX@GJXAIOU",[[1,8900,"，LOGFILE"]],[8900,8900],[8908,8908]]],[1567320941978,["GJX@GJXAIOU",[[-1,8900,"，LOGFILE"]],[8900,8908],[8900,8900]]],[1567320943921,["GJX@GJXAIOU",[[1,8908,"，LOGFILE "]],[8908,8908],[8916,8916]]],[1567320945841,["GJX@GJXAIOU",[[-1,8908,"，"]],[8909,8909],[8908,8908]]],[1567321023901,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8706," "],[1,8725,"\n"],[-1,8728," "],[1,8804,"\n"],[-1,8808,")"],[1,8839,"，"],[-1,8841,"，"],[1,8855,"出"],[-1,8857,"出"],[1,8858,"\n"],[-1,8860," "],[1,8873,"\n"],[-1,8876," "],[1,8889,"\n"],[-1,8901,"\n"],[1,8908,"，"],[-1,8916,"，"]],[8006,8006],[8916,8916]]],[1567321023901,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8706," "],[-1,8724,"\n"],[1,8728," "],[-1,8803,"\n"],[1,8808,")"],[-1,8838,"，"],[1,8841,"，"],[-1,8854,"出"],[1,8857,"出"],[-1,8857,"\n"],[1,8860," "],[-1,8872,"\n"],[1,8876," "],[-1,8888,"\n"],[1,8901,"\n"],[-1,8907,"，"],[1,8916,"，"]],[8916,8916],[8006,8006]]],[1567320979704,["GJX@GJXAIOU",[[-1,8922,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg)"]],[8922,9002],[8922,8922]]],[1567320987455,["GJX@GJXAIOU",[[1,8922,"![log4j输出目的地]($resource/log4j%E8%BE%93%E5%87%BA%E7%9B%AE%E7%9A%84%E5%9C%B0.jpg)"]],[8922,8922],[9002,9002]]],[1567321015630,["GJX@GJXAIOU",[[1,9003,"在"]],[9003,9003],[9004,9004]]],[1567321083908,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8706," "],[1,8725,"\n"],[-1,8728," "],[1,8804,"\n"],[-1,8808,")"],[1,8839,"，"],[-1,8841,"，"],[1,8855,"出"],[-1,8857,"出"],[1,8858,"\n"],[-1,8860," "],[1,8873,"\n"],[-1,8876," "],[1,8889,"\n"],[-1,8901,"\n"],[1,8908,"，"],[-1,8916,"，"],[1,8921,"\n"],[-1,9001,")"],[1,9002,"\n"],[-1,9004,"\n"]],[8006,8006],[9004,9004]]],[1567321083908,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8706," "],[-1,8724,"\n"],[1,8728," "],[-1,8803,"\n"],[1,8808,")"],[-1,8838,"，"],[1,8841,"，"],[-1,8854,"出"],[1,8857,"出"],[-1,8857,"\n"],[1,8860," "],[-1,8872,"\n"],[1,8876," "],[-1,8888,"\n"],[1,8901,"\n"],[-1,8907,"，"],[1,8916,"，"],[-1,8920,"\n"],[1,9001,")"],[-1,9001,"\n"],[1,9004,"\n"]],[9004,9004],[8006,8006]]],[1567321032961,["GJX@GJXAIOU",[[-1,9068,"Logger  logger = Logger.getLogger(Test.class);\n\nlogger.debug(\"这是调试信息\"); // 具体的方法看\n\n上面输出级别调用不同的方法"]],[9068,9164],[9068,9068]]],[1567321034641,["GJX@GJXAIOU",[[1,9025,"\n"]],[9023,9023],[9024,9024]]],[1567321035098,["GJX@GJXAIOU",[[1,9024,"Logger  logger = Logger.getLogger(Test.class);\n\nlogger.debug(\"这是调试信息\"); // 具体的方法看\n\n上面输出级别调用不同的方法"]],[9024,9024],[9120,9120]]],[1567321037640,["GJX@GJXAIOU",[[-1,9071,"\n"]],[9071,9071],[9070,9070]]],[1567321040668,["GJX@GJXAIOU",[[1,9024,"\n"]],[9024,9024],[9025,9025]]],[1567321042409,["GJX@GJXAIOU",[[1,9024,"```"]],[9024,9024],[9027,9027]]],[1567321042466,["GJX@GJXAIOU",[[1,9027,"language\n```\n"]],[9027,9027],[9027,9035]]],[1567321043799,["GJX@GJXAIOU",[[-1,9027,"language"],[1,9035,"j"]],[9027,9035],[9028,9028]]],[1567321044272,["GJX@GJXAIOU",[[1,9028,"ava"]],[9028,9028],[9031,9031]]],[1567321045750,["GJX@GJXAIOU",[[1,9032,"\n"]],[9031,9031],[9032,9032]]],[1567321049651,["GJX@GJXAIOU",[[-1,9038,"Logger  logger = Logger.getLogger(Test.class);\nlogger.debug(\"这是调试信息\"); // 具体的方法看\n\n上面输出级别调用不同的方法"]],[9038,9133],[9038,9038]]],[1567321051272,["GJX@GJXAIOU",[[1,9032,"Logger  logger = Logger.getLogger(Test.class);\nlogger.debug(\"这是调试信息\"); // 具体的方法看\n\n上面输出级别调用不同的方法"]],[9032,9032],[9127,9127]]],[1567321056874,["GJX@GJXAIOU",[[-1,9103,"// 具体的方法看\n\n上面输出级别调用不同的方法"]],[9103,9127],[9103,9103]]],[1567321058554,["GJX@GJXAIOU",[[1,9079,"\n"]],[9078,9078],[9079,9079]]],[1567321058913,["GJX@GJXAIOU",[[1,9079,"// 具体的方法看\n\n上面输出级别调用不同的方法"]],[9079,9079],[9103,9103]]],[1567321061749,["GJX@GJXAIOU",[[-1,9089,"\n"]],[9090,9090],[9089,9089]]],[1567321061913,["GJX@GJXAIOU",[[-1,9088,"\n"]],[9089,9089],[9088,9088]]],[1567321065896,["GJX@GJXAIOU",[[1,9082,"zheli"]],[9082,9082],[9087,9087]]],[1567321066968,["GJX@GJXAIOU",[[-1,9082,"zheli"]],[9087,9087],[9082,9082]]],[1567321077419,["GJX@GJXAIOU",[[1,9082,"这里以 debug 为例，"]],[9082,9082],[9095,9095]]],[1567321143905,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8706," "],[1,8725,"\n"],[-1,8728," "],[1,8804,"\n"],[-1,8808,")"],[1,8839,"，"],[-1,8841,"，"],[1,8855,"出"],[-1,8857,"出"],[1,8858,"\n"],[-1,8860," "],[1,8873,"\n"],[-1,8876," "],[1,8889,"\n"],[-1,8901,"\n"],[1,8908,"，"],[-1,8916,"，"],[1,8921,"\n"],[-1,9001,")"],[1,9002,"\n"],[-1,9004,"\n"],[1,9024,"\n"],[-1,9147,"\n"],[-1,9190,"法"],[1,9191,"）"]],[8006,8006],[9192,9192]]],[1567321143905,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8706," "],[-1,8724,"\n"],[1,8728," "],[-1,8803,"\n"],[1,8808,")"],[-1,8838,"，"],[1,8841,"，"],[-1,8854,"出"],[1,8857,"出"],[-1,8857,"\n"],[1,8860," "],[-1,8872,"\n"],[1,8876," "],[-1,8888,"\n"],[1,8901,"\n"],[-1,8907,"，"],[1,8916,"，"],[-1,8920,"\n"],[1,9001,")"],[-1,9001,"\n"],[1,9004,"\n"],[-1,9023,"\n"],[1,9147,"\n"],[1,9189,"法"],[-1,9189,"）"]],[9192,9192],[8006,8006]]],[1567321108243,["GJX@GJXAIOU",[[1,9147,"\n"]],[9143,9143],[9144,9144]]],[1567321112203,["GJX@GJXAIOU",[[1,9024,"\n"]],[9023,9023],[9024,9024]]],[1567321115745,["GJX@GJXAIOU",[[1,9024,"- 是哟红"]],[9024,9024],[9029,9029]]],[1567321117075,["GJX@GJXAIOU",[[-1,9026,"是哟红"]],[9029,9029],[9026,9026]]],[1567321120487,["GJX@GJXAIOU",[[1,9026,"使用方法二"]],[9026,9026],[9031,9031]]],[1567321120952,["GJX@GJXAIOU",[[-1,9030,"二"]],[9031,9031],[9030,9030]]],[1567321121769,["GJX@GJXAIOU",[[1,9030,"一："]],[9030,9030],[9032,9032]]],[1567321129293,["GJX@GJXAIOU",[[1,9153,"- 使用方法二："]],[9153,9153],[9161,9161]]],[1567321130409,["GJX@GJXAIOU",[[1,9162,"- \n"]],[9161,9161],[9164,9164]]],[1567321132159,["GJX@GJXAIOU",[[-1,9162,"- "]],[9164,9164],[9162,9162]]],[1567321134951,["GJX@GJXAIOU",[[1,9162,"```"]],[9162,9162],[9165,9165]]],[1567321135018,["GJX@GJXAIOU",[[1,9165,"language\n```\n"]],[9165,9165],[9165,9173]]],[1567321135886,["GJX@GJXAIOU",[[-1,9165,"language"],[1,9173,"j"]],[9165,9173],[9166,9166]]],[1567321136325,["GJX@GJXAIOU",[[1,9166,"ava"]],[9166,9166],[9169,9169]]],[1567321136722,["GJX@GJXAIOU",[[1,9170,"\n"]],[9169,9169],[9170,9170]]],[1567321141122,["GJX@GJXAIOU",[[1,9170,"使 用 二 ： 在 catch 中 ： logger.error(e.getMessage()); 即可，注意在\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg)时间log4j配置文件中加上相关的表达式；\n"]],[9170,9170],[9330,9330]]],[1567321203911,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8706," "],[1,8725,"\n"],[-1,8728," "],[1,8804,"\n"],[-1,8808,")"],[1,8839,"，"],[-1,8841,"，"],[1,8855,"出"],[-1,8857,"出"],[1,8858,"\n"],[-1,8860," "],[1,8873,"\n"],[-1,8876," "],[1,8889,"\n"],[-1,8901,"\n"],[1,8908,"，"],[-1,8916,"，"],[1,8921,"\n"],[-1,9001,")"],[1,9002,"\n"],[-1,9004,"\n"],[1,9024,"\n"],[-1,9339,"\n"],[-1,9382,"法"],[1,9383,"）"]],[8006,8006],[9384,9384]]],[1567321203911,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8706," "],[-1,8724,"\n"],[1,8728," "],[-1,8803,"\n"],[1,8808,")"],[-1,8838,"，"],[1,8841,"，"],[-1,8854,"出"],[1,8857,"出"],[-1,8857,"\n"],[1,8860," "],[-1,8872,"\n"],[1,8876," "],[-1,8888,"\n"],[1,8901,"\n"],[-1,8907,"，"],[1,8916,"，"],[-1,8920,"\n"],[1,9001,")"],[-1,9001,"\n"],[1,9004,"\n"],[-1,9023,"\n"],[1,9339,"\n"],[1,9381,"法"],[-1,9381,"）"]],[9384,9384],[8006,8006]]],[1567321152217,["GJX@GJXAIOU",[[-1,9162,"```java"]],[9162,9169],[9162,9162]]],[1567321154593,["GJX@GJXAIOU",[[-1,9324,"```"]],[9327,9327],[9324,9324]]],[1567321154953,["GJX@GJXAIOU",[[-1,9328,"\n"]],[9324,9324],[9323,9323]]],[1567321157257,["GJX@GJXAIOU",[[-1,9163,"使 用 二 ： "]],[9163,9171],[9163,9163]]],[1567321157618,["GJX@GJXAIOU",[[-1,9162,"\n"]],[9163,9163],[9162,9162]]],[1567321159628,["GJX@GJXAIOU",[[1,9174,"`"]],[9174,9174],[9175,9175]]],[1567321161461,["GJX@GJXAIOU",[[1,9204,"`"]],[9204,9204],[9205,9205]]],[1567321165858,["GJX@GJXAIOU",[[-1,9214,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg)时间"]],[9214,9296],[9214,9214]]],[1567321166006,["GJX@GJXAIOU",[[-1,9213,"\n"]],[9214,9214],[9213,9213]]],[1567321166516,["GJX@GJXAIOU",[[-1,9212,"\n"]],[9213,9213],[9212,9212]]],[1567321186328,["GJX@GJXAIOU",[[-1,9237," |  | \n\n6\\. "]],[9237,9249],[9237,9237]]],[1567321186475,["GJX@GJXAIOU",[[-1,9236,"\n"]],[9237,9237],[9236,9236]]],[1567321186983,["GJX@GJXAIOU",[[-1,9235,"\n"]],[9236,9236],[9235,9235]]],[1567321187160,["GJX@GJXAIOU",[[-1,9234,"\n"]],[9235,9235],[9234,9234]]],[1567321187306,["GJX@GJXAIOU",[[-1,9233,"\n"]],[9234,9234],[9233,9233]]],[1567321188567,["GJX@GJXAIOU",[[1,9233,"- "]],[9233,9233],[9235,9235]]],[1567321193902,["GJX@GJXAIOU",[[-1,9244," |   | "]],[9251,9251],[9244,9244]]],[1567321194193,["GJX@GJXAIOU",[[-1,9243,"\n"]],[9244,9244],[9243,9243]]],[1567321194683,["GJX@GJXAIOU",[[-1,9242,"\n"]],[9243,9243],[9242,9242]]],[1567321195252,["GJX@GJXAIOU",[[1,9242," "]],[9242,9242],[9243,9243]]],[1567321198272,["GJX@GJXAIOU",[[-1,9260,"6.1 "]],[9260,9264],[9260,9260]]],[1567321198436,["GJX@GJXAIOU",[[-1,9259,"\n"]],[9260,9260],[9259,9259]]],[1567321199644,["GJX@GJXAIOU",[[1,9259,"- "]],[9259,9259],[9261,9261]]],[1567321200032,["GJX@GJXAIOU",[[1,9259,"  "]],[9261,9261],[9263,9263]]],[1567321201814,["GJX@GJXAIOU",[[1,9265," "]],[9265,9265],[9266,9266]]],[1567321263912,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8706," "],[1,8725,"\n"],[-1,8728," "],[1,8804,"\n"],[-1,8808,")"],[1,8839,"，"],[-1,8841,"，"],[1,8855,"出"],[-1,8857,"出"],[1,8858,"\n"],[-1,8860," "],[1,8873,"\n"],[-1,8876," "],[1,8889,"\n"],[-1,8901,"\n"],[1,8908,"，"],[-1,8916,"，"],[1,8921,"\n"],[-1,9001,")"],[1,9002,"\n"],[-1,9004,"\n"],[1,9024,"\n"],[-1,9235," "],[-1,9242," "],[1,9243,"n"],[-1,9258,"法"],[1,9259,"）\n"],[-1,9262," "],[-1,9265," "],[1,9267," "]],[8006,8006],[9268,9268]]],[1567321263912,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8706," "],[-1,8724,"\n"],[1,8728," "],[-1,8803,"\n"],[1,8808,")"],[-1,8838,"，"],[1,8841,"，"],[-1,8854,"出"],[1,8857,"出"],[-1,8857,"\n"],[1,8860," "],[-1,8872,"\n"],[1,8876," "],[-1,8888,"\n"],[1,8901,"\n"],[-1,8907,"，"],[1,8916,"，"],[-1,8920,"\n"],[1,9001,")"],[-1,9001,"\n"],[1,9004,"\n"],[-1,9023,"\n"],[1,9235," "],[1,9241," "],[-1,9241,"n"],[1,9257,"法"],[-1,9257,"）\n"],[1,9262," "],[1,9264," "],[-1,9265," "]],[9268,9268],[8006,8006]]],[1567321204208,["GJX@GJXAIOU",[[-1,9275,"6.2 "]],[9275,9279],[9275,9275]]],[1567321204355,["GJX@GJXAIOU",[[-1,9274,"\n"]],[9275,9275],[9274,9274]]],[1567321206142,["GJX@GJXAIOU",[[1,9274,"  - "]],[9274,9274],[9278,9278]]],[1567321212224,["GJX@GJXAIOU",[[1,9302," shij"]],[9302,9302],[9307,9307]]],[1567321213138,["GJX@GJXAIOU",[[-1,9302," shij"]],[9307,9307],[9302,9302]]],[1567321214708,["GJX@GJXAIOU",[[1,9302," 时间"]],[9302,9302],[9305,9305]]],[1567321218859,["GJX@GJXAIOU",[[-1,9306,"\n使 用 二 ： 在 catch 中 ： logger.error(e.getMessage()); 即可，注意在\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg)时间log4j配置文件中加上相关的表达式"]],[9306,9465],[9306,9306]]],[1567321219216,["GJX@GJXAIOU",[[-1,9305,"\n"]],[9306,9306],[9305,9305]]],[1567321221987,["GJX@GJXAIOU",[[1,9273,"；"]],[9273,9273],[9274,9274]]],[1567321225144,["GJX@GJXAIOU",[[-1,9309,"6.3 "]],[9309,9313],[9309,9309]]],[1567321225623,["GJX@GJXAIOU",[[-1,9308,"\n"]],[9309,9309],[9308,9308]]],[1567321226723,["GJX@GJXAIOU",[[1,9308,"- "]],[9308,9308],[9310,9310]]],[1567321227700,["GJX@GJXAIOU",[[1,9308,"  "]],[9310,9310],[9312,9312]]],[1567321230139,["GJX@GJXAIOU",[[-1,9319,"6.4"]],[9319,9322],[9319,9319]]],[1567321230455,["GJX@GJXAIOU",[[-1,9318,"\n"]],[9319,9319],[9318,9318]]],[1567321231556,["GJX@GJXAIOU",[[1,9318,"- "]],[9318,9318],[9320,9320]]],[1567321232155,["GJX@GJXAIOU",[[1,9318,"  "]],[9320,9320],[9322,9322]]],[1567321234359,["GJX@GJXAIOU",[[-1,9329,"6.5"]],[9329,9332],[9329,9329]]],[1567321234578,["GJX@GJXAIOU",[[-1,9328,"\n"]],[9329,9329],[9328,9328]]],[1567321236255,["GJX@GJXAIOU",[[1,9328,"  - "]],[9328,9328],[9332,9332]]],[1567321241600,["GJX@GJXAIOU",[[-1,9338,"\n"]],[9338,9338],[9337,9337]]],[1567321251029,["GJX@GJXAIOU",[[1,9358,"\n"]],[9357,9357],[9358,9358]]],[1567321251174,["GJX@GJXAIOU",[[1,9359,"\n"]],[9358,9358],[9359,9359]]],[1567321251277,["GJX@GJXAIOU",[[1,9360,"\n"]],[9359,9359],[9360,9360]]],[1567321251394,["GJX@GJXAIOU",[[1,9361,"\n"]],[9360,9360],[9361,9361]]],[1567321251580,["GJX@GJXAIOU",[[1,9362,"\n"]],[9361,9361],[9362,9362]]],[1567321257612,["GJX@GJXAIOU",[[1,9357,"示例如下："]],[9357,9357],[9362,9362]]],[1567322223931,[null,[[-1,8006,"\n"],[1,8023,"\n"],[-1,8026," "],[1,8067,"\n"],[-1,8074," "],[1,8093," "],[-1,8096,"写"],[-1,8099,"；式"],[1,8101,"式；\n"],[-1,8106," "],[1,8157,"\n"],[-1,8706," "],[1,8725,"\n"],[-1,8728," "],[1,8804,"\n"],[-1,8808,")"],[1,8839,"，"],[-1,8841,"，"],[1,8855,"出"],[-1,8857,"出"],[1,8858,"\n"],[-1,8860," "],[1,8873,"\n"],[-1,8876," "],[1,8889,"\n"],[-1,8901,"\n"],[1,8908,"，"],[-1,8916,"，"],[1,8921,"\n"],[-1,9001,")"],[1,9002,"\n"],[-1,9004,"\n"],[1,9024,"\n"],[-1,9235," "],[-1,9242," "],[1,9243,"n"],[-1,9258,"法"],[1,9259,"）\n"],[-1,9263," "],[1,9265,"C"],[-1,9266,"C"],[-1,9273,"；名"],[1,9275,"名；\n"],[-1,9279," "],[1,9303,"}"],[-1,9306,"式"],[1,9308,"\n"],[-1,9312," "],[1,9318,"\n"],[-1,9322,"4"],[1,9328,"\n"],[-1,9332,"5"],[1,9357,"\n"],[-1,9362,"\n"]],[8006,8006],[9362,9362]]],[1567322223931,[null,[[1,8006,"\n"],[-1,8022,"\n"],[1,8026," "],[-1,8066,"\n"],[1,8074," "],[-1,8092," "],[1,8096,"写"],[1,8098,"；式"],[-1,8098,"式；\n"],[1,8106," "],[-1,8156,"\n"],[1,8706," "],[-1,8724,"\n"],[1,8728," "],[-1,8803,"\n"],[1,8808,")"],[-1,8838,"，"],[1,8841,"，"],[-1,8854,"出"],[1,8857,"出"],[-1,8857,"\n"],[1,8860," "],[-1,8872,"\n"],[1,8876," "],[-1,8888,"\n"],[1,8901,"\n"],[-1,8907,"，"],[1,8916,"，"],[-1,8920,"\n"],[1,9001,")"],[-1,9001,"\n"],[1,9004,"\n"],[-1,9023,"\n"],[1,9235," "],[1,9241," "],[-1,9241,"n"],[1,9257,"法"],[-1,9257,"）\n"],[1,9263," "],[-1,9264,"C"],[1,9266,"C"],[1,9272,"；名"],[-1,9272,"名；\n"],[1,9279," "],[-1,9302,"}"],[1,9306,"式"],[-1,9307,"\n"],[1,9312," "],[-1,9317,"\n"],[1,9322,"4"],[-1,9327,"\n"],[1,9332,"5"],[-1,9356,"\n"],[1,9362,"\n"]],[9362,9362],[8006,8006]]],[1567322179242,["GJX@GJXAIOU",[[1,9364,"![pattern示例配置]($resource/pattern%E7%A4%BA%E4%BE%8B%E9%85%8D%E7%BD%AE.png)"]],[9364,9364],[9438,9438]]],[1567322192031,["GJX@GJXAIOU",[[-1,7453,"二"]],[7454,7454],[7453,7453]]],[1567322196082,["GJX@GJXAIOU",[[1,7453,"十一"]],[7453,7453],[7455,7455]]],[1567322200035,["GJX@GJXAIOU",[[1,7809,"十二 "]],[7809,7809],[7811,7811]]],[1567322201282,["GJX@GJXAIOU",[[1,7811,"、"]],[7811,7811],[7812,7812]]],[1567322203001,["GJX@GJXAIOU",[[-1,7812," "]],[7813,7813],[7812,7812]]],[1567322209024,["GJX@GJXAIOU",[[-1,9447,"四."]],[9449,9449],[9447,9447]]],[1567322212004,["GJX@GJXAIOU",[[1,9447,"十三、"]],[9447,9447],[9450,9450]]],[1567322213436,["GJX@GJXAIOU",[[-1,9450," "]],[9451,9451],[9450,9450]]],[1567322283942,[null,[[-1,8010,"\n"],[1,8027,"\n"],[-1,8030," "],[1,8071,"\n"],[-1,8078," "],[1,8097," "],[-1,8100,"写"],[-1,8103,"；式"],[1,8105,"式；\n"],[-1,8110," "],[1,8161,"\n"],[-1,8710," "],[1,8729,"\n"],[-1,8732," "],[1,8808,"\n"],[-1,8812,")"],[1,8843,"，"],[-1,8845,"，"],[1,8859,"出"],[-1,8861,"出"],[1,8862,"\n"],[-1,8864," "],[1,8877,"\n"],[-1,8880," "],[1,8893,"\n"],[-1,8905,"\n"],[1,8912,"，"],[-1,8920,"，"],[1,8925,"\n"],[-1,9005,")"],[1,9006,"\n"],[-1,9008,"\n"],[1,9028,"\n"],[-1,9239," "],[-1,9246," "],[1,9247,"n"],[-1,9262,"法"],[1,9263,"）\n"],[-1,9267," "],[1,9269,"C"],[-1,9270,"C"],[-1,9277,"；"],[1,9279,"；\n"],[-1,9282," "],[1,9307,"}"],[-1,9310,"式"],[1,9312,"\n"],[-1,9315," "],[1,9322,"\n"],[-1,9326,"4"],[1,9332,"\n"],[-1,9336,"5"],[1,9361,"\n"],[-1,9445,"\n"],[1,9447," "],[-1,9450," "]],[8010,8010],[9450,9450]]],[1567322283942,[null,[[1,8010,"\n"],[-1,8026,"\n"],[1,8030," "],[-1,8070,"\n"],[1,8078," "],[-1,8096," "],[1,8100,"写"],[1,8102,"；式"],[-1,8102,"式；\n"],[1,8110," "],[-1,8160,"\n"],[1,8710," "],[-1,8728,"\n"],[1,8732," "],[-1,8807,"\n"],[1,8812,")"],[-1,8842,"，"],[1,8845,"，"],[-1,8858,"出"],[1,8861,"出"],[-1,8861,"\n"],[1,8864," "],[-1,8876,"\n"],[1,8880," "],[-1,8892,"\n"],[1,8905,"\n"],[-1,8911,"，"],[1,8920,"，"],[-1,8924,"\n"],[1,9005,")"],[-1,9005,"\n"],[1,9008,"\n"],[-1,9027,"\n"],[1,9239," "],[1,9245," "],[-1,9245,"n"],[1,9261,"法"],[-1,9261,"）\n"],[1,9267," "],[-1,9268,"C"],[1,9270,"C"],[1,9276,"；"],[-1,9277,"；\n"],[1,9282," "],[-1,9306,"}"],[1,9310,"式"],[-1,9311,"\n"],[1,9315," "],[-1,9321,"\n"],[1,9326,"4"],[-1,9331,"\n"],[1,9336,"5"],[-1,9360,"\n"],[1,9445,"\n"],[-1,9446," "],[1,9450," "]],[9450,9450],[8010,8010]]],[1567322228681,["GJX@GJXAIOU",[[-1,9464,"往控制台输出\n\n往日志文件输出\n\nPatternLayout表示输出格式为表达式\n\n这个是具体的表达式格式\n\n输出日志文件名，默认是相对路径 true表示往后追加，flase表示先清空然后追加"]],[9464,9560],[9464,9464]]],[1567322229126,["GJX@GJXAIOU",[[-1,9465,"\n"]],[9464,9464],[9463,9463]]],[1567322230337,["GJX@GJXAIOU",[[-1,9464,"\n"]],[9464,9464],[9463,9463]]],[1567322233007,["GJX@GJXAIOU",[[-1,9464,"1."]],[9466,9466],[9464,9464]]],[1567322233632,["GJX@GJXAIOU",[[1,9464,"- "]],[9464,9464],[9466,9466]]],[1567322235342,["GJX@GJXAIOU",[[-1,9512,"\n"]],[9513,9513],[9512,9512]]],[1567322235699,["GJX@GJXAIOU",[[-1,9511,"\n"]],[9512,9512],[9511,9511]]],[1567322243125,["GJX@GJXAIOU",[[-1,9514,"2."]],[9516,9516],[9514,9514]]],[1567322243503,["GJX@GJXAIOU",[[-1,9513,"\n"]],[9514,9514],[9513,9513]]],[1567322244616,["GJX@GJXAIOU",[[1,9513,"- "]],[9513,9513],[9515,9515]]],[1567322268921,["GJX@GJXAIOU",[[-1,9684,"在 src 下有 log4j.properties"]],[9684,9709],[9684,9684]]],[1567322272240,["GJX@GJXAIOU",[[-1,9571,"    |  |"]],[9579,9579],[9571,9571]]],[1567322273704,["GJX@GJXAIOU",[[1,9571,"在 src 下有 log4j.properties"]],[9571,9571],[9596,9596]]],[1567322276331,["GJX@GJXAIOU",[[-1,9567,"2.2"]],[9567,9570],[9567,9567]]],[1567322276556,["GJX@GJXAIOU",[[1,9567,"-"]],[9567,9567],[9568,9568]]],[1567322276707,["GJX@GJXAIOU",[[1,9569," "]],[9568,9568],[9569,9569]]],[1567322278763,["GJX@GJXAIOU",[[-1,9549," 必须保证有 log4j.jar\n"]],[9549,9566],[9549,9549]]],[1567322279120,["GJX@GJXAIOU",[[1,9549,"- "]],[9549,9549],[9551,9551]]],[1567322343937,[null,[[-1,8010,"\n"],[1,8027,"\n"],[-1,8030," "],[1,8071,"\n"],[-1,8078," "],[1,8097," "],[-1,8100,"写"],[-1,8103,"；式"],[1,8105,"式；\n"],[-1,8110," "],[1,8161,"\n"],[-1,8710," "],[1,8729,"\n"],[-1,8732," "],[1,8808,"\n"],[-1,8812,")"],[1,8843,"，"],[-1,8845,"，"],[1,8859,"出"],[-1,8861,"出"],[1,8862,"\n"],[-1,8864," "],[1,8877,"\n"],[-1,8882," "],[1,8893,"\n"],[-1,8905,"\n"],[1,8912,"，"],[-1,8920,"，"],[1,8925,"\n"],[-1,9005,")"],[1,9006,"\n"],[-1,9008,"\n"],[1,9028,"\n"],[-1,9239," "],[-1,9246," "],[1,9247,"n"],[-1,9262,"法"],[1,9263,"）\n"],[-1,9267," "],[1,9269,"C"],[-1,9270,"C"],[-1,9277,"；名"],[1,9279,"名；\n"],[-1,9282," "],[1,9307,"}"],[-1,9310,"式"],[1,9312,"\n"],[-1,9316," "],[1,9322,"\n"],[-1,9326,"4"],[1,9332,"\n"],[-1,9336,"5"],[1,9361,"\n"],[-1,9441,"\n"],[1,9447," "],[-1,9450," "],[1,9464,"\n"],[-1,9466,"."],[1,9511,"开关"],[-1,9512,"关"],[-1,9515,"."],[1,9549,"1"],[-1,9553,"2"],[1,9554," "],[-1,9580,"|"],[-1,9685,"s"],[1,9686,"\n"]],[8010,8010],[9687,9687]]],[1567322343937,[null,[[1,8010,"\n"],[-1,8026,"\n"],[1,8030," "],[-1,8070,"\n"],[1,8078," "],[-1,8096," "],[1,8100,"写"],[1,8102,"；式"],[-1,8102,"式；\n"],[1,8110," "],[-1,8160,"\n"],[1,8710," "],[-1,8728,"\n"],[1,8732," "],[-1,8807,"\n"],[1,8812,")"],[-1,8842,"，"],[1,8845,"，"],[-1,8858,"出"],[1,8861,"出"],[-1,8861,"\n"],[1,8864," "],[-1,8876,"\n"],[1,8882," "],[-1,8892,"\n"],[1,8905,"\n"],[-1,8911,"，"],[1,8920,"，"],[-1,8924,"\n"],[1,9005,")"],[-1,9005,"\n"],[1,9008,"\n"],[-1,9027,"\n"],[1,9239," "],[1,9245," "],[-1,9245,"n"],[1,9261,"法"],[-1,9261,"）\n"],[1,9267," "],[-1,9268,"C"],[1,9270,"C"],[1,9276,"；名"],[-1,9276,"名；\n"],[1,9282," "],[-1,9306,"}"],[1,9310,"式"],[-1,9311,"\n"],[1,9316," "],[-1,9321,"\n"],[1,9326,"4"],[-1,9331,"\n"],[1,9336,"5"],[-1,9360,"\n"],[1,9441,"\n"],[-1,9446," "],[1,9450," "],[-1,9463,"\n"],[1,9466,"."],[-1,9510,"开关"],[1,9513,"关"],[1,9515,"."],[-1,9548,"1"],[1,9553,"2"],[-1,9553," "],[1,9580,"|"],[1,9684,"s"],[-1,9684,"\n"]],[9687,9687],[8010,8010]]],[1567322284696,["GJX@GJXAIOU",[[1,9549," 必须保证有 log4j.jar\n"]],[9549,9549],[9549,9566]]],[1567322287352,["GJX@GJXAIOU",[[-1,9546,"2.1"]],[9549,9549],[9546,9546]]],[1567322287900,["GJX@GJXAIOU",[[1,9546,"-"]],[9546,9546],[9547,9547]]],[1567322288067,["GJX@GJXAIOU",[[1,9548," "]],[9547,9547],[9548,9548]]],[1567322290514,["GJX@GJXAIOU",[[-1,9545,"\n"]],[9545,9545],[9544,9544]]],[1567322292453,["GJX@GJXAIOU",[[1,9545,"  "]],[9563,9563],[9565,9565]]],[1567322294129,["GJX@GJXAIOU",[[1,9567,"  "]],[9590,9590],[9592,9592]]],[1567322295155,["GJX@GJXAIOU",[[-1,9591,"e"]],[9592,9592],[9591,9591]]],[1567322296801,["GJX@GJXAIOU",[[1,9591,"e"]],[9591,9591],[9592,9592]]],[1567322298008,["GJX@GJXAIOU",[[-1,9566,"\n"]],[9566,9566],[9565,9565]]],[1567322307579,["GJX@GJXAIOU",[[-1,9703,"![文本框: "]],[9710,9710],[9703,9703]]],[1567322307763,["GJX@GJXAIOU",[[-1,9702,"\n"]],[9703,9703],[9702,9702]]],[1567322307859,["GJX@GJXAIOU",[[-1,9701,"\n"]],[9702,9702],[9701,9701]]],[1567322307959,["GJX@GJXAIOU",[[-1,9700,"\n"]],[9701,9701],[9700,9700]]],[1567322314457,["GJX@GJXAIOU",[[-1,9597,"|  | ![文本框: <settings>](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image007.gif) | "]],[9700,9700],[9597,9597]]],[1567322315715,["GJX@GJXAIOU",[[1,9597,"\n"]],[9597,9597],[9598,9598]]],[1567322317646,["GJX@GJXAIOU",[[1,9597,"···"]],[9597,9597],[9600,9600]]],[1567322319880,["GJX@GJXAIOU",[[-1,9597,"···"]],[9600,9600],[9597,9597]]],[1567322321254,["GJX@GJXAIOU",[[1,9597,"```"]],[9597,9597],[9600,9600]]],[1567322321308,["GJX@GJXAIOU",[[1,9600,"language\n```\n"]],[9600,9600],[9600,9608]]],[1567322322308,["GJX@GJXAIOU",[[-1,9600,"language"],[1,9608,"j"]],[9600,9608],[9601,9601]]],[1567322322728,["GJX@GJXAIOU",[[1,9601,"ava"]],[9601,9601],[9604,9604]]],[1567322322868,["GJX@GJXAIOU",[[1,9605,"\n"]],[9604,9604],[9605,9605]]],[1567322330720,["GJX@GJXAIOU",[[-1,9611,"<setting  name=\"logImpl\"  value=\"LOG4J\"/>\n\n</settings>"]],[9611,9665],[9611,9611]]],[1567322332185,["GJX@GJXAIOU",[[1,9605,"<setting  name=\"logImpl\"  value=\"LOG4J\"/>\n\n</settings>"]],[9605,9605],[9659,9659]]],[1567322333610,["GJX@GJXAIOU",[[1,9605,"\n"]],[9604,9604],[9605,9605]]],[1567322334377,["GJX@GJXAIOU",[[1,9605,"<."]],[9605,9605],[9607,9607]]],[1567322335625,["GJX@GJXAIOU",[[-1,9606,"."]],[9607,9607],[9606,9606]]],[1567322336211,["GJX@GJXAIOU",[[1,9606,">"]],[9606,9606],[9607,9607]]],[1567322338521,["GJX@GJXAIOU",[[1,9606,"settint"]],[9606,9606],[9613,9613]]],[1567322339569,["GJX@GJXAIOU",[[-1,9612,"t"]],[9613,9613],[9612,9612]]],[1567322339989,["GJX@GJXAIOU",[[1,9612,"g"]],[9612,9612],[9613,9613]]],[1567322341985,["GJX@GJXAIOU",[[-1,9657,"\n"]],[9657,9657],[9656,9656]]],[1567322403936,[null,[[-1,8010,"\n"],[1,8027,"\n"],[-1,8030," "],[1,8071,"\n"],[-1,8078," "],[1,8097," "],[-1,8100,"写"],[-1,8103,"；式"],[1,8105,"式；\n"],[-1,8110," "],[1,8161,"\n"],[-1,8710," "],[1,8729,"\n"],[-1,8732," "],[1,8808,"\n"],[-1,8812,")"],[1,8843,"，"],[-1,8845,"，"],[1,8859,"出"],[-1,8861,"出"],[1,8862,"\n"],[-1,8864," "],[1,8877,"\n"],[-1,8882," "],[1,8893,"\n"],[-1,8905,"\n"],[1,8912,"，"],[-1,8920,"，"],[1,8925,"\n"],[-1,9005,")"],[1,9006,"\n"],[-1,9008,"\n"],[1,9028,"\n"],[-1,9239," "],[-1,9246," "],[1,9247,"n"],[-1,9262,"法"],[1,9263,"）\n"],[-1,9266," "],[-1,9269," "],[1,9271," "],[-1,9277,"；名"],[1,9279,"名；\n"],[-1,9282," "],[1,9307,"}"],[-1,9310,"式"],[1,9312,"\n"],[-1,9315," "],[1,9322,"\n"],[-1,9326,"4"],[1,9332,"\n"],[-1,9336,"5"],[1,9361,"\n"],[-1,9445,"\n"],[1,9447," "],[-1,9450," "],[1,9464,"\n"],[-1,9466,"."],[-1,9511,"\n关"],[1,9513,"开关\n"],[-1,9515,"."],[1,9545,"\n"],[1,9568,"-"],[-1,9569,"\n-2"],[-1,9590,"e"],[1,9591,"o"],[1,9597,"s\n"],[-1,9674,"gs>"]],[8010,8010],[9674,9674]]],[1567322403936,[null,[[1,8010,"\n"],[-1,8026,"\n"],[1,8030," "],[-1,8070,"\n"],[1,8078," "],[-1,8096," "],[1,8100,"写"],[1,8102,"；式"],[-1,8102,"式；\n"],[1,8110," "],[-1,8160,"\n"],[1,8710," "],[-1,8728,"\n"],[1,8732," "],[-1,8807,"\n"],[1,8812,")"],[-1,8842,"，"],[1,8845,"，"],[-1,8858,"出"],[1,8861,"出"],[-1,8861,"\n"],[1,8864," "],[-1,8876,"\n"],[1,8882," "],[-1,8892,"\n"],[1,8905,"\n"],[-1,8911,"，"],[1,8920,"，"],[-1,8924,"\n"],[1,9005,")"],[-1,9005,"\n"],[1,9008,"\n"],[-1,9027,"\n"],[1,9239," "],[1,9245," "],[-1,9245,"n"],[1,9261,"法"],[-1,9261,"）\n"],[1,9266," "],[1,9268," "],[-1,9269," "],[1,9276,"；名"],[-1,9276,"名；\n"],[1,9282," "],[-1,9306,"}"],[1,9310,"式"],[-1,9311,"\n"],[1,9315," "],[-1,9321,"\n"],[1,9326,"4"],[-1,9331,"\n"],[1,9336,"5"],[-1,9360,"\n"],[1,9445,"\n"],[-1,9446," "],[1,9450," "],[-1,9463,"\n"],[1,9466,"."],[1,9510,"\n关"],[-1,9510,"开关\n"],[1,9515,"."],[-1,9544,"\n"],[-1,9568,"-"],[1,9570,"\n-2"],[1,9588,"e"],[-1,9588,"o"],[-1,9595,"s\n"],[1,9674,"gs>"]],[9674,9674],[8010,8010]]],[1567322344978,["GJX@GJXAIOU",[[1,9615,"    "]],[9615,9615],[9619,9619]]],[1567322349475,["GJX@GJXAIOU",[[1,9613,"s"]],[9613,9613],[9614,9614]]],[1567322355632,["GJX@GJXAIOU",[[-1,9680,"](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image008.gif)"]],[9680,9758],[9680,9680]]],[1567322355821,["GJX@GJXAIOU",[[-1,9681,"\n"]],[9680,9680],[9679,9679]]],[1567322357455,["GJX@GJXAIOU",[[-1,9680,"\n"]],[9680,9680],[9679,9679]]],[1567322357816,["GJX@GJXAIOU",[[-1,9679,"\n"]],[9679,9679],[9678,9678]]],[1567322360220,["GJX@GJXAIOU",[[-1,9679,"3."]],[9681,9681],[9679,9679]]],[1567322360457,["GJX@GJXAIOU",[[1,9679,"-"]],[9679,9679],[9680,9680]]],[1567322360622,["GJX@GJXAIOU",[[1,9681," "]],[9680,9680],[9681,9681]]],[1567322367500,["GJX@GJXAIOU",[[-1,9717,"3.1"]],[9720,9720],[9717,9717]]],[1567322368012,["GJX@GJXAIOU",[[1,9717,"-"]],[9717,9717],[9718,9718]]],[1567322368201,["GJX@GJXAIOU",[[1,9719," "]],[9718,9718],[9719,9719]]],[1567322369241,["GJX@GJXAIOU",[[1,9717,"  "]],[9719,9719],[9721,9721]]],[1567322370327,["GJX@GJXAIOU",[[-1,9716,"\n"]],[9716,9716],[9715,9715]]],[1567322463938,[null,[[-1,8010,"\n"],[1,8027,"\n"],[-1,8030," "],[1,8071,"\n"],[-1,8078," "],[1,8097," "],[-1,8100,"写"],[-1,8103,"；式"],[1,8105,"式；\n"],[-1,8110," "],[1,8161,"\n"],[-1,8710," "],[1,8729,"\n"],[-1,8732," "],[1,8808,"\n"],[-1,8812,")"],[1,8843,"，"],[-1,8845,"，"],[1,8859,"出"],[-1,8861,"出"],[1,8862,"\n"],[-1,8864," "],[1,8877,"\n"],[-1,8882," "],[1,8893,"\n"],[-1,8905,"\n"],[1,8912,"，"],[-1,8920,"，"],[1,8925,"\n"],[-1,9005,")"],[1,9006,"\n"],[-1,9008,"\n"],[1,9028,"\n"],[-1,9239," "],[-1,9246," "],[1,9247,"n"],[-1,9262,"法"],[1,9263,"）\n"],[-1,9266," "],[-1,9269," "],[1,9271," "],[-1,9277,"；名"],[1,9279,"名；\n"],[-1,9282," "],[1,9307,"}"],[-1,9310,"式"],[1,9312,"\n"],[-1,9315," "],[1,9322,"\n"],[-1,9326,"4"],[1,9332,"\n"],[-1,9336,"5"],[1,9361,"\n"],[-1,9445,"\n"],[1,9447," "],[-1,9450," "],[1,9464,"\n"],[-1,9466,"."],[-1,9511,"\n关"],[1,9513,"开关\n"],[-1,9515,"."],[1,9545,"\n"],[1,9568,"-"],[-1,9569,"\n-2"],[-1,9590,"e"],[1,9591,"o"],[1,9597,"s\n"],[-1,9680,"\n"],[-1,9682,"3."],[1,9716,"别)\n"],[-1,9719,"3"],[-1,9721,".1"]],[8010,8010],[9721,9721]]],[1567322463938,[null,[[1,8010,"\n"],[-1,8026,"\n"],[1,8030," "],[-1,8070,"\n"],[1,8078," "],[-1,8096," "],[1,8100,"写"],[1,8102,"；式"],[-1,8102,"式；\n"],[1,8110," "],[-1,8160,"\n"],[1,8710," "],[-1,8728,"\n"],[1,8732," "],[-1,8807,"\n"],[1,8812,")"],[-1,8842,"，"],[1,8845,"，"],[-1,8858,"出"],[1,8861,"出"],[-1,8861,"\n"],[1,8864," "],[-1,8876,"\n"],[1,8882," "],[-1,8892,"\n"],[1,8905,"\n"],[-1,8911,"，"],[1,8920,"，"],[-1,8924,"\n"],[1,9005,")"],[-1,9005,"\n"],[1,9008,"\n"],[-1,9027,"\n"],[1,9239," "],[1,9245," "],[-1,9245,"n"],[1,9261,"法"],[-1,9261,"）\n"],[1,9266," "],[1,9268," "],[-1,9269," "],[1,9276,"；名"],[-1,9276,"名；\n"],[1,9282," "],[-1,9306,"}"],[1,9310,"式"],[-1,9311,"\n"],[1,9315," "],[-1,9321,"\n"],[1,9326,"4"],[-1,9331,"\n"],[1,9336,"5"],[-1,9360,"\n"],[1,9445,"\n"],[-1,9446," "],[1,9450," "],[-1,9463,"\n"],[1,9466,"."],[1,9510,"\n关"],[-1,9510,"开关\n"],[1,9515,"."],[-1,9544,"\n"],[-1,9568,"-"],[1,9570,"\n-2"],[1,9588,"e"],[-1,9588,"o"],[-1,9595,"s\n"],[1,9680,"\n"],[1,9681,"3."],[-1,9713,"别)\n"],[1,9719,"3"],[1,9720,".1"]],[9721,9721],[8010,8010]]],[1567322443336,["GJX@GJXAIOU",[[-1,9762,"\n"]],[9763,9763],[9762,9762]]],[1567322457600,["GJX@GJXAIOU",[[-1,9813,"\n"]],[9814,9814],[9813,9813]]],[1567322457976,["GJX@GJXAIOU",[[-1,9812,"\n"]],[9813,9813],[9812,9812]]],[1567322462031,["GJX@GJXAIOU",[[-1,9859,"3.1.1 "]],[9859,9865],[9859,9859]]],[1567322462435,["GJX@GJXAIOU",[[1,9859,"- "]],[9859,9859],[9861,9861]]],[1567322524799,[null,[[-1,8010,"\n"],[1,8027,"\n"],[-1,8030," "],[1,8071,"\n"],[-1,8078," "],[1,8097," "],[-1,8100,"写"],[-1,8103,"；式"],[1,8105,"式；\n"],[-1,8110," "],[1,8161,"\n"],[-1,8710," "],[1,8729,"\n"],[-1,8732," "],[1,8808,"\n"],[-1,8812,")"],[1,8843,"，"],[-1,8845,"，"],[1,8859,"出"],[-1,8861,"出"],[1,8862,"\n"],[-1,8864," "],[1,8877,"\n"],[-1,8880," "],[1,8893,"\n"],[-1,8905,"\n"],[1,8912,"，"],[-1,8920,"，"],[1,8925,"\n"],[-1,9005,")"],[1,9006,"\n"],[-1,9008,"\n"],[1,9028,"\n"],[-1,9239," "],[-1,9246," "],[1,9247,"n"],[-1,9262,"法"],[1,9263,"）\n"],[-1,9267," "],[1,9269,"C"],[-1,9270,"C"],[-1,9277,"；"],[1,9279,"；\n"],[-1,9282," "],[1,9307,"}"],[-1,9310,"式"],[1,9312,"\n"],[-1,9315," "],[1,9322,"\n"],[-1,9326,"4"],[1,9332,"\n"],[-1,9336,"5"],[1,9361,"\n"],[-1,9445,"\n"],[1,9447," "],[-1,9450," "],[1,9463,"\n"],[-1,9466,"."],[-1,9511,"\n关"],[1,9513,"开关\n"],[-1,9515,"."],[1,9545,"\n"],[-1,9568," \n-2"],[1,9572,"- "],[-1,9590,"e"],[1,9591,"o"],[1,9597,"s\n"],[-1,9680,"\n"],[-1,9682,"3."],[1,9716,"别)\n"],[-1,9719,"3"],[-1,9721,".1"],[1,9762,"类"],[-1,9763,"\n"],[1,9812,"包级"],[-1,9813,"\n\n"],[1,9859,"情\n\n"],[-1,9860," .1"]],[8010,8010],[9860,9860]]],[1567322524799,[null,[[1,8010,"\n"],[-1,8026,"\n"],[1,8030," "],[-1,8070,"\n"],[1,8078," "],[-1,8096," "],[1,8100,"写"],[1,8102,"；式"],[-1,8102,"式；\n"],[1,8110," "],[-1,8160,"\n"],[1,8710," "],[-1,8728,"\n"],[1,8732," "],[-1,8807,"\n"],[1,8812,")"],[-1,8842,"，"],[1,8845,"，"],[-1,8858,"出"],[1,8861,"出"],[-1,8861,"\n"],[1,8864," "],[-1,8876,"\n"],[1,8880," "],[-1,8892,"\n"],[1,8905,"\n"],[-1,8911,"，"],[1,8920,"，"],[-1,8924,"\n"],[1,9005,")"],[-1,9005,"\n"],[1,9008,"\n"],[-1,9027,"\n"],[1,9239," "],[1,9245," "],[-1,9245,"n"],[1,9261,"法"],[-1,9261,"）\n"],[1,9267," "],[-1,9268,"C"],[1,9270,"C"],[1,9276,"；"],[-1,9277,"；\n"],[1,9282," "],[-1,9306,"}"],[1,9310,"式"],[-1,9311,"\n"],[1,9315," "],[-1,9321,"\n"],[1,9326,"4"],[-1,9331,"\n"],[1,9336,"5"],[-1,9360,"\n"],[1,9445,"\n"],[-1,9446," "],[1,9450," "],[-1,9462,"\n"],[1,9466,"."],[1,9510,"\n关"],[-1,9510,"开关\n"],[1,9515,"."],[-1,9544,"\n"],[1,9568," \n-2"],[-1,9568,"- "],[1,9588,"e"],[-1,9588,"o"],[-1,9595,"s\n"],[1,9680,"\n"],[1,9681,"3."],[-1,9713,"别)\n"],[1,9719,"3"],[1,9720,".1"],[-1,9759,"类"],[1,9761,"\n"],[-1,9809,"包级"],[1,9812,"\n\n"],[-1,9856,"情\n\n"],[1,9860," .1"]],[9860,9860],[8010,8010]]],[1567322464763,["GJX@GJXAIOU",[[-1,9885,"3.1.2"]],[9885,9890],[9885,9885]]],[1567322464996,["GJX@GJXAIOU",[[1,9885,"-"]],[9885,9885],[9886,9886]]],[1567322465156,["GJX@GJXAIOU",[[1,9887," "]],[9886,9886],[9887,9887]]],[1567322466880,["GJX@GJXAIOU",[[-1,9884,"\n"]],[9884,9884],[9883,9883]]],[1567322468656,["GJX@GJXAIOU",[[-1,9858,"\n"]],[9858,9858],[9857,9857]]],[1567322468847,["GJX@GJXAIOU",[[1,9857,"  "]],[9857,9857],[9859,9859]]],[1567322470284,["GJX@GJXAIOU",[[1,9860,"  "]],[9862,9862],[9864,9864]]],[1567322471113,["GJX@GJXAIOU",[[1,9887,"  "]],[9890,9890],[9892,9892]]],[1567322644802,[null,[[-1,8010,"\n"],[1,8027,"\n"],[-1,8030," "],[1,8071,"\n"],[-1,8078," "],[1,8097," "],[-1,8100,"写"],[-1,8103,"；式"],[1,8105,"式；\n"],[-1,8110," "],[1,8161,"\n"],[-1,8710," "],[1,8729,"\n"],[-1,8732," "],[1,8808,"\n"],[-1,8812,")"],[1,8843,"，"],[-1,8845,"，"],[1,8859,"出"],[-1,8861,"出"],[1,8862,"\n"],[-1,8864," "],[1,8877,"\n"],[-1,8882," "],[1,8893,"\n"],[-1,8905,"\n"],[1,8912,"，"],[-1,8920,"，"],[1,8925,"\n"],[-1,9005,")"],[1,9006,"\n"],[-1,9008,"\n"],[1,9028,"\n"],[-1,9238," "],[-1,9246," "],[1,9247,"n"],[-1,9262,"法"],[1,9263,"）\n"],[-1,9266," "],[-1,9269," "],[1,9271," "],[-1,9277,"；"],[1,9279,"；\n"],[-1,9282," "],[1,9307,"}"],[-1,9310,"式"],[1,9312,"\n"],[-1,9316," "],[1,9322,"\n"],[-1,9326,"4"],[1,9332,"\n"],[-1,9336,"5"],[1,9361,"\n"],[-1,9445,"\n"],[1,9447," "],[-1,9450," "],[1,9464,"\n"],[-1,9466,"."],[1,9511,"开关"],[-1,9512,"关"],[-1,9515,"."],[1,9545,"\n"],[-1,9568," \n-2"],[1,9572,"- "],[-1,9590,"e"],[1,9591,"o"],[1,9597,"s\n"],[-1,9680,"\n"],[-1,9682,"3."],[1,9716,"别)\n"],[-1,9719,"3"],[-1,9721,".1"],[1,9762,"类"],[-1,9763,"\n"],[1,9812,"包级"],[-1,9813,"\n\n"],[1,9857,"件事情"],[-1,9859,"件"],[1,9860,"\n"],[-1,9863," .1"],[1,9887,"信息\n"],[-1,9890,"1"],[-1,9892,".2"]],[8010,8010],[9892,9892]]],[1567322644803,[null,[[1,8010,"\n"],[-1,8026,"\n"],[1,8030," "],[-1,8070,"\n"],[1,8078," "],[-1,8096," "],[1,8100,"写"],[1,8102,"；式"],[-1,8102,"式；\n"],[1,8110," "],[-1,8160,"\n"],[1,8710," "],[-1,8728,"\n"],[1,8732," "],[-1,8807,"\n"],[1,8812,")"],[-1,8842,"，"],[1,8845,"，"],[-1,8858,"出"],[1,8861,"出"],[-1,8861,"\n"],[1,8864," "],[-1,8876,"\n"],[1,8882," "],[-1,8892,"\n"],[1,8905,"\n"],[-1,8911,"，"],[1,8920,"，"],[-1,8924,"\n"],[1,9005,")"],[-1,9005,"\n"],[1,9008,"\n"],[-1,9027,"\n"],[1,9238," "],[1,9245," "],[-1,9245,"n"],[1,9261,"法"],[-1,9261,"）\n"],[1,9266," "],[1,9268," "],[-1,9269," "],[1,9276,"；"],[-1,9277,"；\n"],[1,9282," "],[-1,9306,"}"],[1,9310,"式"],[-1,9311,"\n"],[1,9316," "],[-1,9321,"\n"],[1,9326,"4"],[-1,9331,"\n"],[1,9336,"5"],[-1,9360,"\n"],[1,9445,"\n"],[-1,9446," "],[1,9450," "],[-1,9463,"\n"],[1,9466,"."],[-1,9510,"开关"],[1,9513,"关"],[1,9515,"."],[-1,9544,"\n"],[1,9568," \n-2"],[-1,9568,"- "],[1,9588,"e"],[-1,9588,"o"],[-1,9595,"s\n"],[1,9680,"\n"],[1,9681,"3."],[-1,9713,"别)\n"],[1,9719,"3"],[1,9720,".1"],[-1,9759,"类"],[1,9761,"\n"],[-1,9809,"包级"],[1,9812,"\n\n"],[-1,9854,"件事情"],[1,9859,"件"],[-1,9859,"\n"],[1,9863," .1"],[-1,9884,"信息\n"],[1,9890,"1"],[1,9891,".2"]],[9892,9892],[8010,8010]]],[1567322600004,["GJX@GJXAIOU",[[1,9732,"`"]],[9732,9732],[9733,9733]]],[1567322601243,["GJX@GJXAIOU",[[1,9762,"`"]],[9762,9762],[9763,9763]]],[1567322603318,["GJX@GJXAIOU",[[1,9767,"`"]],[9767,9767],[9768,9768]]],[1567322604706,["GJX@GJXAIOU",[[1,9809,"`"]],[9809,9809],[9810,9810]]],[1567322607142,["GJX@GJXAIOU",[[1,9817,"` "]],[9817,9817],[9819,9819]]],[1567322608061,["GJX@GJXAIOU",[[1,9817," "]],[9817,9817],[9818,9818]]],[1567322609631,["GJX@GJXAIOU",[[-1,9819," "]],[9820,9820],[9819,9819]]],[1567322611438,["GJX@GJXAIOU",[[1,9835,"`"]],[9835,9835],[9836,9836]]],[1567322613440,["GJX@GJXAIOU",[[1,9842,"`"]],[9842,9842],[9843,9843]]],[1567322614356,["GJX@GJXAIOU",[[1,9858,"`"]],[9858,9858],[9859,9859]]],[1567322619188,["GJX@GJXAIOU",[[1,9888,",z "]],[9888,9888],[9890,9890]]],[1567322619582,["GJX@GJXAIOU",[[1,9890,"hel"]],[9890,9890],[9893,9893]]],[1567322620452,["GJX@GJXAIOU",[[-1,9888,",zhel "]],[9893,9893],[9887,9887]]],[1567322626740,["GJX@GJXAIOU",[[1,9887,"，这样可以"]],[9887,9887],[9892,9892]]],[1567322627904,["GJX@GJXAIOU",[[-1,9892," "]],[9893,9893],[9892,9892]]]],null,"GJX@GJXAIOU"],["abbc777b-367c-4c0d-b7ad-04cec60eccd9",1567324024008,"---\nstyle: summer\n---\n# FrameDay01 Mybatis3\n\n## 一、前言：数据库 SQL命令\n\n- 创建数据库并指定编码\n`Create database 数据库名 default character set utf8`\n \n - 创建表\n```java\nCreatetable 表名(\n   列名 类型 约束 auto_increament comment \"备注\"\n);\n```\n\n\n## 二、命名规范\n\n* 项目名:没有要求,不起中文\n* 包:公司域名倒写 com.bjsxt\n* 数据访问层:dao, persist, **mapper**\n* 实体:entity, model, bean,javabean, **pojo**\n* 业 务 逻 辑 : **service**，biz \n* 控制器: controller, **servlet**,action,web\n* 过滤器: filter\n* 异常: exception\n* 监听器:listener\n* 注释:\n  * 类上和方法上使用文档注释 `/** */`\n  * 在方法里面使用`/* */` 或`//`\n* 类: 大驼峰\n* 方法,属性:小驼峰\n\n## 四、MVC开发模式\n\n- M: Model 模型；实体类和业务和 dao\n- V: view 视图 ；现在一般 使用. JSP\n- C: Controller 控制器,现在使用servlet\n  - 作用：视图和逻辑分离\n- MVC 适用场景:大型项目开发.\n- **项目实现步骤**：\n  - 先设计数据库\n  - 再写实体类：用于封装数据\n  - 持久层DAO\n  - 业务逻辑\n  - 控制器\n  - 视图\n![MVC开发模式]($resource/MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F.png)\n\n\n## 五、框架概念\n\n- 框架:软件的半成品.未解决问题制定的一套约束,在提供功能基础上进行扩充。\n- **框架中一些不能被封装的代码(变量),需要使用框架者新建一个xml 文件,在文件中添加变量内容**。\n  - **需要建立特定位置和特定名称的配置文件**。\n  - **需要使用 xml 解析技术和反射技术**。\n\n**常用概念**\n- 类库:提供的类没有封装一定逻辑。\n举例:类库就是名言警句,写作文时引入名言警句\n\n- 框架:区别于类库,里面有一些约束。\n举例:框架是填空题\n\n## 六、MyBatis 简介\n\n- Mybatis 开源免费框架.原名叫 iBatis,2010 在 google  code,2013 年迁移到 github\n\n- 作用: **数据访问层（即是 Dao）框架**.\n  - 底层是对 JDBC 的封装.\n\n- mybatis 优点之一:\n  - **使用 mybatis 时不需要编写实现类,只需要写需要执行的 sql 命令。**\n\n\n## 七、MyBatis 使用\n\n### （一）环境搭建\n\n- 步骤一：导入 jar\n![MyBatis需要导入的Jar包]($resource/MyBatis%E9%9C%80%E8%A6%81%E5%AF%BC%E5%85%A5%E7%9A%84Jar%E5%8C%85.png)\n- 步骤二：**在 src 下新建全局配置文件**(编写 JDBC 四个变量)\n  - 没有名称和地址要求\n  - 在全局配置文件中引入 DTD 或 schema【使用见 Blogs -> DTD】\n    - 如果导入 dtd 后没有提示：Window--> preference --> XML --> XMl catalog --> add 按钮\n  - 全局配置文件内容\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n  PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n  \n<configuration>\n\t<!-- default 为引用 environment 的 id,即当前所使用的环境 -->\n\t<environments default=\"default\">\n\t\t<!-- 声明可以使用的环境 -->\n\t\t<environment id=\"default\">\n\t\t\t<!-- 使用原生JDBC事务 -->\n\t\t\t<transactionManager type=\"JDBC\"></transactionManager>\n\t\t\t<dataSource type=\"POOLED\">\n    \t\t  <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n    \t      <property name=\"url\" value=\"jdbc:mysql://localhost:3306/数据库名\"/>\n    \t\t  <property name=\"username\" value=\"root\"/>\n    \t      <property name=\"password\" value=\"GJXAIOU\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t<mappers>\n\t\t<mapper resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n\t</mappers>\n</configuration>\n```\n\n- 步骤三：新建以 mapper 结尾的包,在包下新建:实体类名+Mapper.xml\n  - 文件作用：编写需要执行的 SQL 命令\n  - 把 xml 文件理解成实现类.\n xml 文件内容为：\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:表示方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect * from flower\n\t</select>\n</mapper>\n```\n\n- 步骤四：测试结果(只有在单独使用 mybatis 时使用,最后 ssm 整合时下面代码不需要编写\n```java\nimport com.bjsxt.pojo.Flower;\n\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n### （二）环境搭建详解\n\n**全局配置文件中内容**\n- <transactionManager/> type 属性可取值\n  - JDBC,事务管理使用 JDBC 原生事务管理方式\n  - MANAGED 把事务管理转交给其他容器.相当于设置原生JDBC 事务setAutoMapping(false);\n- <dataSouce/>type 属性可取值：\n  - POOLED 使用数据库连接池\n  - UNPOOLED 不使用数据库连接池,和直接使用 JDBC 一样\n  - JNDI :是 java 命名目录接口技术.\n\n## 八、数据库连接池【补充知识】\n\n- 在内存中开辟一块空间,存放多个数据库连接对象. \n- JDBC Tomcat Pool,直接由 tomcat 产生数据库连接池. \n- 图示:数据库连接池中有很多连接，他们可能处于 Active 或者 Idle 等等状态；\n  - active 活跃状态:当前连接对象被应用程序使用中\n  - Idle 空闲状态:等待应用程序使用\n- 使用数据库连接池的目的\n  - 在高频率访问数据库时,使用数据库连接池可以降低服务器系统压力,提升程序运行效率.\n    -  小型项目不适用数据库连接池.\n- 实现 JDBC tomcat Pool 的步骤.\n  - 在 web 项目的 META-INF 中存放 context.xml,在 context.xml 编写数据库连接池相关属性\n  - 把项目发布到 tomcat 中,则数据库连接池产生了\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\t<Resource\n\t\tdriverClassName=\"com.mysql.jdbc.Driver\"\n\t\turl=\"jdbc:mysql://localhost:3306/ssm\"\n\t\tusername=\"root\"\n\t\tpassword=\"smallming\"\n\t\tmaxActive=\"50\"\n\t\tmaxIdle=\"20\"\n\t\tname=\"test\"\n\t\tauth=\"Container\"\n\t\tmaxWait=\"10000\"\n\t\ttype=\"javax.sql.DataSource\"\n\t/>\n</Context>\n```\n\n - 可以在 Java 中使用 JNDI 获取数据库连接池中对象\n  - Context:上下文接口.context.xml 文件对象类型；代码见下面\n  - 当关闭连接对象时,把连接对象归还给数据库连接池,把状态改变成 Idle\n```java\n@WebServlet(\"/pool\")\npublic class DemoServlet extends HttpServlet {\n\t@Override\n\tprotected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n  \t  try {\n  \t\tContext cxt = new InitialContext();\n  \t\tDataSource ds = (DataSource) cxt.lookup(\"java:comp/env/test\");\n  \t\tConnection conn = ds.getConnection();\n  \t\tPreparedStatement ps = conn.prepareStatement(\"select * from flower\");\n  \t\tResultSet rs = ps.executeQuery();\n  \t\tres.setContentType(\"text/html;charset=utf-8\");\n  \t\tPrintWriter out = res.getWriter();\n  \t\twhile(rs.next()){\n  \t\t\tout.print(rs.getInt(1)+\"&nbsp;&nbsp;&nbsp;&nbsp;\"+rs.getString(2)+\"<br/>\");\n  \t\t}\n  \t\tout.flush();\n  \t\tout.close();\n  \t\trs.close();\n  \t} catch (NamingException e) {\n  \t\te.printStackTrace();\n  \t} catch (SQLException e) {\n  \t\te.printStackTrace();\n  \t}\n  }\n}\n```\n\n\n## 九、三种查询方式\n\n- `selectList()`  返回值为 `List<resultType  属性控制>`\n适用于查询结果都需要遍历的需求\n\n- `selectOne()` 返回值 `Object`,\n适用于返回结果只是变量或一行数据时\n\n- `selectMap()` 返回值 `Map`\n  - 适用于需要在查询结果中通过某列的值取到这行数据的需求.\n  - `Map<key,resultType  控制>`\n```java\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\t// selectList\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t// selectOne\n\t\tint count = session.selectOne(\"a.b.selById\");\n\t\tSystem.out.println(count);\n\t\t\n\t\t// selectMap\n\t\t//把数据库中哪个列的值当作map的key\n\t\tMap<Object, Object> map = session.selectMap(\"a.b.c\", \"name123\");\n\t\tSystem.out.println(map);\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n对应的 XML 文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t// 这里的 int 相当于 Ingeter\n\t<select id=\"selById\" resultType=\"int\">\n\t\tselect count(*) from flower\n\t</select>\n\t\n\t<select id=\"c\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n</mapper>\n```\n\n\n\n```java\n\n```\n\n\n\n\n##  十、注解\n\n- 注解存在的意义:简化 xml 文件的开发；\n- 注解在 servlet 3.0 规范之后大力推广的；\n- 注解前面的@XXX,表示引用一个@interface；\n  - @interface 表示注解声明\n- 注解可以有属性,因为注解其实就是一个接口(类)；\n- 每次使用注解都需要导包\n- 注解语法: @XXXX(属性名= 值)\n- 值的分类\n  - 如果值是基本数据类型或字符串: 属性名=值；\n  - 如果值是数组类型: 属性名={值,值}；\n    - 如果只有一个值可以省略大括号；\n  - 如果值是类类型,属性名=@名称\n- 如果注解只需要给一个属性赋值,且这个属性是默认属性,可以省略属性名\n\n\n## 十一、路径\n\n* 编写路径为了告诉编译器如何找到其他资源；\n\n* 路径分类\n  * 2.1 相对路径: 从当前资源出发找到其他资源的过程\n  * 2.2 绝对路径: 从根目录(服务器根目录或项目根目录)出发找到其他资源的过程\n    * 2.2.1 标志: 只要以/开头的都是绝对路径\n- 绝对路径:\n  - 如果是请求转发 / 表示项目根目录(WebContent)\n  - 其他重定向,<img/> <script/>,<style/>,location.href 等/都表示服务器根目录(tomcat/webapps 文件夹)\n- 如果客户端请求的控制器,控制器转发到JSP 后,jsp 中如果使用相对路径,需要按照控制器的路径去找其他资源；\n  - 保险办法:使用绝对路径,可以防止上面的问题；\n\n## 十二、Log4J\n- 由 apache 推出的开源免费日志处理的类库；\n\n- 为什么需要日志:\n  - 在项目中编写 System.out.println();输出到控制台,当项目发布到 tomcat 后,没有控制台(在命令行界面能看见.),不容易观察一些输出结果。\n  - **log4j 作用**：不仅能把内容输出到控制台,还能把内容输出到文件中.便于观察结果。\n\n- **使用步骤**:\n  - 导入 log4j-xxx.jar\n  - 在 src 下新建 log4j.properties(路径和名称都不允许改变)\n    - 在 ConversionPattern 中书写表达式；\n    - log4j.appender.LOGFILE.File  文件位置及名称(日志文件扩展名.log)\n```java\n// 遇到什么级别才输出：调试信息输出， 输出到控制台，输出到 log 文件\nlog4j.rootCategory=DEBUG, CONSOLE, LOGFILE\n\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppend er log4j.appender.CONSOLE.layout=org.apache.log4j.Patter nLayout log4j.appender.CONSOLE.layout.ConversionPattern=%C %d{YYYY-MM-dd  hh:mm:ss}%m  %n\n\nlog4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=E:/my.log \nlog4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.Patter nLayout log4j.appender.LOGFILE.layout.ConversionPattern=%C\t%m %L %n\n```\n\n- log4j 输出级别（一共五个级别）\n  - fatal(致命错误) >  error  ( 错误)  >  warn  ( 警告)  >  info(普通信息)  >  debug(调试信息)\n  - 在 log4j.properties 的第一行中控制输出级别，**只有大于等于该级别信息才输出**\n\n- log4j 输出目的地\n  -  在一行控制输出目的地\n 其中 CONSOLE 表示控制台 ，LOGFILE 表示文件\n\n![log4j输出目的地]($resource/log4j%E8%BE%93%E5%87%BA%E7%9B%AE%E7%9A%84%E5%9C%B0.jpg)\n\n在实际使用：新建一个类，例如：Test类\n- 使用方法一：\n```java\nLogger  logger = Logger.getLogger(Test.class);\n// 这里以 debug 为例，具体的方法看上面输出级别调用不同的方法\nlogger.debug(\"这是调试信息\"); \n```\n- 使用方法二：\n在 catch 中 ： `logger.error(e.getMessage());` 即可，注意在log4j配置文件中加上相关的表达式；\n\n- pattern 中常用几个表达式（区分大小写）\n  - %C 输出包名+类名；\n  - %d{YYYY-MM-dd  HH:mm:ss} 时间；\n  - %L 行号\n  - %m 信息\n  - %n 换行\n上面可以多个一起使用， 中间空格就行\n示例如下：\n\n![pattern示例配置]($resource/pattern%E7%A4%BA%E4%BE%8B%E9%85%8D%E7%BD%AE.png)\n\n\n\n# 十三、<settings>标签\n\n- 在 mybatis 全局配置文件中通过<settings>标签控制 mybatis 全局开关\n- 在 mybatis.xml 中开启 log4j 命令如下：\n  -  必须保证有 log4j.jar\n  -  在 src 下有 log4j.properties\n```java\n<settings>\n    <setting  name=\"logImpl\"  value=\"LOG4J\"/>\n</settings>\n```\n\n-  log4j 中可以输出指定内容的日志(控制某个局部内容的日志级别)\n  -  命名级别(包级别): `<mapper>namespace 属性中除了最后一个类名`\n例如 `namespace=”com.bjsxt.mapper.PeopleMapper”` 其中包级别为 `com.bjsxt.mapper` ,需要在 `log4j.propeties` 中做两件事情  \n  - 先在总体级别调成 Error，这样可以不输出无用信息\n  -  在设置某个指定位置级别为 DEBUG\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image009.jpg)只有这个类输出是Debug级别，其他都是ERROR级别。\n\n3.2 类级别\n\n3.2.1 namespace 属性值 ,相当于namespace 类名\n\n3.3 方法级别\n\n3.3.2 使用 namespace 属性值+标签 id 属性值\n\n五 **parameterType** 属性（Mybatis中参数设置）\n\n1. 在 XXXMapper.xml  中<select><delete>等标签的 parameterType 可以\n\n控制参数类型（例如可以传入select语句的参数，控制输入参数的类型）\n\n2. SqlSession 的 selectList()和 selectOne()的第二个参数和 selectMap()的第三个参数都表示方法的参数.\n\n2.1     |  |\n|  | ![文本框: People  p  =  session.selectOne(\"a.b.selById\",1);\n\nSystem.out.println(p);\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image010.gif) | \n示例,\n\n2.2 在 Mapper.xml  中可以通过#{}获取参数（代码见下）\n\n2.2.1 parameterType  控制参数类型\n\n2.2.2 #{}获取参数内容\n\n2.2.2.1 使用索引,从 0 开始 #{0}表示第一个参数\n\n2.2.2.2 也可以使用#{param1}第一个参数\n\n2.2.2.3 如果只有一个参数(其参数应该是基本数据类型或 String),mybatis 对#{}里面内容没有要求只要写内容即可.\n\n2.2.2.4 如果参数是对象#{属性名}\n\n2.2.2.5     |  | \n\n<select id=_\"__s__e__l__B__y__I__d__\"_ resultType=_\"__c__o__m__.__b__j__sx__t.__po__j__o__.__P__eop__l__e__\"_ **p****a****r****a****m****e****t****e****r****T****y****p****e****=****_\"_****_i_****_n_****_t_****_\"_**>\n\nselect *  from  people  where  id=**#{0****}**\n\n</select>\n\n |   | 如果参数是 map， 写成#{key} ：当需要传递多个参数时候，目前只能使用map 或者对象\n\n3\\. #{} 和 ${} 的 区 别\n\n3.1 #{} 获取参数的内容,支持索引获取,或者使用param1 获取指定位置参数,并且 SQL 使用?占位符\n\n3.2 ${} 字符串拼接，不使用?,默认找${内容}内容的 get/set 方法,如果\n\n写数字,就是一个数字\n\n<select id=\"test\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"com.bjsxt.pojo.People\"> PeopleMapper.xml: select * from people where id =  ${id}\n\n  </select>\n\nPeople peo =new People();\n\nTest.java\n\npeo.setId(1);\n\nPeople p = session.selectOne(\"a.b.selById\",people)\n\n**4.** 如果在 xml 文件中出现 “<” , “>” ,双引号 等特殊字符时可以使用\n\n**XML** 文件转义标签**(XML** 自身的**)**\n\n4.1 <![CDATA[ 内 容 ]]>\n\n**5.** mybatis 中实现 mysql  分页写法\n\n5.1 ?不允许在关键字前后进行数学运算,需要在代码中计算完成后传递到 mapper.xml  中\n\n5.2     |  |\n|  | ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image011.gif) | \n在 java  代码中计算\n\n5.3 在 mapper.xml  中代码\n\n![文本框: <select id=\"page\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"map\">\nselect * from people limit #{pageStart},#{pageSize}\n\n</select>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image012.gif)\n\n六**. typeAliases** 别名（在mybatis.xml中进行配置，命令如下）\n\n1.系统内置别名: 就是把类型全小写（见文档）\n\n2.给某个类起别名\n\n2.1  |  |\n|  | ![文本框: <typeAliases>\n\n<typeAlias  type=\"com.bjsxt.pojo.People\" alias=\"peo\"/>\n</typeAliases>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image013.gif) | \nalias=”自定义”\n\n2.2 mapper.xml  中 peo 引用 People 类\n\n![文本框: <select  id=\"page\"  resultType=\"peo\"\n\nparameterType=\"map\">\n\nselect * from people limit #{pageStart},#{pageSize}\n\n</select>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image014.gif)\n\n3.直接给某个包下所有类起别名,别名为类名,区分大小写\n\n3.1  |  |\n|  | ![文本框: <typeAliases>\n\n<package  name=\"com.bjsxt.pojo\"  />\n\n</typeAliases>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image015.gif) | \nmybatis.xml 中配置\n\n3.2 mapper.xml  中通过类名引用\n\n![文本框: <select  id=\"page\"  resultType=\"People\"\n\nparameterType=\"map\">\n\nselect * from people limit #{pageStart},#{pageSize}\n\n</select>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image016.gif)\n\n七**.MyBatis** 实现新增\n\n1. 概念复习\n\n1.1 功能:从应用程序角度出发,软件具有哪些功能.\n\n1.2 业务:完成功能时的逻辑.对应 Service 中一个方法\n\n1.3 事务:从数据库角度出发,完成业务时需要执行的 SQL 集合,统称一个事务\n\n1.3.1 事务回滚：如果在一个事务中某个 SQL 执行事务,希望回归到事务的原点,保证数据库数据的完整性.\n\n2. 在 mybatis 中默认是关闭了 JDBC 的自动提交功能\n\n2.1 每一个 SqlSession 默认都是不自动提交事务.\n\n2.2 可以使用session.commit()提交事务.\n\n2.3 也可以使用openSession(true);自动提交底层为：.setAutoCommit(true);\n\n3. mybatis 底层是对 JDBC 的封装.\n\n3.1 JDBC 中 executeUpdate()执行新增,删除,修改的 SQL.方法的返回值 int,表示受影响的行数.\n\n3.2 应为上面原因，因此mybatis 中<insert> <delete> <update>标签没有resultType 属性,认为返回值都是 int\n\n4. 在 openSession() 时 Mybatis 会创建 SqlSession 时同时创建一个\n\nTransaction(事务对象),同时 autoCommit 都为 false\n\n4.1 如果出现异常,应该 session.rollback()回滚事务.\n\n5. 实现新增的步骤\n\n5.1     |  |\n|  | ![文本框: <insert  id=\"ins\"  parameterType=\"People\">\n\ninsert  into  people  values(default,#{name},#{age})\n\n</insert>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image017.gif) | \n在 mapper.xml  中提供<insert>标签,标签没有返回值类型\n\n5.2 通过 session.insert()调用新增方法\n\n![文本框: int  index1  =  session.insert(\"a.b.ins\",  p); if(index1>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image018.gif)\n\n八**.MyBatis** 实现修改\n\n1.     |  |\n|  | ![文本框: <update  id=\"upd\"  parameterType=\"People\">\n\nupdate  people  set  name  =  #{name}  where  id  =  #{id}\n\n</update>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image019.gif) | \n在 mapper.xml  中提供<update>标签\n\n2. 编写代码\n\n![文本框: People  peo  =  new  People(); peo.setId(3);\npeo.setName(\"王五\");\nint  index  =  session.update(\"a.b.upd\",  peo);\n\nif(index>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\n\nsession.commit();\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image020.gif)\n\n九**.mybatis** 实现删除\n\n1.     |  |\n|  | ![文本框: <delete  id=\"del\"  parameterType=\"int\"> delete  from  people  where  id  =  #{0}\n</delete>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image021.gif) | \n在 mapper.xml  提供<delete>标签\n\n2. 编写代码\n\n![文本框: int  del  =  session.delete(\"a.b.del\",3);\n\nif(del>0){\nSystem.out.println(\"成功\");\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image022.gif)\n\n![文本框: }else{\nSystem.out.println(\"失败\");\n}\n\nsession.commit();\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image023.gif)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1567323995681,["GJX@GJXAIOU",[[1,9925,"\n"]],[9924,9924],[9925,9925]]],[1567323995884,["GJX@GJXAIOU",[[1,9926,"\n"]],[9925,9925],[9926,9926]]],[1567323995991,["GJX@GJXAIOU",[[1,9927,"\n"]],[9926,9926],[9927,9927]]],[1567324032901,["GJX@GJXAIOU",[[1,9925,"![根据命名空间设置不同优先级]($resource/%E6%A0%B9%E6%8D%AE%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E4%BC%98%E5%85%88%E7%BA%A7.png)"]],[9925,9925],[10075,10075]]],[1567324045072,["GJX@GJXAIOU",[[-1,10077,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image009.jpg)只有这个类输出是Debug级别，其他都是ERROR级别。\n"]],[10077,10186],[10077,10077]]],[1567324045405,["GJX@GJXAIOU",[[-1,10077,"\n"]],[10077,10077],[10076,10076]]],[1567324085546,["GJX@GJXAIOU",[[1,9718,"  "]],[9716,9718],[9718,9718]]],[1567324096076,["GJX@GJXAIOU",[[1,9873,"    "]],[9873,9873],[9877,9877]]],[1567324096928,["GJX@GJXAIOU",[[1,9908,"    "]],[9908,9908],[9912,9912]]],[1567324099778,["GJX@GJXAIOU",[[-1,10087,"3.2 "]],[10087,10091],[10087,10087]]],[1567324099929,["GJX@GJXAIOU",[[-1,10086,"\n"]],[10087,10087],[10086,10086]]],[1567324101194,["GJX@GJXAIOU",[[1,10086,"- "]],[10086,10086],[10088,10088]]],[1567324101521,["GJX@GJXAIOU",[[1,10086,"  "]],[10088,10088],[10090,10090]]],[1567324104296,["GJX@GJXAIOU",[[-1,10095,"3.2.1 "]],[10095,10101],[10095,10095]]],[1567324104452,["GJX@GJXAIOU",[[-1,10094,"\n"]],[10095,10095],[10094,10094]]],[1567324105094,["GJX@GJXAIOU",[[-1,10093,"\n"]],[10094,10094],[10093,10093]]],[1567324108848,["GJX@GJXAIOU",[[1,10093,"\n    -  "]],[10093,10093],[10101,10101]]],[1567324124857,["GJX@GJXAIOU",[[-1,10132,"\n"]],[10132,10132],[10131,10131]]],[1567324127518,["GJX@GJXAIOU",[[-1,10132,"3.3 "]],[10132,10136],[10132,10132]]],[1567324128094,["GJX@GJXAIOU",[[1,10132,"- "]],[10132,10132],[10134,10134]]],[1567324128976,["GJX@GJXAIOU",[[1,10132,"  "]],[10134,10134],[10136,10136]]],[1567324132814,["GJX@GJXAIOU",[[-1,10142,"3.3.2 "]],[10148,10148],[10142,10142]]],[1567324133144,["GJX@GJXAIOU",[[-1,10141,"\n"]],[10142,10142],[10141,10141]]],[1567324134666,["GJX@GJXAIOU",[[1,10141,"- "]],[10141,10141],[10143,10143]]],[1567324135922,["GJX@GJXAIOU",[[1,10141,"    "]],[10143,10143],[10147,10147]]],[1567324154079,["GJX@GJXAIOU",[[-1,10175,"五 **"]],[10179,10179],[10175,10175]]],[1567324160732,["GJX@GJXAIOU",[[1,10175,"## 十四 "]],[10175,10175],[10180,10180]]],[1567324161750,["GJX@GJXAIOU",[[1,10180,"、"]],[10180,10180],[10181,10181]]],[1567324164322,["GJX@GJXAIOU",[[-1,10195,"**"]],[10197,10197],[10195,10195]]],[1567324204449,["GJX@GJXAIOU",[[-1,10214,"1. "]],[10214,10217],[10214,10214]]],[1567324204867,["GJX@GJXAIOU",[[1,10214,"- "]],[10214,10214],[10216,10216]]],[1567324207222,["GJX@GJXAIOU",[[-1,10272,"\n"]],[10273,10273],[10272,10272]]],[1567324207561,["GJX@GJXAIOU",[[-1,10271,"\n"]],[10272,10272],[10271,10271]]],[1567324210731,["GJX@GJXAIOU",[[-1,10308,"2. "]],[10311,10311],[10308,10308]]],[1567324212110,["GJX@GJXAIOU",[[1,10308,"- "]],[10308,10308],[10310,10310]]],[1567324232498,["GJX@GJXAIOU",[[-1,10384,"2.1     |  |\n|  | ![文本框: "]],[10384,10409],[10384,10384]]],[1567324233121,["GJX@GJXAIOU",[[1,10384,"- "]],[10384,10384],[10386,10386]]],[1567324235240,["GJX@GJXAIOU",[[1,10384,"  "]],[10386,10386],[10388,10388]]],[1567324237592,["GJX@GJXAIOU",[[1,10388,"示例 "]],[10388,10388],[10390,10390]]],[1567324240139,["GJX@GJXAIOU",[[1,10390,"：\n  \n   "]],[10390,10390],[10398,10398]]],[1567324243599,["GJX@GJXAIOU",[[-1,10395,"    "]],[10395,10399],[10395,10395]]],[1567324245506,["GJX@GJXAIOU",[[1,10392,"··"]],[10392,10392],[10394,10394]]],[1567324246180,["GJX@GJXAIOU",[[-1,10392,"··"]],[10394,10394],[10392,10392]]],[1567324247355,["GJX@GJXAIOU",[[1,10392,"~··"]],[10392,10392],[10395,10395]]],[1567324248119,["GJX@GJXAIOU",[[-1,10392,"~··"]],[10395,10395],[10392,10392]]],[1567324248730,["GJX@GJXAIOU",[[1,10392,"·"]],[10392,10392],[10393,10393]]],[1567324249158,["GJX@GJXAIOU",[[-1,10392,"·"]],[10393,10393],[10392,10392]]],[1567324250291,["GJX@GJXAIOU",[[1,10392,"~··"]],[10392,10392],[10395,10395]]],[1567324251128,["GJX@GJXAIOU",[[-1,10392,"~··"]],[10395,10395],[10392,10392]]],[1567324251658,["GJX@GJXAIOU",[[1,10392,"·"]],[10392,10392],[10393,10393]]],[1567324252254,["GJX@GJXAIOU",[[-1,10392,"·"]],[10393,10393],[10392,10392]]],[1567324252862,["GJX@GJXAIOU",[[1,10392,"·"]],[10392,10392],[10393,10393]]],[1567324253351,["GJX@GJXAIOU",[[-1,10392,"·"]],[10393,10393],[10392,10392]]],[1567324254620,["GJX@GJXAIOU",[[1,10392,"```"]],[10392,10392],[10395,10395]]],[1567324254676,["GJX@GJXAIOU",[[1,10395,"language\n```\n"]],[10395,10395],[10395,10403]]],[1567324255850,["GJX@GJXAIOU",[[-1,10395,"language"],[1,10403,"j"]],[10395,10403],[10396,10396]]],[1567324256328,["GJX@GJXAIOU",[[1,10396,"ava"]],[10396,10396],[10399,10399]]],[1567324256722,["GJX@GJXAIOU",[[1,10400,"\n"]],[10399,10399],[10400,10400]]],[1567324267122,["GJX@GJXAIOU",[[-1,10482,"](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image010.gif) | \n示例,"]],[10482,10567],[10482,10482]]],[1567324269046,["GJX@GJXAIOU",[[-1,10458,"\n"]],[10458,10458],[10457,10457]]],[1567324272270,["GJX@GJXAIOU",[[-1,10408,"People  p  =  session.selectOne(\"a.b.selById\",1);\nSystem.out.println(p);"]],[10408,10480],[10408,10408]]],[1567324275075,["GJX@GJXAIOU",[[1,10400,"People  p  =  session.selectOne(\"a.b.selById\",1);\nSystem.out.println(p);"]],[10400,10400],[10472,10472]]],[1567324418575,["GJX@GJXAIOU",[[-1,10383,"\n"]],[10383,10383],[10382,10382]]],[1567324421654,["GJX@GJXAIOU",[[-1,10476,"  \n\n\n\n2.2 "]],[10476,10486],[10476,10476]]],[1567324423787,["GJX@GJXAIOU",[[1,10476,"  - "]],[10476,10476],[10480,10480]]],[1567324430142,["GJX@GJXAIOU",[[-1,10514,"2.2.1"]],[10514,10519],[10514,10514]]],[1567324430593,["GJX@GJXAIOU",[[-1,10513,"\n"]],[10514,10514],[10513,10513]]],[1567324431564,["GJX@GJXAIOU",[[1,10513,"-"]],[10513,10513],[10514,10514]]],[1567324433281,["GJX@GJXAIOU",[[1,10513,"    "]],[10514,10514],[10518,10518]]],[1567324436249,["GJX@GJXAIOU",[[-1,10542,"2.2.2 "]],[10542,10548],[10542,10542]]],[1567324436640,["GJX@GJXAIOU",[[-1,10541,"\n"]],[10542,10542],[10541,10541]]],[1567324437806,["GJX@GJXAIOU",[[1,10541,"- "]],[10541,10541],[10543,10543]]],[1567324438879,["GJX@GJXAIOU",[[1,10541,"    "]],[10543,10543],[10547,10547]]],[1567324489959,["GJX@GJXAIOU",[[-1,10558,"2.2.2.1 "]],[10558,10566],[10558,10558]]],[1567324490513,["GJX@GJXAIOU",[[-1,10557,"\n"]],[10558,10558],[10557,10557]]],[1567324494091,["GJX@GJXAIOU",[[1,10557,"        - "]],[10557,10557],[10567,10567]]],[1567324497238,["GJX@GJXAIOU",[[-1,10563,"  "]],[10563,10563],[10561,10561]]],[1567324500431,["GJX@GJXAIOU",[[-1,10590,"2.2.2.2 "]],[10590,10598],[10590,10590]]],[1567324500856,["GJX@GJXAIOU",[[-1,10589,"\n"]],[10590,10590],[10589,10589]]],[1567324503329,["GJX@GJXAIOU",[[1,10589,"        "]],[10589,10589],[10597,10597]]],[1567324504429,["GJX@GJXAIOU",[[1,10597,"- "]],[10597,10597],[10599,10599]]],[1567324506857,["GJX@GJXAIOU",[[-1,10597,"-"]],[10598,10598],[10597,10597]]],[1567324508226,["GJX@GJXAIOU",[[1,10597,"-"]],[10597,10597],[10598,10598]]],[1567324508376,["GJX@GJXAIOU",[[1,10599," "]],[10598,10598],[10599,10599]]],[1567324510439,["GJX@GJXAIOU",[[-1,10595,"  "]],[10597,10597],[10595,10595]]],[1567324513398,["GJX@GJXAIOU",[[-1,10597," "]],[10598,10598],[10597,10597]]],[1567324517153,["GJX@GJXAIOU",[[-1,10618,"2.2.2.3 "]],[10618,10626],[10618,10618]]],[1567324517560,["GJX@GJXAIOU",[[-1,10617,"\n"]],[10618,10618],[10617,10617]]],[1567324519813,["GJX@GJXAIOU",[[1,10617,"- "]],[10617,10617],[10619,10619]]],[1567324521487,["GJX@GJXAIOU",[[1,10617,"      "]],[10619,10619],[10625,10625]]],[1567324540776,["GJX@GJXAIOU",[[1,10627,"**"],[1,10655,"**"]],[10627,10655],[10627,10659]]],[1567324545351,["GJX@GJXAIOU",[[-1,10690,"2.2.2.4 "]],[10690,10698],[10690,10690]]],[1567324545793,["GJX@GJXAIOU",[[-1,10689,"\n"]],[10690,10690],[10689,10689]]],[1567324549060,["GJX@GJXAIOU",[[1,10689,"        - "]],[10689,10689],[10699,10699]]],[1567324552936,["GJX@GJXAIOU",[[-1,10695,"  "]],[10697,10697],[10695,10695]]],[1567324566262,["GJX@GJXAIOU",[[-1,11014," 如果参数是 map， 写成#{key} ：当需要传递多个参数时候，目前只能使用map 或者对象"]],[11014,11062],[11014,11014]]],[1567324571073,["GJX@GJXAIOU",[[1,10711,"          - "]],[10711,10711],[10723,10723]]],[1567324573420,["GJX@GJXAIOU",[[-1,10717,"    "]],[10721,10721],[10717,10717]]],[1567324575362,["GJX@GJXAIOU",[[1,10719," 如果参数是 map， 写成#{key} ：当需要传递多个参数时候，目前只能使用map 或者对象"]],[10719,10719],[10767,10767]]],[1567324600937,["GJX@GJXAIOU",[[-1,10768,"2.2.2.5     |  | \n\n<select id=_\"__s__e__l__B__y__I__d__\"_ resultType=_\"__c__o__m__.__b__j__sx__t.__po__j__o__.__P__eop__l__e__\"_ **p****a****r****a****m****e****t****e****r****T****y****p****e****=****_\"_****_i_****_n_****_t_****_\"_**>\n\nselect *  from  people  where  id=**#{0****}**\n\n</select>"]],[10768,11062],[10768,10768]]],[1567324603145,["GJX@GJXAIOU",[[1,10768,"```"]],[10768,10768],[10771,10771]]],[1567324603203,["GJX@GJXAIOU",[[1,10771,"language\n```\n"]],[10771,10771],[10771,10779]]],[1567324603618,["GJX@GJXAIOU",[[-1,10771,"language"],[1,10779,"j"]],[10771,10779],[10772,10772]]],[1567324604069,["GJX@GJXAIOU",[[1,10772,"ava"]],[10772,10772],[10775,10775]]],[1567324604221,["GJX@GJXAIOU",[[1,10776,"\n"]],[10775,10775],[10776,10776]]],[1567324613232,["GJX@GJXAIOU",[[1,10776,"<select id=\"selById\"\nresultType=\"com.bjsxt.pojo.People\"\nparameterType=\"int\">\nselect * from people where id=#{0}\n</select>"]],[10776,10776],[10897,10897]]],[1567324619543,["GJX@GJXAIOU",[[-1,10831,"\n"]],[10832,10832],[10831,10831]]],[1567324620516,["GJX@GJXAIOU",[[1,10831,"  "]],[10831,10831],[10833,10833]]],[1567324622768,["GJX@GJXAIOU",[[1,10854,"  "]],[10854,10854],[10856,10856]]],[1567324623745,["GJX@GJXAIOU",[[1,10797,"  "]],[10797,10797],[10799,10799]]],[1567324636029,["GJX@GJXAIOU",[[-1,10909," |   |"]],[10909,10915],[10909,10909]]],[1567324636421,["GJX@GJXAIOU",[[-1,10910,"\n"]],[10909,10909],[10908,10908]]],[1567324637905,["GJX@GJXAIOU",[[-1,10909,"\n"]],[10909,10909],[10908,10908]]],[1567324638092,["GJX@GJXAIOU",[[-1,10908,"\n"]],[10908,10908],[10907,10907]]],[1567324640703,["GJX@GJXAIOU",[[-1,10908,"3\\."]],[10908,10911],[10908,10908]]],[1567324640946,["GJX@GJXAIOU",[[1,10908,"-"]],[10908,10908],[10909,10909]]],[1567324641299,["GJX@GJXAIOU",[[1,10910," "]],[10909,10909],[10910,10910]]],[1567324642652,["GJX@GJXAIOU",[[-1,10910," "]],[10910,10910],[10909,10909]]],[1567324649076,["GJX@GJXAIOU",[[-1,10927,"3.1 "]],[10927,10931],[10927,10927]]],[1567324649452,["GJX@GJXAIOU",[[-1,10926,"\n"]],[10927,10927],[10926,10926]]],[1567324650581,["GJX@GJXAIOU",[[1,10926,"- "]],[10926,10926],[10928,10928]]],[1567324650942,["GJX@GJXAIOU",[[1,10926,"  "]],[10928,10928],[10930,10930]]],[1567324653592,["GJX@GJXAIOU",[[-1,10984,"3.2"]],[10984,10987],[10984,10984]]],[1567324654062,["GJX@GJXAIOU",[[-1,10983,"\n"]],[10984,10984],[10983,10983]]],[1567324655067,["GJX@GJXAIOU",[[1,10983,"-"]],[10983,10983],[10984,10984]]],[1567324655349,["GJX@GJXAIOU",[[1,10985," "]],[10984,10984],[10985,10985]]],[1567324656254,["GJX@GJXAIOU",[[1,10983,"  "]],[10985,10985],[10987,10987]]],[1567324660813,["GJX@GJXAIOU",[[-1,11029,"\n"]],[11030,11030],[11029,11029]]],[1567324661157,["GJX@GJXAIOU",[[-1,11028,"\n"]],[11029,11029],[11028,11028]]],[1567324670504,["GJX@GJXAIOU",[[1,11039,"pe"]],[11039,11039],[11041,11041]]],[1567324671303,["GJX@GJXAIOU",[[-1,11039,"pe"]],[11041,11041],[11039,11039]]],[1567324673586,["GJX@GJXAIOU",[[1,11039,"配置示例："]],[11039,11039],[11044,11044]]],[1567324674023,["GJX@GJXAIOU",[[1,11045,"\n"]],[11044,11044],[11045,11045]]],[1567324675539,["GJX@GJXAIOU",[[1,11045,"```"]],[11045,11045],[11048,11048]]],[1567324675592,["GJX@GJXAIOU",[[1,11048,"language\n```\n"]],[11048,11048],[11048,11056]]],[1567324676629,["GJX@GJXAIOU",[[-1,11048,"language"],[1,11056,"j"]],[11048,11056],[11049,11049]]],[1567324677037,["GJX@GJXAIOU",[[1,11049,"ava"]],[11049,11049],[11052,11052]]],[1567324677181,["GJX@GJXAIOU",[[1,11053,"\n"]],[11052,11052],[11053,11053]]],[1567324682814,["GJX@GJXAIOU",[[1,11045,"\n"]],[11044,11044],[11045,11045]]],[1567324686595,["GJX@GJXAIOU",[[1,11045,"PeoPle"]],[11045,11045],[11051,11051]]],[1567324687414,["GJX@GJXAIOU",[[-1,11047,"oPle"]],[11051,11051],[11047,11047]]],[1567324693704,["GJX@GJXAIOU",[[1,11047,"opleMapper.java"]],[11047,11047],[11062,11062]]],[1567324694598,["GJX@GJXAIOU",[[-1,11058,"java"]],[11062,11062],[11058,11058]]],[1567324695348,["GJX@GJXAIOU",[[1,11058,"xml"]],[11058,11058],[11061,11061]]],[1567324702119,["GJX@GJXAIOU",[[-1,11076,"<select id=\"test\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"com.bjsxt.pojo.People\"> PeopleMapper.xml: select * from people where id =  ${id}\n\n  </select>"]],[11076,11237],[11076,11076]]],[1567324705224,["GJX@GJXAIOU",[[1,11070,"<select id=\"test\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"com.bjsxt.pojo.People\"> PeopleMapper.xml: select * from people where id =  ${id}\n\n  </select>"]],[11070,11070],[11231,11231]]],[1567324725039,["GJX@GJXAIOU",[[1,11162,"\n"]],[11162,11162],[11163,11163]]],[1567324727829,["GJX@GJXAIOU",[[-1,11122," "]],[11123,11123],[11122,11122]]],[1567324729157,["GJX@GJXAIOU",[[1,11122," "]],[11122,11122],[11123,11123]]],[1567324737061,["GJX@GJXAIOU",[[-1,11163,"PeopleMapper.xml:"]],[11163,11180],[11163,11163]]],[1567324737614,["GJX@GJXAIOU",[[1,11164," "]],[11163,11163],[11164,11164]]],[1567324742038,["GJX@GJXAIOU",[[-1,11204,"\n"]],[11204,11204],[11203,11203]]],[1567324745390,["GJX@GJXAIOU",[[-1,11205," "]],[11204,11205],[11204,11204]]],[1567324746624,["GJX@GJXAIOU",[[-1,11204," "]],[11205,11205],[11204,11204]]],[1567324751579,["GJX@GJXAIOU",[[1,11221,"\n"]],[11217,11217],[11218,11218]]],[1567324754794,["GJX@GJXAIOU",[[1,11218,"Test.java"]],[11218,11218],[11227,11227]]],[1567324755616,["GJX@GJXAIOU",[[1,11231,"\n"]],[11227,11227],[11228,11228]]],[1567324756955,["GJX@GJXAIOU",[[1,11228,"```"]],[11228,11228],[11231,11231]]],[1567324757010,["GJX@GJXAIOU",[[1,11231,"language\n```\n"]],[11231,11231],[11231,11239]]],[1567324757490,["GJX@GJXAIOU",[[-1,11231,"language"],[1,11239,"j"]],[11231,11239],[11232,11232]]],[1567324757944,["GJX@GJXAIOU",[[1,11232,"ava"]],[11232,11232],[11235,11235]]],[1567324758141,["GJX@GJXAIOU",[[1,11236,"\n"]],[11235,11235],[11236,11236]]],[1567324763190,["GJX@GJXAIOU",[[-1,11245,"People peo =new People();\n\nTest.java\n\npeo.setId(1);\n\nPeople p = session.selectOne(\"a.b.selById\",people)"]],[11245,11348],[11245,11245]]],[1567324765328,["GJX@GJXAIOU",[[1,11236,"People peo =new People();\n\nTest.java\n\npeo.setId(1);\n\nPeople p = session.selectOne(\"a.b.selById\",people)"]],[11236,11236],[11339,11339]]],[1567324766829,["GJX@GJXAIOU",[[-1,11262,"\n"]],[11262,11262],[11261,11261]]],[1567324770501,["GJX@GJXAIOU",[[-1,11262,"Test.java"]],[11262,11271],[11262,11262]]],[1567324771517,["GJX@GJXAIOU",[[-1,11263,"\n"]],[11263,11263],[11262,11262]]],[1567324771733,["GJX@GJXAIOU",[[-1,11262,"\n"]],[11262,11262],[11261,11261]]],[1567324773421,["GJX@GJXAIOU",[[-1,11276,"\n"]],[11276,11276],[11275,11275]]],[1567324781002,["GJX@GJXAIOU",[[1,11326,";"]],[11326,11326],[11327,11327]]],[1567324794762,["GJX@GJXAIOU",[[-1,11337,"\n"]],[11336,11336],[11335,11335]]],[1567324794905,["GJX@GJXAIOU",[[-1,11336,"\n"]],[11335,11335],[11334,11334]]],[1567324795007,["GJX@GJXAIOU",[[-1,11335,"\n"]],[11334,11334],[11333,11333]]],[1567324795186,["GJX@GJXAIOU",[[-1,11334,"\n"]],[11333,11333],[11332,11332]]],[1567324796742,["GJX@GJXAIOU",[[-1,11333,"\n"]],[11333,11333],[11332,11332]]],[1567324800781,["GJX@GJXAIOU",[[-1,11333,"**4.** "]],[11333,11340],[11333,11333]]],[1567324801240,["GJX@GJXAIOU",[[1,11333,"- "]],[11333,11333],[11335,11335]]],[1567324807125,["GJX@GJXAIOU",[[-1,11375,"\n"]],[11376,11376],[11375,11375]]],[1567324809344,["GJX@GJXAIOU",[[-1,11374,"\n"]],[11375,11375],[11374,11374]]],[1567324812041,["GJX@GJXAIOU",[[-1,11374,"**"]],[11376,11376],[11374,11374]]],[1567324812473,["GJX@GJXAIOU",[[1,11374," "]],[11374,11374],[11375,11375]]],[1567324814321,["GJX@GJXAIOU",[[-1,11378,"**"]],[11380,11380],[11378,11378]]],[1567324816608,["GJX@GJXAIOU",[[-1,11385,"**"]],[11387,11387],[11385,11385]]],[1567324818716,["GJX@GJXAIOU",[[-1,11389,"**"]],[11391,11391],[11389,11389]]],[1567324821214,["GJX@GJXAIOU",[[-1,11393,"**"]],[11395,11395],[11393,11393]]],[1567324823236,["GJX@GJXAIOU",[[-1,11394,"**"]],[11396,11396],[11394,11394]]],[1567324828742,["GJX@GJXAIOU",[[-1,11396,"4.1 "]],[11396,11400],[11396,11396]]],[1567324829233,["GJX@GJXAIOU",[[-1,11395,"\n"]],[11396,11396],[11395,11395]]],[1567324831874,["GJX@GJXAIOU",[[-1,11394,"\n"]],[11395,11395],[11394,11394]]],[1567324833490,["GJX@GJXAIOU",[[1,11394,",ge"]],[11394,11394],[11397,11397]]],[1567324834809,["GJX@GJXAIOU",[[-1,11394,",ge"]],[11397,11397],[11394,11394]]],[1567324838204,["GJX@GJXAIOU",[[1,11394,"，格式为：``"]],[11394,11394],[11401,11401]]],[1567324839141,["GJX@GJXAIOU",[[-1,11400,"`"]],[11401,11401],[11400,11400]]],[1567324842042,["GJX@GJXAIOU",[[1,11417,"`"]],[11417,11417],[11418,11418]]],[1567324847421,["GJX@GJXAIOU",[[-1,11420,"**5.**"]],[11420,11426],[11420,11420]]],[1567324847660,["GJX@GJXAIOU",[[1,11420,"-"]],[11420,11420],[11421,11421]]],[1567324847855,["GJX@GJXAIOU",[[1,11422," "]],[11421,11421],[11422,11422]]],[1567324852701,["GJX@GJXAIOU",[[-1,11448,"5.1"]],[11448,11451],[11448,11448]]],[1567324852995,["GJX@GJXAIOU",[[1,11448,"-"]],[11448,11448],[11449,11449]]],[1567324853143,["GJX@GJXAIOU",[[1,11450," "]],[11449,11449],[11450,11450]]],[1567324853584,["GJX@GJXAIOU",[[1,11448,"  "]],[11450,11450],[11452,11452]]],[1567324855189,["GJX@GJXAIOU",[[-1,11447,"\n"]],[11447,11447],[11446,11446]]],[1567324869674,["GJX@GJXAIOU",[[1,11497,",zh"]],[11497,11497],[11500,11500]]],[1567324870794,["GJX@GJXAIOU",[[-1,11497,",zh"]],[11500,11500],[11497,11497]]],[1567324875223,["GJX@GJXAIOU",[[1,11497,"，只能在Java"]],[11497,11497],[11505,11505]]],[1567324875276,["GJX@GJXAIOU",[[1,11501," "]],[11505,11505],[11506,11506]]],[1567324876438,["GJX@GJXAIOU",[[1,11506,"代码"]],[11506,11506],[11508,11508]]],[1567324876491,["GJX@GJXAIOU",[[1,11506," "]],[11508,11508],[11509,11509]]],[1567324880673,["GJX@GJXAIOU",[[1,11509,"中计算；"]],[11509,11509],[11513,11513]]],[1567324888171,["GJX@GJXAIOU",[[1,11498,"\n  "]],[11498,11498],[11501,11501]]],[1567324890153,["GJX@GJXAIOU",[[-1,11497,"，"]],[11498,11498],[11497,11497]]],[1567324890650,["GJX@GJXAIOU",[[1,11497,"；"]],[11497,11497],[11498,11498]]],[1567324893557,["GJX@GJXAIOU",[[-1,11501,"只能"]],[11503,11503],[11501,11501]]],[1567324896514,["GJX@GJXAIOU",[[1,11499,"\n"],[-1,11501,"在 Java 代码中计算；"]],[11499,11514],[11502,11502]]],[1567324899253,["GJX@GJXAIOU",[[1,11502,"Java中"]],[11502,11502],[11507,11507]]],[1567324899308,["GJX@GJXAIOU",[[1,11506," "]],[11507,11507],[11508,11508]]],[1567324900829,["GJX@GJXAIOU",[[1,11508,"代码为："]],[11508,11508],[11512,11512]]],[1567324901170,["GJX@GJXAIOU",[[1,11513,"  \n"]],[11512,11512],[11515,11515]]],[1567324903663,["GJX@GJXAIOU",[[1,11515,"```java"]],[11515,11515],[11522,11522]]],[1567324903763,["GJX@GJXAIOU",[[1,11523,"  \n"]],[11522,11522],[11525,11525]]],[1567324905438,["GJX@GJXAIOU",[[1,11525,"```"]],[11525,11525],[11528,11528]]],[1567324907154,["GJX@GJXAIOU",[[1,11525,"\n  "]],[11522,11522],[11525,11525]]],[1567324910158,["GJX@GJXAIOU",[[-1,11513,"  "],[-1,11523,"  "],[-1,11526,"  "]],[11515,11532],[11513,11526]]],[1567324920566,["GJX@GJXAIOU",[[1,11521,"//显示几个\nint pageSize = 2;\n//第几页\nint pageNumber = 2;\n//如果希望传递多个参数,可以使用对象或map\nMap<String,Object> map = new HashMap<>();\nmap.put(\"pageSize\", pageSize);\nmap.put(\"pageStart\", pageSize*(pageNumber-1));\nList<People> p =\nsession.selectList(\"a.b.page\",map);"]],[11521,11521],[11768,11768]]],[1567324926671,["GJX@GJXAIOU",[[-1,11732,"\n"]],[11733,11733],[11732,11732]]],[1567324927603,["GJX@GJXAIOU",[[1,11732," "]],[11732,11732],[11733,11733]]],[1567324941523,["GJX@GJXAIOU",[[1,11773,"mapper.xml 中代码为：j"]],[11773,11773],[11790,11790]]],[1567324942294,["GJX@GJXAIOU",[[-1,11789,"j"]],[11790,11790],[11789,11789]]],[1567324943039,["GJX@GJXAIOU",[[1,11790,"\n"]],[11789,11789],[11790,11790]]],[1567324943571,["GJX@GJXAIOU",[[1,11790,"·"]],[11790,11790],[11791,11791]]],[1567324944185,["GJX@GJXAIOU",[[-1,11790,"·"]],[11791,11791],[11790,11790]]],[1567324945006,["GJX@GJXAIOU",[[1,11790,"```"]],[11790,11790],[11793,11793]]],[1567324945061,["GJX@GJXAIOU",[[1,11793,"language\n```\n"]],[11793,11793],[11793,11801]]],[1567324946173,["GJX@GJXAIOU",[[-1,11793,"language"],[1,11801,"x"]],[11793,11801],[11794,11794]]],[1567324946522,["GJX@GJXAIOU",[[1,11794,"ml"]],[11794,11794],[11796,11796]]],[1567324946717,["GJX@GJXAIOU",[[1,11797,"\n"]],[11796,11796],[11797,11797]]],[1567324952314,["GJX@GJXAIOU",[[1,11797,"<select id=\"page\" resultType=\"com.bjsxt.pojo.People\"\nparameterType=\"map\">\nselect * from people limit #{pageStart},#{pageSize}\n</select>"]],[11797,11797],[11932,11932]]],[1567324956512,["GJX@GJXAIOU",[[-1,11849,"\n"]],[11850,11850],[11849,11849]]],[1567324957179,["GJX@GJXAIOU",[[1,11849," "]],[11849,11849],[11850,11850]]],[1567324960005,["GJX@GJXAIOU",[[1,11871,"    "]],[11871,11871],[11875,11875]]],[1567324966744,["GJX@GJXAIOU",[[-1,11942,"5.2     |  |\n|  | ![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image011.gif) | \n在 java  代码中计算\n\n5.3 在 mapper.xml  中代码\n\n![文本框: <select id=\"page\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"map\">\nselect * from people limit #{pageStart},#{pageSize}\n\n</select>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image012.gif)\n"]],[11941,12304],[11941,11941]]],[1567324967358,["GJX@GJXAIOU",[[-1,11942,"\n"]],[11941,11941],[11940,11940]]],[1567324968545,["GJX@GJXAIOU",[[1,11942,"\n"]],[11940,11940],[11941,11941]]],[1567324974849,["GJX@GJXAIOU",[[1,11941,"## "]],[11941,11941],[11944,11944]]],[1567324977447,["GJX@GJXAIOU",[[-1,11941,"## "]],[11941,11944],[11941,11941]]],[1567324977856,["GJX@GJXAIOU",[[-1,11942,"\n"]],[11941,11941],[11940,11940]]],[1567324980359,["GJX@GJXAIOU",[[1,11942,"## "]],[11942,11942],[11990,11990]]],[1567324986152,["GJX@GJXAIOU",[[-1,11945,"六**. "]],[11950,11950],[11945,11945]]],[1567324992964,["GJX@GJXAIOU",[[1,11945,"shiwu"]],[11945,11945],[11950,11950]]],[1567324994140,["GJX@GJXAIOU",[[-1,11944," shiwu"]],[11950,11950],[11944,11944]]],[1567324996272,["GJX@GJXAIOU",[[1,11944," 事务 "]],[11944,11944],[11947,11947]]],[1567324996820,["GJX@GJXAIOU",[[-1,11945,"事务"]],[11947,11947],[11945,11945]]],[1567325004681,["GJX@GJXAIOU",[[1,11945,"十五、"]],[11945,11945],[11948,11948]]],[1567325006420,["GJX@GJXAIOU",[[-1,11948," "]],[11949,11949],[11948,11948]]],[1567325009446,["GJX@GJXAIOU",[[-1,11959,"**"]],[11961,11961],[11959,11959]]],[1567325322402,["GJX@GJXAIOU",[[1,12010,"j"]],[12010,12010],[12011,12011]]],[1567325322459,["GJX@GJXAIOU",[[1,12010," "]],[12011,12011],[12012,12012]]],[1567325324045,["GJX@GJXAIOU",[[-1,12011,"j"]],[12012,12012],[12011,12011]]],[1567325329163,["GJX@GJXAIOU",[[-1,11988,"1."]],[11990,11990],[11988,11988]]],[1567325329575,["GJX@GJXAIOU",[[1,11988,"- "]],[11988,11988],[11990,11990]]],[1567325331755,["GJX@GJXAIOU",[[-1,12014,"2."]],[12016,12016],[12014,12014]]],[1567325332211,["GJX@GJXAIOU",[[1,12014,"- "]],[12014,12014],[12016,12016]]],[1567325335035,["GJX@GJXAIOU",[[1,11987,"yi"]],[11987,11987],[11989,11989]]],[1567325335611,["GJX@GJXAIOU",[[-1,11987,"yi"]],[11989,11989],[11987,11987]]],[1567325336173,["GJX@GJXAIOU",[[1,11988,"\n"]],[11987,11987],[11988,11988]]],[1567325339474,["GJX@GJXAIOU",[[1,11988,"一共有三两类"]],[11988,11988],[11994,11994]]],[1567325340186,["GJX@GJXAIOU",[[-1,11991,"三两类"]],[11994,11994],[11991,11991]]],[1567325346627,["GJX@GJXAIOU",[[1,11991,"三类：分别是给"]],[11991,11991],[11998,11998]]],[1567325347629,["GJX@GJXAIOU",[[-1,11997,"给"]],[11998,11998],[11997,11997]]],[1567325349276,["GJX@GJXAIOU",[[1,11997,"系统"]],[11997,11997],[11999,11999]]],[1567325349960,["GJX@GJXAIOU",[[-1,11997,"系统"]],[11999,11999],[11997,11997]]],[1567325357043,["GJX@GJXAIOU",[[1,11997,"系统内置的别名，给牟特"]],[11997,11997],[12008,12008]]],[1567325357712,["GJX@GJXAIOU",[[-1,12006,"牟特"]],[12008,12008],[12006,12006]]],[1567325362134,["GJX@GJXAIOU",[[1,12006,"某个类的别名，"]],[12006,12006],[12013,12013]]],[1567325650645,["GJX@GJXAIOU",[[-1,12039,"\n"]],[12039,12039],[12038,12038]]],[1567325667694,["GJX@GJXAIOU",[[-1,12050,"2.1  |  |\n|  | ![文本框: <typeAliases>\n\n<typeAlias  type=\"com.bjsxt.pojo.People\" alias=\"peo\"/>\n</typeAliases>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image013.gif) | "]],[12050,12238],[12050,12050]]],[1567325668175,["GJX@GJXAIOU",[[-1,12050,"\n"]],[12050,12050],[12049,12049]]],[1567325668806,["GJX@GJXAIOU",[[-1,12049,"\n"]],[12049,12049],[12048,12048]]],[1567325672074,["GJX@GJXAIOU",[[1,12049,"  - "]],[12049,12049],[12053,12053]]],[1567325674174,["GJX@GJXAIOU",[[1,12065,"  - \n"]],[12064,12064],[12069,12069]]],[1567325675644,["GJX@GJXAIOU",[[-1,12065,"  - "]],[12069,12069],[12065,12065]]],[1567325677318,["GJX@GJXAIOU",[[1,12065,"```"]],[12065,12065],[12068,12068]]],[1567325677373,["GJX@GJXAIOU",[[1,12068,"language\n```\n"]],[12068,12068],[12068,12076]]],[1567325678393,["GJX@GJXAIOU",[[-1,12068,"language"],[1,12076,"j"]],[12068,12076],[12069,12069]]],[1567325678841,["GJX@GJXAIOU",[[1,12069,"ava"]],[12069,12069],[12072,12072]]],[1567325679046,["GJX@GJXAIOU",[[1,12073,"\n"]],[12072,12072],[12073,12073]]],[1567325682467,["GJX@GJXAIOU",[[1,12073,"<typeAliases>\n<typeAlias type=\"com.bjsxt.pojo.People\"\nalias=\"peo\"/>\n</typeAliases>"]],[12073,12073],[12155,12155]]],[1567325685750,["GJX@GJXAIOU",[[-1,12126,"\n"]],[12127,12127],[12126,12126]]],[1567325686376,["GJX@GJXAIOU",[[1,12126," "]],[12126,12126],[12127,12127]]],[1567325690750,["GJX@GJXAIOU",[[1,12087,"    "]],[12087,12087],[12091,12091]]],[1567325695750,["GJX@GJXAIOU",[[-1,12166,"2.2 "]],[12166,12170],[12166,12166]]],[1567325696124,["GJX@GJXAIOU",[[-1,12165,"\n"]],[12166,12166],[12165,12165]]],[1567325697651,["GJX@GJXAIOU",[[1,12165,"- "]],[12165,12165],[12167,12167]]],[1567325699110,["GJX@GJXAIOU",[[1,12165,"  "]],[12167,12167],[12169,12169]]],[1567325707808,["GJX@GJXAIOU",[[-1,12200,"![文本框: <select  id=\"page\"  resultType=\"peo\"\n\nparameterType=\"map\">\n\nselect * from people limit #{pageStart},#{pageSize}\n\n</select>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image014.gif)\n"]],[12200,12409],[12200,12200]]],[1567325709542,["GJX@GJXAIOU",[[1,12200,"```"]],[12200,12200],[12203,12203]]],[1567325709600,["GJX@GJXAIOU",[[1,12203,"language\n```\n"]],[12203,12203],[12203,12211]]],[1567325710043,["GJX@GJXAIOU",[[-1,12203,"language"],[1,12211,"j"]],[12203,12211],[12204,12204]]],[1567325710503,["GJX@GJXAIOU",[[1,12204,"ava"]],[12204,12204],[12207,12207]]],[1567325710604,["GJX@GJXAIOU",[[1,12208,"\n"]],[12207,12207],[12208,12208]]],[1567325713733,["GJX@GJXAIOU",[[1,12208,"<select id=\"page\" resultType=\"peo\"\nparameterType=\"map\">\nselect * from people limit #{pageStart},#{pageSize}\n</select>"]],[12208,12208],[12325,12325]]],[1567325715468,["GJX@GJXAIOU",[[-1,12199,"\n"]],[12199,12199],[12198,12198]]],[1567325717677,["GJX@GJXAIOU",[[-1,12241,"\n"]],[12242,12242],[12241,12241]]],[1567325718237,["GJX@GJXAIOU",[[1,12241," "]],[12241,12241],[12242,12242]]],[1567325720920,["GJX@GJXAIOU",[[1,12263,"    "]],[12263,12263],[12267,12267]]],[1567325730741,["GJX@GJXAIOU",[[-1,12334,"3."]],[12334,12336],[12334,12334]]],[1567325731189,["GJX@GJXAIOU",[[1,12334,"- "]],[12334,12334],[12336,12336]]],[1567325735059,["GJX@GJXAIOU",[[-1,12164,"\n"]],[12164,12164],[12163,12163]]],[1567325738360,["GJX@GJXAIOU",[[1,12051,"  "]],[12051,12051],[12053,12053]]],[1567325741576,["GJX@GJXAIOU",[[1,12168,"  "]],[12168,12168],[12170,12170]]],[1567325752476,["GJX@GJXAIOU",[[1,12172,"tongshi"]],[12172,12172],[12179,12179]]],[1567325753788,["GJX@GJXAIOU",[[-1,12172,"tongshi"]],[12179,12179],[12172,12172]]],[1567325755065,["GJX@GJXAIOU",[[1,12172,"同时 "]],[12172,12172],[12174,12174]]],[1567325762531,["GJX@GJXAIOU",[[-1,12169," "]],[12170,12170],[12169,12169]]],[1567325777622,["GJX@GJXAIOU",[[-1,12169,"- 同时 mapper.xml  中 peo 引用 People 类"]],[12169,12203],[12169,12169]]],[1567325779253,["GJX@GJXAIOU",[[1,12067,"    - \n"]],[12066,12066],[12073,12073]]],[1567325779644,["GJX@GJXAIOU",[[1,12073,"- 同时 mapper.xml  中 peo 引用 People 类"]],[12073,12073],[12107,12107]]],[1567325782365,["GJX@GJXAIOU",[[-1,12073,"- "]],[12074,12074],[12072,12072]]],[1567325788404,["GJX@GJXAIOU",[[-1,12207," "]],[12206,12206],[12205,12205]]],[1567325793779,["GJX@GJXAIOU",[[1,12205,"mapper.xml中"]],[12205,12205],[12216,12216]]],[1567325793834,["GJX@GJXAIOU",[[1,12215," "]],[12216,12216],[12217,12217]]],[1567325796072,["GJX@GJXAIOU",[[1,12217,"内容为："]],[12217,12217],[12221,12221]]],[1567325814167,["GJX@GJXAIOU",[[-1,12388,"3.1  |  |\n|  | ![文本框: <typeAliases>\n\n<package  name=\"com.bjsxt.pojo\"  />\n\n</typeAliases>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image015.gif) | "]],[12388,12558],[12388,12388]]],[1567325814575,["GJX@GJXAIOU",[[-1,12388,"\n"]],[12388,12388],[12387,12387]]],[1567325816499,["GJX@GJXAIOU",[[1,12387,"- "]],[12387,12387],[12389,12389]]],[1567325820527,["GJX@GJXAIOU",[[-1,12389,"\n"]],[12390,12390],[12389,12389]]],[1567325820903,["GJX@GJXAIOU",[[-1,12388," "]],[12389,12389],[12388,12388]]],[1567325821697,["GJX@GJXAIOU",[[1,12388," "]],[12388,12388],[12389,12389]]],[1567325822334,["GJX@GJXAIOU",[[1,12387,"  "]],[12389,12389],[12391,12391]]],[1567325825815,["GJX@GJXAIOU",[[1,12407,"··"]],[12407,12407],[12409,12409]]],[1567325826561,["GJX@GJXAIOU",[[-1,12407,"··"]],[12409,12409],[12407,12407]]],[1567325827897,["GJX@GJXAIOU",[[1,12407,"```"]],[12407,12407],[12410,12410]]],[1567325827957,["GJX@GJXAIOU",[[1,12410,"language\n```\n"]],[12410,12410],[12410,12418]]],[1567325828569,["GJX@GJXAIOU",[[-1,12410,"language"],[1,12418,"j"]],[12410,12418],[12411,12411]]],[1567325828858,["GJX@GJXAIOU",[[1,12411,"av"]],[12411,12411],[12413,12413]]],[1567325831888,["GJX@GJXAIOU",[[1,12415,"<typeAliases>\n<package name=\"com.bjsxt.pojo\" />\n</typeAliases>"]],[12415,12415],[12477,12477]]],[1567325835464,["GJX@GJXAIOU",[[1,12429,"    "]],[12429,12429],[12433,12433]]],[1567325839021,["GJX@GJXAIOU",[[-1,12486,"\n"]],[12486,12486],[12485,12485]]],[1567325841543,["GJX@GJXAIOU",[[-1,12486,"3.2"]],[12486,12489],[12486,12486]]],[1567325841784,["GJX@GJXAIOU",[[1,12486,"-"]],[12486,12486],[12487,12487]]],[1567325841962,["GJX@GJXAIOU",[[1,12488," "]],[12487,12487],[12488,12488]]],[1567325843419,["GJX@GJXAIOU",[[-1,12488," "]],[12489,12489],[12488,12488]]],[1567325854231,["GJX@GJXAIOU",[[-1,12509,"![文本框: <select  id=\"page\"  resultType=\"People\"\n\nparameterType=\"map\">\n\nselect * from people limit #{pageStart},#{pageSize}\n\n</select>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image016.gif)"]],[12509,12720],[12509,12509]]],[1567325854814,["GJX@GJXAIOU",[[-1,12510,"\n"]],[12509,12509],[12508,12508]]],[1567325856681,["GJX@GJXAIOU",[[1,12508,"```"]],[12508,12508],[12511,12511]]],[1567325856740,["GJX@GJXAIOU",[[1,12511,"language\n```\n"]],[12511,12511],[12511,12519]]],[1567325857300,["GJX@GJXAIOU",[[-1,12511,"language"],[1,12519,"j"]],[12511,12519],[12512,12512]]],[1567325857730,["GJX@GJXAIOU",[[1,12512,"ava"]],[12512,12512],[12515,12515]]],[1567325857845,["GJX@GJXAIOU",[[1,12516,"\n"]],[12515,12515],[12516,12516]]],[1567325861468,["GJX@GJXAIOU",[[1,12516,"<select id=\"page\" resultType=\"People\"\nparameterType=\"map\">\nselect * from people limit #{pageStart},#{pageSize}\n</select>"]],[12516,12516],[12636,12636]]],[1567325864220,["GJX@GJXAIOU",[[-1,12553,"\n"]],[12554,12554],[12553,12553]]],[1567325864664,["GJX@GJXAIOU",[[1,12553," "]],[12553,12553],[12554,12554]]],[1567325867343,["GJX@GJXAIOU",[[1,12575,"    "]],[12575,12575],[12579,12579]]],[1567325879984,["GJX@GJXAIOU",[[-1,12658,"**"]],[12660,12660],[12658,12658]]],[1567325887591,["GJX@GJXAIOU",[[-1,12647,"七**."]],[12647,12651],[12647,12647]]],[1567325887980,["GJX@GJXAIOU",[[-1,12646,"\n"]],[12647,12647],[12646,12646]]],[1567325949084,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\nMy"],[-1,12651,"**"],[1,12653," 实"]],[12413,12413],[12655,12655]]],[1567325949084,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\nMy"],[1,12653,"**"],[-1,12653," 实"]],[12655,12655],[12413,12413]]],[1567325893086,["GJX@GJXAIOU",[[1,12646,"## "]],[12646,12646],[12661,12661]]],[1567325894579,["GJX@GJXAIOU",[[1,12661,"s"]],[12661,12661],[12662,12662]]],[1567325894634,["GJX@GJXAIOU",[[1,12661," "]],[12662,12662],[12663,12663]]],[1567325894837,["GJX@GJXAIOU",[[1,12663,"hi"]],[12663,12663],[12665,12665]]],[1567325895740,["GJX@GJXAIOU",[[-1,12662,"shi"]],[12665,12665],[12662,12662]]],[1567325901008,["GJX@GJXAIOU",[[1,12649,"十六 "]],[12649,12649],[12651,12651]]],[1567325901352,["GJX@GJXAIOU",[[1,12651,"、"]],[12651,12651],[12652,12652]]],[1567325902660,["GJX@GJXAIOU",[[-1,12652," "]],[12653,12653],[12652,12652]]],[1567325909510,["GJX@GJXAIOU",[[-1,12667,"1. "]],[12667,12670],[12667,12667]]],[1567325909955,["GJX@GJXAIOU",[[1,12667,"- "]],[12667,12667],[12669,12669]]],[1567325911773,["GJX@GJXAIOU",[[-1,12674,"\n"]],[12674,12674],[12673,12673]]],[1567325914403,["GJX@GJXAIOU",[[-1,12674,"1.1 "]],[12674,12678],[12674,12674]]],[1567325914815,["GJX@GJXAIOU",[[1,12674,"- "]],[12674,12674],[12676,12676]]],[1567325917021,["GJX@GJXAIOU",[[-1,12699,"\n1.2 "]],[12699,12704],[12699,12699]]],[1567325917342,["GJX@GJXAIOU",[[-1,12698,"\n"]],[12699,12699],[12698,12698]]],[1567325918421,["GJX@GJXAIOU",[[1,12698,"\n"]],[12698,12698],[12699,12699]]],[1567325918944,["GJX@GJXAIOU",[[1,12699,"- "]],[12699,12699],[12701,12701]]],[1567325921669,["GJX@GJXAIOU",[[-1,12730,"\n1.3 "]],[12730,12735],[12730,12730]]],[1567325921956,["GJX@GJXAIOU",[[-1,12729,"\n"]],[12730,12730],[12729,12729]]],[1567325923326,["GJX@GJXAIOU",[[1,12729,"\n"]],[12729,12729],[12730,12730]]],[1567325923849,["GJX@GJXAIOU",[[1,12730,"- "]],[12730,12730],[12732,12732]]],[1567325926445,["GJX@GJXAIOU",[[1,12674,"  "],[1,12699,"  "],[1,12730,"  "]],[12676,12769],[12678,12775]]],[1567325942780,["GJX@GJXAIOU",[[1,12673,"：下面三者本质相同，酵素"]],[12673,12673],[12685,12685]]],[1567325943351,["GJX@GJXAIOU",[[-1,12683,"酵素"]],[12685,12685],[12683,12683]]],[1567325948944,["GJX@GJXAIOU",[[1,12683,"角度不同；"]],[12683,12683],[12688,12688]]],[1567326009085,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\n"],[1,12652,"My"],[-1,12657,"**"],[1,12659," 实"],[1,12662," "],[-1,12664," 1."],[1,12669,"概念"],[-1,12671,"\n\n"],[-1,12688,"1"],[1,12689,"\n"],[1,12693,"功能"],[-1,12714,"\n\n"],[1,12720,"业务"],[-1,12747,"\n\n"],[1,12753,"事务"]],[12413,12413],[12755,12755]]],[1567326009085,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\n"],[-1,12652,"My"],[1,12659,"**"],[-1,12659," 实"],[-1,12664," "],[1,12667," 1."],[-1,12669,"概念"],[1,12673,"\n\n"],[1,12688,"1"],[-1,12688,"\n"],[-1,12693,"功能"],[1,12716,"\n\n"],[-1,12720,"业务"],[1,12749,"\n\n"],[-1,12753,"事务"]],[12755,12755],[12413,12413]]],[1567325954300,["GJX@GJXAIOU",[[-1,12791,"1.3.1 "]],[12791,12797],[12791,12791]]],[1567325954957,["GJX@GJXAIOU",[[-1,12790,"\n"]],[12791,12791],[12790,12790]]],[1567325956276,["GJX@GJXAIOU",[[1,12790,"- "]],[12790,12790],[12792,12792]]],[1567325957345,["GJX@GJXAIOU",[[1,12790,"    "]],[12792,12792],[12796,12796]]],[1567325965548,["GJX@GJXAIOU",[[-1,12846,"2. "]],[12846,12849],[12846,12846]]],[1567325966267,["GJX@GJXAIOU",[[1,12846,"- "]],[12846,12846],[12848,12848]]],[1567325970247,["GJX@GJXAIOU",[[-1,12880,"2.1 "]],[12880,12884],[12880,12880]]],[1567325970687,["GJX@GJXAIOU",[[-1,12879,"\n"]],[12880,12880],[12879,12879]]],[1567325972055,["GJX@GJXAIOU",[[1,12879,"-  "]],[12879,12879],[12882,12882]]],[1567325973077,["GJX@GJXAIOU",[[1,12879,"  "]],[12882,12882],[12884,12884]]],[1567325975579,["GJX@GJXAIOU",[[-1,12913,"2.2 "]],[12913,12917],[12913,12913]]],[1567325980420,["GJX@GJXAIOU",[[-1,12912,"\n"]],[12913,12913],[12912,12912]]],[1567325981206,["GJX@GJXAIOU",[[1,12912,"-  "]],[12912,12912],[12915,12915]]],[1567325982533,["GJX@GJXAIOU",[[1,12912,"  "]],[12915,12915],[12917,12917]]],[1567325984860,["GJX@GJXAIOU",[[-1,12944,"2.3 "]],[12944,12948],[12944,12944]]],[1567325985294,["GJX@GJXAIOU",[[-1,12943,"\n"]],[12944,12944],[12943,12943]]],[1567325986706,["GJX@GJXAIOU",[[1,12943,"- "]],[12943,12943],[12945,12945]]],[1567325986999,["GJX@GJXAIOU",[[1,12943,"  "]],[12945,12945],[12947,12947]]],[1567325995829,["GJX@GJXAIOU",[[-1,13001,"3. "]],[13001,13004],[13001,13001]]],[1567325996316,["GJX@GJXAIOU",[[1,13001,"- "]],[13001,13001],[13003,13003]]],[1567325998876,["GJX@GJXAIOU",[[-1,13000,"\n"]],[13000,13000],[12999,12999]]],[1567326004052,["GJX@GJXAIOU",[[-1,13026,"3.1 "]],[13026,13030],[13026,13026]]],[1567326004427,["GJX@GJXAIOU",[[-1,13025,"\n"]],[13026,13026],[13025,13025]]],[1567326005501,["GJX@GJXAIOU",[[1,13025,"- "]],[13025,13025],[13027,13027]]],[1567326005920,["GJX@GJXAIOU",[[1,13025,"  "]],[13027,13027],[13029,13029]]],[1567326069091,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\n"],[1,12652,"My"],[-1,12657,"**"],[1,12659," 实"],[1,12662," "],[-1,12664," 1."],[1,12669,"概念"],[-1,12671,"\n\n"],[-1,12688,"1"],[1,12689,"\n"],[1,12693,"功能"],[-1,12714,"\n\n"],[1,12720,"业务"],[-1,12747,"\n\n"],[1,12753,"事务"],[-1,12788,"\n1"],[1,12796,"事务"],[-1,12844,"2."],[1,12848,"在 "],[-1,12877,"\n2"],[1,12884,"每一"],[-1,12910,"\n2"],[1,12917,"可以"],[-1,12941,"\n2"],[1,12947,"也可"],[-1,12998,"\n3"],[1,13002,"my"],[-1,13023,"\n3"],[1,13029,"JD"]],[12413,12413],[13031,13031]]],[1567326069091,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\n"],[-1,12652,"My"],[1,12659,"**"],[-1,12659," 实"],[-1,12664," "],[1,12667," 1."],[-1,12669,"概念"],[1,12673,"\n\n"],[1,12688,"1"],[-1,12688,"\n"],[-1,12693,"功能"],[1,12716,"\n\n"],[-1,12720,"业务"],[1,12749,"\n\n"],[-1,12753,"事务"],[1,12790,"\n1"],[-1,12796,"事务"],[1,12846,"2."],[-1,12848,"在 "],[1,12879,"\n2"],[-1,12884,"每一"],[1,12912,"\n2"],[-1,12917,"可以"],[1,12943,"\n2"],[-1,12947,"也可"],[1,13000,"\n3"],[-1,13002,"my"],[1,13025,"\n3"],[-1,13029,"JD"]],[13031,13031],[12413,12413]]],[1567326010316,["GJX@GJXAIOU",[[-1,13089,"3.2 "]],[13089,13093],[13089,13089]]],[1567326010622,["GJX@GJXAIOU",[[-1,13088,"\n"]],[13089,13089],[13088,13088]]],[1567326011691,["GJX@GJXAIOU",[[1,13088,"- "]],[13088,13088],[13090,13090]]],[1567326012872,["GJX@GJXAIOU",[[1,13088,"  "]],[13090,13090],[13092,13092]]],[1567326019499,["GJX@GJXAIOU",[[-1,13167,"4. "]],[13167,13170],[13167,13167]]],[1567326019884,["GJX@GJXAIOU",[[1,13167,"- "]],[13167,13167],[13169,13169]]],[1567326025220,["GJX@GJXAIOU",[[-1,13218,"\n"]],[13219,13219],[13218,13218]]],[1567326025543,["GJX@GJXAIOU",[[-1,13217,"\n"]],[13218,13218],[13217,13217]]],[1567326029894,["GJX@GJXAIOU",[[-1,13259,"4.1 "]],[13259,13263],[13259,13259]]],[1567326030324,["GJX@GJXAIOU",[[1,13259,"- "]],[13259,13259],[13261,13261]]],[1567326031565,["GJX@GJXAIOU",[[-1,13258,"\n"]],[13258,13258],[13257,13257]]],[1567326032017,["GJX@GJXAIOU",[[1,13257,"·"]],[13257,13257],[13258,13258]]],[1567326033550,["GJX@GJXAIOU",[[-1,13257,"·"]],[13258,13258],[13257,13257]]],[1567326034984,["GJX@GJXAIOU",[[1,13258,"  "]],[13260,13260],[13262,13262]]],[1567326042205,["GJX@GJXAIOU",[[-1,13297,"5. "]],[13297,13300],[13297,13297]]],[1567326042663,["GJX@GJXAIOU",[[1,13297,"- "]],[13297,13297],[13299,13299]]],[1567326056205,["GJX@GJXAIOU",[[-1,13308,"5.1     |  |\n|  | ![文本框: <insert  id=\"ins\"  parameterType=\"People\">\n\ninsert  into  people  values(default,#{name},#{age})\n\n</insert>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image017.gif) | "]],[13308,13522],[13308,13308]]],[1567326056613,["GJX@GJXAIOU",[[-1,13308,"\n"]],[13308,13308],[13307,13307]]],[1567326057725,["GJX@GJXAIOU",[[-1,13307,"\n"]],[13308,13308],[13307,13307]]],[1567326059161,["GJX@GJXAIOU",[[1,13307,"- "]],[13307,13307],[13309,13309]]],[1567326059534,["GJX@GJXAIOU",[[1,13307,"  "]],[13309,13309],[13311,13311]]],[1567326064693,["GJX@GJXAIOU",[[-1,13350,"5.2 "]],[13350,13354],[13350,13350]]],[1567326065108,["GJX@GJXAIOU",[[-1,13349,"\n"]],[13350,13350],[13349,13349]]],[1567326066691,["GJX@GJXAIOU",[[1,13349,"  - "]],[13349,13349],[13353,13353]]],[1567326125750,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\n"],[1,12652,"My"],[-1,12657,"**"],[1,12659," 实"],[1,12662," "],[-1,12664," 1."],[1,12669,"概念"],[-1,12671,"\n\n"],[-1,12688,"1"],[1,12689,"\n"],[1,12693,"功能"],[-1,12714,"\n\n"],[1,12720,"业务"],[-1,12747,"\n\n"],[1,12753,"事务"],[-1,12788,"\n1"],[1,12796,"事务"],[-1,12844,"2."],[1,12847," 在"],[-1,12877,"\n2"],[1,12884,"每一"],[-1,12910,"\n2"],[1,12917,"可以"],[-1,12941,"\n2"],[1,12947,"也可"],[-1,12998,"\n3"],[1,13002,"my"],[-1,13023,"\n3"],[1,13029,"JD"],[-1,13086,"\n3"],[1,13092,"应为"],[-1,13165,"4."],[1,13169,"在 "],[-1,13215,"\n\n"],[1,13217,"Tr"],[-1,13256,"\n4"],[1,13262,"如果"],[-1,13295,"5."],[1,13299,"实现"],[-1,13305,"\n5"],[1,13310," 在"],[-1,13347,"\n5"],[1,13353,"通过"]],[12413,12413],[13355,13355]]],[1567326125750,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\n"],[-1,12652,"My"],[1,12659,"**"],[-1,12659," 实"],[-1,12664," "],[1,12667," 1."],[-1,12669,"概念"],[1,12673,"\n\n"],[1,12688,"1"],[-1,12688,"\n"],[-1,12693,"功能"],[1,12716,"\n\n"],[-1,12720,"业务"],[1,12749,"\n\n"],[-1,12753,"事务"],[1,12790,"\n1"],[-1,12796,"事务"],[1,12846,"2."],[-1,12847," 在"],[1,12879,"\n2"],[-1,12884,"每一"],[1,12912,"\n2"],[-1,12917,"可以"],[1,12943,"\n2"],[-1,12947,"也可"],[1,13000,"\n3"],[-1,13002,"my"],[1,13025,"\n3"],[-1,13029,"JD"],[1,13088,"\n3"],[-1,13092,"应为"],[1,13167,"4."],[-1,13169,"在 "],[1,13217,"\n\n"],[-1,13217,"Tr"],[1,13258,"\n4"],[-1,13262,"如果"],[1,13297,"5."],[-1,13299,"实现"],[1,13307,"\n5"],[-1,13310," 在"],[1,13349,"\n5"],[-1,13353,"通过"]],[13355,13355],[12413,12413]]],[1567326076389,["GJX@GJXAIOU",[[1,13379,"··"]],[13379,13379],[13381,13381]]],[1567326077165,["GJX@GJXAIOU",[[-1,13379,"··"]],[13381,13381],[13379,13379]]],[1567326078441,["GJX@GJXAIOU",[[1,13379,"```"]],[13379,13379],[13382,13382]]],[1567326078500,["GJX@GJXAIOU",[[1,13382,"language\n```\n"]],[13382,13382],[13382,13390]]],[1567326079945,["GJX@GJXAIOU",[[-1,13382,"language"],[1,13390,"x"]],[13382,13390],[13383,13383]]],[1567326080258,["GJX@GJXAIOU",[[1,13383,"ml"]],[13383,13383],[13385,13385]]],[1567326080513,["GJX@GJXAIOU",[[1,13386,"\n"]],[13385,13385],[13386,13386]]],[1567326081893,["GJX@GJXAIOU",[[1,13386,"<insert id=\"ins\" parameterType=\"People\">\ninsert into people values(default,#{name},#{age})\n</insert>"]],[13386,13386],[13486,13486]]],[1567326083797,["GJX@GJXAIOU",[[1,13379,"\n"]],[13379,13379],[13380,13380]]],[1567326087839,["GJX@GJXAIOU",[[1,13379,"mapper.xnml"]],[13379,13379],[13390,13390]]],[1567326088790,["GJX@GJXAIOU",[[-1,13387,"nml"]],[13390,13390],[13387,13387]]],[1567326092961,["GJX@GJXAIOU",[[1,13387,"ml 值为；"]],[13387,13387],[13393,13393]]],[1567326109724,["GJX@GJXAIOU",[[-1,13507,"![文本框: int  index1  =  session.insert(\"a.b.ins\",  p); if(index1>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image018.gif)"]],[13507,13714],[13507,13507]]],[1567326110548,["GJX@GJXAIOU",[[1,13507,"··"]],[13507,13507],[13509,13509]]],[1567326111887,["GJX@GJXAIOU",[[-1,13507,"··"]],[13509,13509],[13507,13507]]],[1567326112860,["GJX@GJXAIOU",[[1,13507,"```"]],[13507,13507],[13510,13510]]],[1567326112916,["GJX@GJXAIOU",[[1,13510,"language\n```\n"]],[13510,13510],[13510,13518]]],[1567326115849,["GJX@GJXAIOU",[[-1,13510,"language"],[1,13518,"j"]],[13510,13518],[13511,13511]]],[1567326116296,["GJX@GJXAIOU",[[1,13511,"ava"]],[13511,13511],[13514,13514]]],[1567326116727,["GJX@GJXAIOU",[[1,13515,"\n"]],[13514,13514],[13515,13515]]],[1567326120061,["GJX@GJXAIOU",[[1,13515,"int index1 = session.insert(\"a.b.ins\", p);\nif(index1>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}"]],[13515,13515],[13632,13632]]],[1567326122146,["GJX@GJXAIOU",[[1,13572,"  "]],[13572,13572],[13574,13574]]],[1567326123313,["GJX@GJXAIOU",[[1,13607,"  "]],[13607,13607],[13609,13609]]],[1567326124434,["GJX@GJXAIOU",[[1,13574," "]],[13574,13574],[13575,13575]]],[1567326305760,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\n"],[1,12652,"My"],[-1,12657,"**"],[1,12659," 实"],[1,12662," "],[-1,12664," 1."],[1,12669,"概念"],[-1,12671,"\n\n"],[-1,12688,"1"],[1,12689,"\n"],[1,12693,"功能"],[-1,12713,"\n\n"],[1,12720,"业务"],[-1,12747,"\n\n"],[1,12753,"事务"],[-1,12788,"\n1"],[1,12796,"事务"],[-1,12844,"2."],[1,12847," 在"],[-1,12877,"\n2"],[1,12884,"每一"],[-1,12910,"\n2"],[1,12917,"可以"],[-1,12941,"\n2"],[1,12947,"也可"],[-1,12998,"\n3"],[1,13002,"my"],[-1,13023,"\n3"],[1,13029,"JD"],[-1,13086,"\n3"],[1,13092,"应为"],[-1,13165,"4."],[1,13168," 在"],[-1,13215,"\n\n"],[1,13217,"Tr"],[-1,13256,"\n4"],[1,13262,"如果"],[-1,13295,"5."],[1,13299,"实现"],[-1,13305,"\n5"],[1,13310," 在"],[-1,13347,"\n5"],[1,13353,"通过"],[-1,13377,"\n!"],[-1,13506,"["],[1,13507,"\n"],[-1,13641,""],[1,13641,"\n\n"]],[12413,12413],[13643,13643]]],[1567326305760,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\n"],[-1,12652,"My"],[1,12659,"**"],[-1,12659," 实"],[-1,12664," "],[1,12667," 1."],[-1,12669,"概念"],[1,12673,"\n\n"],[1,12688,"1"],[-1,12688,"\n"],[-1,12693,"功能"],[1,12715,"\n\n"],[-1,12720,"业务"],[1,12749,"\n\n"],[-1,12753,"事务"],[1,12790,"\n1"],[-1,12796,"事务"],[1,12846,"2."],[-1,12847," 在"],[1,12879,"\n2"],[-1,12884,"每一"],[1,12912,"\n2"],[-1,12917,"可以"],[1,12943,"\n2"],[-1,12947,"也可"],[1,13000,"\n3"],[-1,13002,"my"],[1,13025,"\n3"],[-1,13029,"JD"],[1,13088,"\n3"],[-1,13092,"应为"],[1,13167,"4."],[-1,13168," 在"],[1,13217,"\n\n"],[-1,13217,"Tr"],[1,13258,"\n4"],[-1,13262,"如果"],[1,13297,"5."],[-1,13299,"实现"],[1,13307,"\n5"],[-1,13310," 在"],[1,13349,"\n5"],[-1,13353,"通过"],[1,13379,"\n!"],[1,13506,"["],[-1,13506,"\n"],[1,13641,""],[-1,13641,"\n\n"]],[13643,13643],[12413,12413]]],[1567326292530,["GJX@GJXAIOU",[[1,13644,"## "]],[13644,13644],[13665,13665]]],[1567326295749,["GJX@GJXAIOU",[[-1,13647,"八**."]],[13651,13651],[13647,13647]]],[1567326297391,["GJX@GJXAIOU",[[1,13647,"shier"]],[13647,13647],[13652,13652]]],[1567326298516,["GJX@GJXAIOU",[[-1,13647,"shier"]],[13652,13652],[13647,13647]]],[1567326299932,["GJX@GJXAIOU",[[1,13647,"十二 "]],[13647,13647],[13649,13649]]],[1567326300172,["GJX@GJXAIOU",[[1,13649,"："]],[13649,13649],[13650,13650]]],[1567326301888,["GJX@GJXAIOU",[[-1,13649,"："]],[13650,13650],[13649,13649]]],[1567326304673,["GJX@GJXAIOU",[[1,13649,"、"]],[13649,13649],[13650,13650]]],[1567326365760,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\n"],[1,12652,"My"],[-1,12657,"**"],[1,12659," 实"],[1,12662," "],[-1,12664," 1."],[1,12669,"概念"],[-1,12671,"\n\n"],[-1,12688,"1"],[1,12689,"\n"],[1,12693,"功能"],[-1,12713,"\n\n"],[1,12720,"业务"],[-1,12747,"\n\n"],[1,12753,"事务"],[-1,12788,"\n1"],[1,12796,"事务"],[-1,12844,"2."],[1,12847," 在"],[-1,12877,"\n2"],[1,12884,"每一"],[-1,12910,"\n2"],[1,12917,"可以"],[-1,12941,"\n2"],[1,12947,"也可"],[-1,12998,"\n3"],[1,13002,"my"],[-1,13023,"\n3"],[1,13029,"JD"],[-1,13086,"\n3"],[1,13092,"应为"],[-1,13165,"4."],[1,13168," 在"],[-1,13215,"\n\n"],[1,13217,"Tr"],[-1,13256,"\n4"],[1,13262,"如果"],[-1,13295,"5."],[1,13299,"实现"],[-1,13305,"\n5"],[1,13310," 在"],[-1,13347,"\n5"],[1,13353,"通过"],[-1,13377,"\n!"],[-1,13506,"["],[1,13507,"\n"],[-1,13642,"八*"],[1,13644,"\n\n"],[1,13651,"My"]],[12413,12413],[13653,13653]]],[1567326365760,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\n"],[-1,12652,"My"],[1,12659,"**"],[-1,12659," 实"],[-1,12664," "],[1,12667," 1."],[-1,12669,"概念"],[1,12673,"\n\n"],[1,12688,"1"],[-1,12688,"\n"],[-1,12693,"功能"],[1,12715,"\n\n"],[-1,12720,"业务"],[1,12749,"\n\n"],[-1,12753,"事务"],[1,12790,"\n1"],[-1,12796,"事务"],[1,12846,"2."],[-1,12847," 在"],[1,12879,"\n2"],[-1,12884,"每一"],[1,12912,"\n2"],[-1,12917,"可以"],[1,12943,"\n2"],[-1,12947,"也可"],[1,13000,"\n3"],[-1,13002,"my"],[1,13025,"\n3"],[-1,13029,"JD"],[1,13088,"\n3"],[-1,13092,"应为"],[1,13167,"4."],[-1,13168," 在"],[1,13217,"\n\n"],[-1,13217,"Tr"],[1,13258,"\n4"],[-1,13262,"如果"],[1,13297,"5."],[-1,13299,"实现"],[1,13307,"\n5"],[-1,13310," 在"],[1,13349,"\n5"],[-1,13353,"通过"],[1,13379,"\n!"],[1,13506,"["],[-1,13506,"\n"],[1,13642,"八*"],[-1,13642,"\n\n"],[-1,13651,"My"]],[13653,13653],[12413,12413]]],[1567326306252,["GJX@GJXAIOU",[[-1,13650," "]],[13651,13651],[13650,13650]]],[1567326308686,["GJX@GJXAIOU",[[-1,13657,"**"]],[13659,13659],[13657,13657]]],[1567326318343,["GJX@GJXAIOU",[[-1,13664,"1.     |  |\n|  | ![文本框: <update  id=\"upd\"  parameterType=\"People\">\n\nupdate  people  set  name  =  #{name}  where  id  =  #{id}\n\n</update>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image019.gif) | "]],[13664,13883],[13664,13664]]],[1567326318785,["GJX@GJXAIOU",[[1,13664,"- "]],[13664,13664],[13666,13666]]],[1567326321796,["GJX@GJXAIOU",[[-1,13666,"\n"]],[13667,13667],[13666,13666]]],[1567326332040,["GJX@GJXAIOU",[[1,13694,"···"]],[13694,13694],[13697,13697]]],[1567326332951,["GJX@GJXAIOU",[[-1,13694,"···"]],[13697,13697],[13694,13694]]],[1567326334258,["GJX@GJXAIOU",[[1,13694,"```"]],[13694,13694],[13697,13697]]],[1567326334314,["GJX@GJXAIOU",[[1,13697,"language\n```\n"]],[13697,13697],[13697,13705]]],[1567326335187,["GJX@GJXAIOU",[[-1,13697,"language"],[1,13705,"j"]],[13697,13705],[13698,13698]]],[1567326335620,["GJX@GJXAIOU",[[1,13698,"ava"]],[13698,13698],[13701,13701]]],[1567326335721,["GJX@GJXAIOU",[[1,13702,"\n"]],[13701,13701],[13702,13702]]],[1567326340489,["GJX@GJXAIOU",[[1,13702,"<update id=\"upd\" parameterType=\"People\">\nupdate people set name = #{name} where id = #{id}\n</update>"]],[13702,13702],[13802,13802]]],[1567326342730,["GJX@GJXAIOU",[[1,13743,"  "]],[13743,13743],[13745,13745]]],[1567326425763,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\n"],[1,12652,"My"],[-1,12657,"**"],[1,12659," 实"],[1,12662," "],[-1,12664," 1."],[1,12669,"概念"],[-1,12671,"\n\n"],[-1,12688,"1"],[1,12689,"\n"],[1,12693,"功能"],[-1,12713,"\n\n"],[1,12720,"业务"],[-1,12747,"\n\n"],[1,12753,"事务"],[-1,12788,"\n1"],[1,12796,"事务"],[-1,12844,"2."],[1,12847," 在"],[-1,12877,"\n2"],[1,12884,"每一"],[-1,12910,"\n2"],[1,12917,"可以"],[-1,12941,"\n2"],[1,12947,"也可"],[-1,12998,"\n3"],[1,13002,"my"],[-1,13023,"\n3"],[1,13029,"JD"],[-1,13086,"\n3"],[1,13092,"应为"],[-1,13165,"4."],[1,13168," 在"],[-1,13215,"\n\n"],[1,13217,"Tr"],[-1,13256,"\n4"],[1,13262,"如果"],[-1,13295,"5."],[1,13299,"实现"],[-1,13305,"\n5"],[1,13310," 在"],[-1,13347,"\n5"],[1,13353,"通过"],[-1,13377,"\n!"],[-1,13506,"["],[1,13507,"\n"],[-1,13642,"八*"],[1,13644,"\n\n"],[1,13650,"My"],[-1,13655,"**"],[1,13657," 实"],[-1,13662,"1."],[1,13665," 在"],[-1,13692,"\n2"],[1,13809,"\n2"]],[12413,12413],[13811,13811]]],[1567326425763,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\n"],[-1,12652,"My"],[1,12659,"**"],[-1,12659," 实"],[-1,12664," "],[1,12667," 1."],[-1,12669,"概念"],[1,12673,"\n\n"],[1,12688,"1"],[-1,12688,"\n"],[-1,12693,"功能"],[1,12715,"\n\n"],[-1,12720,"业务"],[1,12749,"\n\n"],[-1,12753,"事务"],[1,12790,"\n1"],[-1,12796,"事务"],[1,12846,"2."],[-1,12847," 在"],[1,12879,"\n2"],[-1,12884,"每一"],[1,12912,"\n2"],[-1,12917,"可以"],[1,12943,"\n2"],[-1,12947,"也可"],[1,13000,"\n3"],[-1,13002,"my"],[1,13025,"\n3"],[-1,13029,"JD"],[1,13088,"\n3"],[-1,13092,"应为"],[1,13167,"4."],[-1,13168," 在"],[1,13217,"\n\n"],[-1,13217,"Tr"],[1,13258,"\n4"],[-1,13262,"如果"],[1,13297,"5."],[-1,13299,"实现"],[1,13307,"\n5"],[-1,13310," 在"],[1,13349,"\n5"],[-1,13353,"通过"],[1,13379,"\n!"],[1,13506,"["],[-1,13506,"\n"],[1,13642,"八*"],[-1,13642,"\n\n"],[-1,13650,"My"],[1,13657,"**"],[-1,13657," 实"],[1,13664,"1."],[-1,13665," 在"],[1,13694,"\n2"],[-1,13809,"\n2"]],[13811,13811],[12413,12413]]],[1567326376956,["GJX@GJXAIOU",[[-1,13819,"![文本框: People  peo  =  new  People(); peo.setId(3);\npeo.setName(\"王五\");\nint  index  =  session.update(\"a.b.upd\",  peo);\n\nif(index>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\n\nsession.commit();\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image020.gif)\n"]],[13818,14110],[13818,13818]]],[1567326378208,["GJX@GJXAIOU",[[1,13818,"```"]],[13818,13818],[13821,13821]]],[1567326378263,["GJX@GJXAIOU",[[1,13821,"language\n```\n"]],[13821,13821],[13821,13829]]],[1567326379187,["GJX@GJXAIOU",[[-1,13821,"language"],[1,13829,"j"]],[13821,13829],[13822,13822]]],[1567326379639,["GJX@GJXAIOU",[[1,13822,"ava"]],[13822,13822],[13825,13825]]],[1567326379827,["GJX@GJXAIOU",[[1,13826,"\n"]],[13825,13825],[13826,13826]]],[1567326383393,["GJX@GJXAIOU",[[1,13826,"People peo = new People();\npeo.setId(3);\npeo.setName(\"王五\");\nint index = session.update(\"a.b.upd\", peo);\nif(index>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\nsession.commit();"]],[13826,13826],[14021,14021]]],[1567326386326,["GJX@GJXAIOU",[[-1,13810,"2. "]],[13810,13813],[13810,13810]]],[1567326386613,["GJX@GJXAIOU",[[-1,13809,"\n"]],[13810,13810],[13809,13809]]],[1567326387419,["GJX@GJXAIOU",[[1,13809,"- "]],[13809,13809],[13811,13811]]],[1567326399063,["GJX@GJXAIOU",[[-1,14026,"九**."]],[14030,14030],[14026,14026]]],[1567326400291,["GJX@GJXAIOU",[[1,14026,"shi"]],[14026,14026],[14029,14029]]],[1567326401172,["GJX@GJXAIOU",[[-1,14026,"shi"]],[14029,14029],[14026,14026]]],[1567326402996,["GJX@GJXAIOU",[[1,14026,"十三 "]],[14026,14026],[14028,14028]]],[1567326403425,["GJX@GJXAIOU",[[1,14028,"、"]],[14028,14028],[14029,14029]]],[1567326404796,["GJX@GJXAIOU",[[-1,14029," "]],[14030,14030],[14029,14029]]],[1567326407362,["GJX@GJXAIOU",[[-1,14036,"**"]],[14038,14038],[14036,14036]]],[1567326414476,["GJX@GJXAIOU",[[-1,14043,"1.     |  |\n|  | ![文本框: <delete  id=\"del\"  parameterType=\"int\"> delete  from  people  where  id  =  #{0}\n</delete>\n](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image021.gif) | \n"]],[14043,14240],[14043,14043]]],[1567326414925,["GJX@GJXAIOU",[[1,14043,"- "]],[14043,14043],[14045,14045]]],[1567326424114,["GJX@GJXAIOU",[[1,14072,"```"]],[14072,14072],[14075,14075]]],[1567326424197,["GJX@GJXAIOU",[[1,14075,"language\n```\n"]],[14075,14075],[14075,14083]]],[1567326485762,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\n"],[1,12652,"My"],[-1,12657,"**"],[1,12659," 实"],[1,12662," "],[-1,12664," 1."],[1,12669,"概念"],[-1,12671,"\n\n"],[-1,12688,"1"],[1,12689,"\n"],[1,12693,"功能"],[-1,12713,"\n\n"],[1,12720,"业务"],[-1,12747,"\n\n"],[1,12753,"事务"],[-1,12788,"\n1"],[1,12796,"事务"],[-1,12844,"2."],[1,12847," 在"],[-1,12877,"\n2"],[1,12884,"每一"],[-1,12910,"\n2"],[1,12917,"可以"],[-1,12941,"\n2"],[1,12947,"也可"],[-1,12998,"\n3"],[1,13002,"my"],[-1,13023,"\n3"],[1,13029,"JD"],[-1,13086,"\n3"],[1,13092,"应为"],[-1,13165,"4."],[1,13168," 在"],[-1,13215,"\n\n"],[1,13217,"Tr"],[-1,13256,"\n4"],[1,13262,"如果"],[-1,13295,"5."],[1,13299,"实现"],[-1,13305,"\n5"],[1,13310," 在"],[-1,13347,"\n5"],[1,13353,"通过"],[-1,13377,"\n!"],[-1,13506,"["],[1,13507,"\n"],[-1,13642,"八*"],[1,13644,"\n\n"],[1,13650,"My"],[-1,13655,"**"],[1,13657," 实"],[-1,13662,"1."],[1,13665," 在"],[-1,13692,"\n2"],[1,13811,"编写"],[-1,13814,"\n!"],[-1,14024,"[*"],[1,14026,"\n\n"],[1,14029,"my"],[-1,14034,"**"],[1,14036," 实"],[-1,14041,"1."],[1,14044," 在"],[-1,14070,"\n2"],[1,14088,"\n2"]],[12413,12413],[14090,14090]]],[1567326485764,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\n"],[-1,12652,"My"],[1,12659,"**"],[-1,12659," 实"],[-1,12664," "],[1,12667," 1."],[-1,12669,"概念"],[1,12673,"\n\n"],[1,12688,"1"],[-1,12688,"\n"],[-1,12693,"功能"],[1,12715,"\n\n"],[-1,12720,"业务"],[1,12749,"\n\n"],[-1,12753,"事务"],[1,12790,"\n1"],[-1,12796,"事务"],[1,12846,"2."],[-1,12847," 在"],[1,12879,"\n2"],[-1,12884,"每一"],[1,12912,"\n2"],[-1,12917,"可以"],[1,12943,"\n2"],[-1,12947,"也可"],[1,13000,"\n3"],[-1,13002,"my"],[1,13025,"\n3"],[-1,13029,"JD"],[1,13088,"\n3"],[-1,13092,"应为"],[1,13167,"4."],[-1,13168," 在"],[1,13217,"\n\n"],[-1,13217,"Tr"],[1,13258,"\n4"],[-1,13262,"如果"],[1,13297,"5."],[-1,13299,"实现"],[1,13307,"\n5"],[-1,13310," 在"],[1,13349,"\n5"],[-1,13353,"通过"],[1,13379,"\n!"],[1,13506,"["],[-1,13506,"\n"],[1,13642,"八*"],[-1,13642,"\n\n"],[-1,13650,"My"],[1,13657,"**"],[-1,13657," 实"],[1,13664,"1."],[-1,13665," 在"],[1,13694,"\n2"],[-1,13811,"编写"],[1,13816,"\n!"],[1,14024,"[*"],[-1,14024,"\n\n"],[-1,14029,"my"],[1,14036,"**"],[-1,14036," 实"],[1,14043,"1."],[-1,14044," 在"],[1,14072,"\n2"],[-1,14088,"\n2"]],[14090,14090],[12413,12413]]],[1567326437130,["GJX@GJXAIOU",[[-1,14075,"language"],[1,14083,"x"]],[14075,14083],[14076,14076]]],[1567326437517,["GJX@GJXAIOU",[[1,14076,"ml"]],[14076,14076],[14078,14078]]],[1567326438038,["GJX@GJXAIOU",[[1,14079,"\n"]],[14078,14078],[14079,14079]]],[1567326441361,["GJX@GJXAIOU",[[1,14079,"<delete id=\"del\" parameterType=\"int\">\ndelete from people where id = #{0}\n</delete>"]],[14079,14079],[14161,14161]]],[1567326444120,["GJX@GJXAIOU",[[1,14117,"    "]],[14117,14117],[14121,14121]]],[1567326448052,["GJX@GJXAIOU",[[-1,14170,"\n"]],[14170,14170],[14169,14169]]],[1567326450549,["GJX@GJXAIOU",[[-1,14170,"2. "],[1,14173,"\n"]],[14170,14173],[14171,14171]]],[1567326451043,["GJX@GJXAIOU",[[1,14171,"- "]],[14171,14171],[14173,14173]]],[1567326460060,["GJX@GJXAIOU",[[-1,14179,"![文本框:"]],[14179,14185],[14179,14179]]],[1567326462071,["GJX@GJXAIOU",[[1,14178,"```"]],[14178,14178],[14181,14181]]],[1567326462128,["GJX@GJXAIOU",[[1,14181,"language\n```\n"]],[14181,14181],[14181,14189]]],[1567326463208,["GJX@GJXAIOU",[[-1,14181,"language"],[1,14189,"j"]],[14181,14189],[14182,14182]]],[1567326463601,["GJX@GJXAIOU",[[1,14182,"ava"]],[14182,14182],[14185,14185]]],[1567326463778,["GJX@GJXAIOU",[[1,14186,"\n"]],[14185,14185],[14186,14186]]],[1567326466313,["GJX@GJXAIOU",[[-1,14187,"```"]],[14187,14190],[14187,14187]]],[1567326470452,["GJX@GJXAIOU",[[-1,14411,"](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image023.gif)"]],[14411,14489],[14411,14411]]],[1567326471350,["GJX@GJXAIOU",[[1,14411,"```"]],[14411,14411],[14414,14414]]],[1567326480596,["GJX@GJXAIOU",[[-1,14270,"](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image022.gif)\n\n![文本框: "]],[14270,14357],[14270,14270]]],[1567326484548,["GJX@GJXAIOU",[[-1,14188,"\n"]],[14188,14188],[14187,14187]]],[1567326484750,["GJX@GJXAIOU",[[-1,14187,"\n"]],[14187,14187],[14186,14186]]],[1567326485091,["GJX@GJXAIOU",[[-1,14186,"\n"]],[14186,14186],[14185,14185]]],[1567326545766,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\n"],[1,12652,"My"],[-1,12657,"**"],[1,12659," 实"],[1,12662," "],[-1,12664," 1."],[1,12669,"概念"],[-1,12671,"\n\n"],[-1,12688,"1"],[1,12689,"\n"],[1,12693,"功能"],[-1,12713,"\n\n"],[1,12720,"业务"],[-1,12747,"\n\n"],[1,12753,"事务"],[-1,12788,"\n1"],[1,12796,"事务"],[-1,12844,"2."],[1,12847," 在"],[-1,12877,"\n2"],[1,12884,"每一"],[-1,12910,"\n2"],[1,12917,"可以"],[-1,12941,"\n2"],[1,12947,"也可"],[-1,12998,"\n3"],[1,13002,"my"],[-1,13023,"\n3"],[1,13029,"JD"],[-1,13086,"\n3"],[1,13092,"应为"],[-1,13165,"4."],[1,13168," 在"],[-1,13215,"\n\n"],[1,13217,"Tr"],[-1,13256,"\n4"],[1,13262,"如果"],[-1,13295,"5."],[1,13299,"实现"],[-1,13305,"\n5"],[1,13310," 在"],[-1,13347,"\n5"],[1,13353,"通过"],[-1,13377,"\n!"],[-1,13506,"["],[1,13507,"\n"],[-1,13642,"八*"],[1,13644,"\n\n"],[1,13650,"My"],[-1,13655,"**"],[1,13657," 实"],[-1,13662,"1."],[1,13665," 在"],[-1,13692,"\n2"],[1,13811,"编写"],[-1,13814,"\n!"],[-1,14024,"[*"],[1,14026,"\n\n"],[1,14029,"my"],[-1,14034,"**"],[1,14036," 实"],[-1,14041,"1."],[1,14044," 在"],[-1,14070,"\n2"],[1,14173,"编写"],[-1,14176,"\n!"],[1,14186," i"],[-1,14265,"]("],[1,14267,"}e"],[-1,14319,"]("],[1,14324,"\n\n"]],[12413,12413],[14326,14326]]],[1567326545766,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\n"],[-1,12652,"My"],[1,12659,"**"],[-1,12659," 实"],[-1,12664," "],[1,12667," 1."],[-1,12669,"概念"],[1,12673,"\n\n"],[1,12688,"1"],[-1,12688,"\n"],[-1,12693,"功能"],[1,12715,"\n\n"],[-1,12720,"业务"],[1,12749,"\n\n"],[-1,12753,"事务"],[1,12790,"\n1"],[-1,12796,"事务"],[1,12846,"2."],[-1,12847," 在"],[1,12879,"\n2"],[-1,12884,"每一"],[1,12912,"\n2"],[-1,12917,"可以"],[1,12943,"\n2"],[-1,12947,"也可"],[1,13000,"\n3"],[-1,13002,"my"],[1,13025,"\n3"],[-1,13029,"JD"],[1,13088,"\n3"],[-1,13092,"应为"],[1,13167,"4."],[-1,13168," 在"],[1,13217,"\n\n"],[-1,13217,"Tr"],[1,13258,"\n4"],[-1,13262,"如果"],[1,13297,"5."],[-1,13299,"实现"],[1,13307,"\n5"],[-1,13310," 在"],[1,13349,"\n5"],[-1,13353,"通过"],[1,13379,"\n!"],[1,13506,"["],[-1,13506,"\n"],[1,13642,"八*"],[-1,13642,"\n\n"],[-1,13650,"My"],[1,13657,"**"],[-1,13657," 实"],[1,13664,"1."],[-1,13665," 在"],[1,13694,"\n2"],[-1,13811,"编写"],[1,13816,"\n!"],[1,14024,"[*"],[-1,14024,"\n\n"],[-1,14029,"my"],[1,14036,"**"],[-1,14036," 实"],[1,14043,"1."],[-1,14044," 在"],[1,14072,"\n2"],[-1,14173,"编写"],[1,14178,"\n!"],[-1,14186," i"],[1,14267,"]("],[-1,14267,"}e"],[1,14321,"]("],[-1,14324,"\n\n"]],[14326,14326],[12413,12413]]],[1567326488769,["GJX@GJXAIOU",[[1,14241,"   "]],[14241,14241],[14244,14244]]],[1567326490058,["GJX@GJXAIOU",[[1,14277,"   "]],[14277,14277],[14280,14280]]],[1567327026805,[null,[[1,12413,"a"],[-1,12414,"`"],[1,12481,"\n`"],[-1,12484,"\n3"],[1,12487," m"],[-1,12506,"\n!"],[-1,12645,"["],[1,12646,"\n"],[1,12652,"My"],[-1,12657,"**"],[1,12659," 实"],[1,12662," "],[-1,12664," 1."],[1,12669,"概念"],[-1,12671,"\n\n"],[-1,12688,"1"],[1,12689,"\n"],[1,12693,"功能"],[-1,12713,"\n\n"],[1,12720,"业务"],[-1,12747,"\n\n"],[1,12753,"事务"],[-1,12788,"\n1"],[1,12796,"事务"],[-1,12844,"2."],[1,12847," 在"],[-1,12877,"\n2"],[1,12884,"每一"],[-1,12910,"\n2"],[1,12917,"可以"],[-1,12941,"\n2"],[1,12947,"也可"],[-1,12998,"\n3"],[1,13002,"my"],[-1,13023,"\n3"],[1,13029,"JD"],[-1,13086,"\n3"],[1,13092,"应为"],[-1,13165,"4."],[1,13168," 在"],[-1,13215,"\n\n"],[1,13217,"Tr"],[-1,13256,"\n4"],[1,13262,"如果"],[-1,13295,"5."],[1,13299,"实现"],[-1,13305,"\n5"],[1,13310," 在"],[-1,13347,"\n5"],[1,13353,"通过"],[-1,13377,"\n!"],[-1,13506,"["],[1,13507,"\n"],[-1,13642,"八*"],[1,13644,"\n\n"],[1,13650,"My"],[-1,13655,"**"],[1,13657," 实"],[-1,13662,"1."],[1,13665," 在"],[-1,13692,"\n2"],[1,13811,"编写"],[-1,13814,"\n!"],[-1,14024,"[*"],[1,14026,"\n\n"],[1,14029,"my"],[-1,14034,"**"],[1,14036," 实"],[-1,14041,"1."],[1,14044," 在"],[-1,14070,"\n2"],[1,14173,"编写"],[-1,14176,"\n!"],[1,14186," i"],[-1,14239,"Sy"],[1,14244,"Sy"],[-1,14268,"]("],[1,14270,"}e"],[-1,14275,"Sy"],[1,14280,"Sy"],[-1,14325,"]("],[1,14330,"\n\n"]],[12413,12413],[14332,14332]]],[1567327026805,[null,[[-1,12413,"a"],[1,12415,"`"],[-1,12481,"\n`"],[1,12486,"\n3"],[-1,12487," m"],[1,12508,"\n!"],[1,12645,"["],[-1,12645,"\n"],[-1,12652,"My"],[1,12659,"**"],[-1,12659," 实"],[-1,12664," "],[1,12667," 1."],[-1,12669,"概念"],[1,12673,"\n\n"],[1,12688,"1"],[-1,12688,"\n"],[-1,12693,"功能"],[1,12715,"\n\n"],[-1,12720,"业务"],[1,12749,"\n\n"],[-1,12753,"事务"],[1,12790,"\n1"],[-1,12796,"事务"],[1,12846,"2."],[-1,12847," 在"],[1,12879,"\n2"],[-1,12884,"每一"],[1,12912,"\n2"],[-1,12917,"可以"],[1,12943,"\n2"],[-1,12947,"也可"],[1,13000,"\n3"],[-1,13002,"my"],[1,13025,"\n3"],[-1,13029,"JD"],[1,13088,"\n3"],[-1,13092,"应为"],[1,13167,"4."],[-1,13168," 在"],[1,13217,"\n\n"],[-1,13217,"Tr"],[1,13258,"\n4"],[-1,13262,"如果"],[1,13297,"5."],[-1,13299,"实现"],[1,13307,"\n5"],[-1,13310," 在"],[1,13349,"\n5"],[-1,13353,"通过"],[1,13379,"\n!"],[1,13506,"["],[-1,13506,"\n"],[1,13642,"八*"],[-1,13642,"\n\n"],[-1,13650,"My"],[1,13657,"**"],[-1,13657," 实"],[1,13664,"1."],[-1,13665," 在"],[1,13694,"\n2"],[-1,13811,"编写"],[1,13816,"\n!"],[1,14024,"[*"],[-1,14024,"\n\n"],[-1,14029,"my"],[1,14036,"**"],[-1,14036," 实"],[1,14043,"1."],[-1,14044," 在"],[1,14072,"\n2"],[-1,14173,"编写"],[1,14178,"\n!"],[-1,14186," i"],[1,14241,"Sy"],[-1,14244,"Sy"],[1,14270,"]("],[-1,14270,"}e"],[1,14277,"Sy"],[-1,14280,"Sy"],[1,14327,"]("],[-1,14330,"\n\n"]],[14332,14332],[12413,12413]]],[1567326987675,["GJX@GJXAIOU",[[-1,7116,"```java\n\n```"]],[7116,7128],[7116,7116]]],[1567326987840,["GJX@GJXAIOU",[[-1,7120,"\n"]],[7116,7116],[7115,7115]]],[1567326988475,["GJX@GJXAIOU",[[-1,7119,"\n"]],[7118,7118],[7117,7117]]],[1567326988656,["GJX@GJXAIOU",[[-1,7118,"\n"]],[7117,7117],[7116,7116]]],[1567326988819,["GJX@GJXAIOU",[[-1,7117,"\n"]],[7116,7116],[7115,7115]]],[1567326989029,["GJX@GJXAIOU",[[-1,7116,"\n"]],[7115,7115],[7114,7114]]],[1567327326809,[null,[[1,12396,"a"],[-1,12397,"`"],[1,12464,"\n`"],[-1,12467,"\n3"],[1,12470," m"],[-1,12489,"\n!"],[-1,12628,"["],[1,12629,"\n"],[1,12635,"My"],[-1,12640,"**"],[1,12642," 实"],[1,12645," "],[-1,12647," 1."],[1,12652,"概念"],[-1,12654,"\n\n"],[-1,12671,"1"],[1,12672,"\n"],[1,12676,"功能"],[-1,12696,"\n\n"],[1,12703,"业务"],[-1,12730,"\n\n"],[1,12736,"事务"],[-1,12771,"\n1"],[1,12779,"事务"],[-1,12827,"2."],[1,12830," 在"],[-1,12860,"\n2"],[1,12867,"每一"],[-1,12893,"\n2"],[1,12900,"可以"],[-1,12924,"\n2"],[1,12930,"也可"],[-1,12981,"\n3"],[1,12985,"my"],[-1,13006,"\n3"],[1,13012,"JD"],[-1,13069,"\n3"],[1,13075,"应为"],[-1,13148,"4."],[1,13151," 在"],[-1,13198,"\n\n"],[1,13200,"Tr"],[-1,13239,"\n4"],[1,13245,"如果"],[-1,13278,"5."],[1,13282,"实现"],[-1,13288,"\n5"],[1,13293," 在"],[-1,13330,"\n5"],[1,13336,"通过"],[-1,13360,"\n!"],[-1,13489,"["],[1,13490,"\n"],[-1,13625,"八*"],[1,13627,"\n\n"],[1,13633,"My"],[-1,13638,"**"],[1,13640," 实"],[-1,13645,"1."],[1,13648," 在"],[-1,13675,"\n2"],[1,13794,"编写"],[-1,13797,"\n!"],[-1,14007,"[*"],[1,14009,"\n\n"],[1,14012,"my"],[-1,14017,"**"],[1,14019," 实"],[-1,14024,"1."],[1,14027," 在"],[-1,14053,"\n2"],[1,14156,"编写"],[-1,14159,"\n!"],[1,14169," i"],[-1,14222,"Sy"],[1,14227,"Sy"],[-1,14251,"]("],[1,14253,"}e"],[-1,14258,"Sy"],[1,14263,"Sy"],[-1,14308,"]("],[1,14313,"\n\n"]],[12396,12396],[14315,14315]]],[1567327326809,[null,[[-1,12396,"a"],[1,12398,"`"],[-1,12464,"\n`"],[1,12469,"\n3"],[-1,12470," m"],[1,12491,"\n!"],[1,12628,"["],[-1,12628,"\n"],[-1,12635,"My"],[1,12642,"**"],[-1,12642," 实"],[-1,12647," "],[1,12650," 1."],[-1,12652,"概念"],[1,12656,"\n\n"],[1,12671,"1"],[-1,12671,"\n"],[-1,12676,"功能"],[1,12698,"\n\n"],[-1,12703,"业务"],[1,12732,"\n\n"],[-1,12736,"事务"],[1,12773,"\n1"],[-1,12779,"事务"],[1,12829,"2."],[-1,12830," 在"],[1,12862,"\n2"],[-1,12867,"每一"],[1,12895,"\n2"],[-1,12900,"可以"],[1,12926,"\n2"],[-1,12930,"也可"],[1,12983,"\n3"],[-1,12985,"my"],[1,13008,"\n3"],[-1,13012,"JD"],[1,13071,"\n3"],[-1,13075,"应为"],[1,13150,"4."],[-1,13151," 在"],[1,13200,"\n\n"],[-1,13200,"Tr"],[1,13241,"\n4"],[-1,13245,"如果"],[1,13280,"5."],[-1,13282,"实现"],[1,13290,"\n5"],[-1,13293," 在"],[1,13332,"\n5"],[-1,13336,"通过"],[1,13362,"\n!"],[1,13489,"["],[-1,13489,"\n"],[1,13625,"八*"],[-1,13625,"\n\n"],[-1,13633,"My"],[1,13640,"**"],[-1,13640," 实"],[1,13647,"1."],[-1,13648," 在"],[1,13677,"\n2"],[-1,13794,"编写"],[1,13799,"\n!"],[1,14007,"[*"],[-1,14007,"\n\n"],[-1,14012,"my"],[1,14019,"**"],[-1,14019," 实"],[1,14026,"1."],[-1,14027," 在"],[1,14055,"\n2"],[-1,14156,"编写"],[1,14161,"\n!"],[-1,14169," i"],[1,14224,"Sy"],[-1,14227,"Sy"],[1,14253,"]("],[-1,14253,"}e"],[1,14260,"Sy"],[-1,14263,"Sy"],[1,14310,"]("],[-1,14313,"\n\n"]],[14315,14315],[12396,12396]]],[1567327279126,["GJX@GJXAIOU",[[1,8086,"()"]],[8086,8086],[8088,8088]]],[1567327280932,["GJX@GJXAIOU",[[-1,8086,"()"]],[8088,8088],[8086,8086]]],[1567327281939,["GJX@GJXAIOU",[[1,8086,"（）"]],[8086,8086],[8088,8088]]],[1567327292908,["GJX@GJXAIOU",[[1,8087,"就是日志输出的格式"]],[8087,8087],[8096,8096]]],[1567327315144,["GJX@GJXAIOU",[[1,8134,"日志"]],[8134,8134],[8136,8136]]],[1567327386806,[null,[[1,12409,"a"],[-1,12410,"`"],[1,12477,"\n`"],[-1,12480,"\n3"],[1,12483," m"],[-1,12502,"\n!"],[-1,12641,"["],[1,12642,"\n"],[1,12648,"My"],[-1,12653,"**"],[1,12655," 实"],[1,12658," "],[-1,12660," 1."],[1,12665,"概念"],[-1,12667,"\n\n"],[-1,12684,"1"],[1,12685,"\n"],[1,12689,"功能"],[-1,12709,"\n\n"],[1,12716,"业务"],[-1,12743,"\n\n"],[1,12749,"事务"],[-1,12784,"\n1"],[1,12792,"事务"],[-1,12840,"2."],[1,12843," 在"],[-1,12873,"\n2"],[1,12880,"每一"],[-1,12906,"\n2"],[1,12913,"可以"],[-1,12937,"\n2"],[1,12943,"也可"],[-1,12994,"\n3"],[1,12998,"my"],[-1,13019,"\n3"],[1,13025,"JD"],[-1,13082,"\n3"],[1,13088,"应为"],[-1,13161,"4."],[1,13164," 在"],[-1,13211,"\n\n"],[1,13213,"Tr"],[-1,13252,"\n4"],[1,13258,"如果"],[-1,13291,"5."],[1,13295,"实现"],[-1,13301,"\n5"],[1,13306," 在"],[-1,13343,"\n5"],[1,13349,"通过"],[-1,13373,"\n!"],[-1,13502,"["],[1,13503,"\n"],[-1,13638,"八*"],[1,13640,"\n\n"],[1,13646,"My"],[-1,13651,"**"],[1,13653," 实"],[-1,13658,"1."],[1,13661," 在"],[-1,13688,"\n2"],[1,13807,"编写"],[-1,13810,"\n!"],[-1,14020,"[*"],[1,14022,"\n\n"],[1,14025,"my"],[-1,14030,"**"],[1,14032," 实"],[-1,14037,"1."],[1,14040," 在"],[-1,14066,"\n2"],[1,14169,"编写"],[-1,14172,"\n!"],[1,14182," i"],[-1,14235,"Sy"],[1,14240,"Sy"],[-1,14264,"]("],[1,14266,"}e"],[-1,14271,"Sy"],[1,14276,"Sy"],[-1,14321,"]("],[1,14326,"\n\n"]],[12409,12409],[14328,14328]]],[1567327386806,[null,[[-1,12409,"a"],[1,12411,"`"],[-1,12477,"\n`"],[1,12482,"\n3"],[-1,12483," m"],[1,12504,"\n!"],[1,12641,"["],[-1,12641,"\n"],[-1,12648,"My"],[1,12655,"**"],[-1,12655," 实"],[-1,12660," "],[1,12663," 1."],[-1,12665,"概念"],[1,12669,"\n\n"],[1,12684,"1"],[-1,12684,"\n"],[-1,12689,"功能"],[1,12711,"\n\n"],[-1,12716,"业务"],[1,12745,"\n\n"],[-1,12749,"事务"],[1,12786,"\n1"],[-1,12792,"事务"],[1,12842,"2."],[-1,12843," 在"],[1,12875,"\n2"],[-1,12880,"每一"],[1,12908,"\n2"],[-1,12913,"可以"],[1,12939,"\n2"],[-1,12943,"也可"],[1,12996,"\n3"],[-1,12998,"my"],[1,13021,"\n3"],[-1,13025,"JD"],[1,13084,"\n3"],[-1,13088,"应为"],[1,13163,"4."],[-1,13164," 在"],[1,13213,"\n\n"],[-1,13213,"Tr"],[1,13254,"\n4"],[-1,13258,"如果"],[1,13293,"5."],[-1,13295,"实现"],[1,13303,"\n5"],[-1,13306," 在"],[1,13345,"\n5"],[-1,13349,"通过"],[1,13375,"\n!"],[1,13502,"["],[-1,13502,"\n"],[1,13638,"八*"],[-1,13638,"\n\n"],[-1,13646,"My"],[1,13653,"**"],[-1,13653," 实"],[1,13660,"1."],[-1,13661," 在"],[1,13690,"\n2"],[-1,13807,"编写"],[1,13812,"\n!"],[1,14020,"[*"],[-1,14020,"\n\n"],[-1,14025,"my"],[1,14032,"**"],[-1,14032," 实"],[1,14039,"1."],[-1,14040," 在"],[1,14068,"\n2"],[-1,14169,"编写"],[1,14174,"\n!"],[-1,14182," i"],[1,14237,"Sy"],[-1,14240,"Sy"],[1,14266,"]("],[-1,14266,"}e"],[1,14273,"Sy"],[-1,14276,"Sy"],[1,14323,"]("],[-1,14326,"\n\n"]],[14328,14328],[12409,12409]]],[1567327379204,["GJX@GJXAIOU",[[-1,8301," "]],[8302,8302],[8301,8301]]],[1567327386295,["GJX@GJXAIOU",[[-1,8357," "]],[8358,8358],[8357,8357]]],[1567327446905,[null,[[1,12407,"a"],[-1,12408,"`"],[1,12475,"\n`"],[-1,12478,"\n3"],[1,12481," m"],[-1,12500,"\n!"],[-1,12639,"["],[1,12640,"\n"],[1,12646,"My"],[-1,12651,"**"],[1,12653," 实"],[1,12656," "],[-1,12658," 1."],[1,12663,"概念"],[-1,12665,"\n\n"],[-1,12682,"1"],[1,12683,"\n"],[1,12687,"功能"],[-1,12707,"\n\n"],[1,12714,"业务"],[-1,12741,"\n\n"],[1,12747,"事务"],[-1,12782,"\n1"],[1,12790,"事务"],[-1,12838,"2."],[1,12841," 在"],[-1,12871,"\n2"],[1,12878,"每一"],[-1,12904,"\n2"],[1,12911,"可以"],[-1,12935,"\n2"],[1,12941,"也可"],[-1,12992,"\n3"],[1,12996,"my"],[-1,13017,"\n3"],[1,13023,"JD"],[-1,13080,"\n3"],[1,13086,"应为"],[-1,13159,"4."],[1,13162," 在"],[-1,13209,"\n\n"],[1,13211,"Tr"],[-1,13250,"\n4"],[1,13256,"如果"],[-1,13289,"5."],[1,13293,"实现"],[-1,13299,"\n5"],[1,13304," 在"],[-1,13341,"\n5"],[1,13347,"通过"],[-1,13371,"\n!"],[-1,13500,"["],[1,13501,"\n"],[-1,13636,"八*"],[1,13638,"\n\n"],[1,13644,"My"],[-1,13649,"**"],[1,13651," 实"],[-1,13656,"1."],[1,13659," 在"],[-1,13686,"\n2"],[1,13805,"编写"],[-1,13808,"\n!"],[-1,14018,"[*"],[1,14020,"\n\n"],[1,14023,"my"],[-1,14028,"**"],[1,14030," 实"],[-1,14035,"1."],[1,14038," 在"],[-1,14064,"\n2"],[1,14167,"编写"],[-1,14170,"\n!"],[1,14180," i"],[-1,14233,"Sy"],[1,14238,"Sy"],[-1,14262,"]("],[1,14264,"}e"],[-1,14269,"Sy"],[1,14274,"Sy"],[-1,14319,"]("],[1,14324,"\n\n"]],[12407,12407],[14326,14326]]],[1567327446905,[null,[[-1,12407,"a"],[1,12409,"`"],[-1,12475,"\n`"],[1,12480,"\n3"],[-1,12481," m"],[1,12502,"\n!"],[1,12639,"["],[-1,12639,"\n"],[-1,12646,"My"],[1,12653,"**"],[-1,12653," 实"],[-1,12658," "],[1,12661," 1."],[-1,12663,"概念"],[1,12667,"\n\n"],[1,12682,"1"],[-1,12682,"\n"],[-1,12687,"功能"],[1,12709,"\n\n"],[-1,12714,"业务"],[1,12743,"\n\n"],[-1,12747,"事务"],[1,12784,"\n1"],[-1,12790,"事务"],[1,12840,"2."],[-1,12841," 在"],[1,12873,"\n2"],[-1,12878,"每一"],[1,12906,"\n2"],[-1,12911,"可以"],[1,12937,"\n2"],[-1,12941,"也可"],[1,12994,"\n3"],[-1,12996,"my"],[1,13019,"\n3"],[-1,13023,"JD"],[1,13082,"\n3"],[-1,13086,"应为"],[1,13161,"4."],[-1,13162," 在"],[1,13211,"\n\n"],[-1,13211,"Tr"],[1,13252,"\n4"],[-1,13256,"如果"],[1,13291,"5."],[-1,13293,"实现"],[1,13301,"\n5"],[-1,13304," 在"],[1,13343,"\n5"],[-1,13347,"通过"],[1,13373,"\n!"],[1,13500,"["],[-1,13500,"\n"],[1,13636,"八*"],[-1,13636,"\n\n"],[-1,13644,"My"],[1,13651,"**"],[-1,13651," 实"],[1,13658,"1."],[-1,13659," 在"],[1,13688,"\n2"],[-1,13805,"编写"],[1,13810,"\n!"],[1,14018,"[*"],[-1,14018,"\n\n"],[-1,14023,"my"],[1,14030,"**"],[-1,14030," 实"],[1,14037,"1."],[-1,14038," 在"],[1,14066,"\n2"],[-1,14167,"编写"],[1,14172,"\n!"],[-1,14180," i"],[1,14235,"Sy"],[-1,14238,"Sy"],[1,14264,"]("],[-1,14264,"}e"],[1,14271,"Sy"],[-1,14274,"Sy"],[1,14321,"]("],[-1,14324,"\n\n"]],[14326,14326],[12407,12407]]],[1567327401632,["GJX@GJXAIOU",[[-1,8428,"d "]],[8430,8430],[8428,8428]]],[1567327404108,["GJX@GJXAIOU",[[1,8428,"d"]],[8428,8428],[8429,8429]]],[1567327442470,["GJX@GJXAIOU",[[1,8247,"// 向控制台输出相关的配置"]],[8247,8247],[8261,8261]]],[1567327445890,["GJX@GJXAIOU",[[1,8460,"、"]],[8460,8460],[8461,8461]]],[1567327446341,["GJX@GJXAIOU",[[-1,8460,"、"]],[8461,8461],[8460,8460]]],[1567327446767,["GJX@GJXAIOU",[[1,8460,"/"]],[8460,8460],[8461,8461]]],[1567327506905,[null,[[1,12421,"a"],[-1,12422,"`"],[1,12489,"\n`"],[-1,12492,"\n3"],[1,12495," m"],[-1,12514,"\n!"],[-1,12653,"["],[1,12654,"\n"],[1,12660,"My"],[-1,12665,"**"],[1,12667," 实"],[1,12670," "],[-1,12672," 1."],[1,12677,"概念"],[-1,12679,"\n\n"],[-1,12696,"1"],[1,12697,"\n"],[1,12701,"功能"],[-1,12721,"\n\n"],[1,12728,"业务"],[-1,12755,"\n\n"],[1,12761,"事务"],[-1,12796,"\n1"],[1,12804,"事务"],[-1,12852,"2."],[1,12855," 在"],[-1,12885,"\n2"],[1,12892,"每一"],[-1,12918,"\n2"],[1,12925,"可以"],[-1,12949,"\n2"],[1,12955,"也可"],[-1,13006,"\n3"],[1,13010,"my"],[-1,13031,"\n3"],[1,13037,"JD"],[-1,13094,"\n3"],[1,13100,"应为"],[-1,13173,"4."],[1,13176," 在"],[-1,13223,"\n\n"],[1,13225,"Tr"],[-1,13264,"\n4"],[1,13270,"如果"],[-1,13303,"5."],[1,13307,"实现"],[-1,13313,"\n5"],[1,13318," 在"],[-1,13355,"\n5"],[1,13361,"通过"],[-1,13385,"\n!"],[-1,13514,"["],[1,13515,"\n"],[-1,13650,"八*"],[1,13652,"\n\n"],[1,13658,"My"],[-1,13663,"**"],[1,13665," 实"],[-1,13670,"1."],[1,13673," 在"],[-1,13700,"\n2"],[1,13819,"编写"],[-1,13822,"\n!"],[-1,14032,"[*"],[1,14034,"\n\n"],[1,14037,"my"],[-1,14042,"**"],[1,14044," 实"],[-1,14049,"1."],[1,14052," 在"],[-1,14078,"\n2"],[1,14181,"编写"],[-1,14184,"\n!"],[1,14194," i"],[-1,14247,"Sy"],[1,14252,"Sy"],[-1,14276,"]("],[1,14278,"}e"],[-1,14283,"Sy"],[1,14288,"Sy"],[-1,14333,"]("],[1,14338,"\n\n"]],[12421,12421],[14340,14340]]],[1567327506905,[null,[[-1,12421,"a"],[1,12423,"`"],[-1,12489,"\n`"],[1,12494,"\n3"],[-1,12495," m"],[1,12516,"\n!"],[1,12653,"["],[-1,12653,"\n"],[-1,12660,"My"],[1,12667,"**"],[-1,12667," 实"],[-1,12672," "],[1,12675," 1."],[-1,12677,"概念"],[1,12681,"\n\n"],[1,12696,"1"],[-1,12696,"\n"],[-1,12701,"功能"],[1,12723,"\n\n"],[-1,12728,"业务"],[1,12757,"\n\n"],[-1,12761,"事务"],[1,12798,"\n1"],[-1,12804,"事务"],[1,12854,"2."],[-1,12855," 在"],[1,12887,"\n2"],[-1,12892,"每一"],[1,12920,"\n2"],[-1,12925,"可以"],[1,12951,"\n2"],[-1,12955,"也可"],[1,13008,"\n3"],[-1,13010,"my"],[1,13033,"\n3"],[-1,13037,"JD"],[1,13096,"\n3"],[-1,13100,"应为"],[1,13175,"4."],[-1,13176," 在"],[1,13225,"\n\n"],[-1,13225,"Tr"],[1,13266,"\n4"],[-1,13270,"如果"],[1,13305,"5."],[-1,13307,"实现"],[1,13315,"\n5"],[-1,13318," 在"],[1,13357,"\n5"],[-1,13361,"通过"],[1,13387,"\n!"],[1,13514,"["],[-1,13514,"\n"],[1,13650,"八*"],[-1,13650,"\n\n"],[-1,13658,"My"],[1,13665,"**"],[-1,13665," 实"],[1,13672,"1."],[-1,13673," 在"],[1,13702,"\n2"],[-1,13819,"编写"],[1,13824,"\n!"],[1,14032,"[*"],[-1,14032,"\n\n"],[-1,14037,"my"],[1,14044,"**"],[-1,14044," 实"],[1,14051,"1."],[-1,14052," 在"],[1,14080,"\n2"],[-1,14181,"编写"],[1,14186,"\n!"],[-1,14194," i"],[1,14249,"Sy"],[-1,14252,"Sy"],[1,14278,"]("],[-1,14278,"}e"],[1,14285,"Sy"],[-1,14288,"Sy"],[1,14335,"]("],[-1,14338,"\n\n"]],[14340,14340],[12421,12421]]],[1567327455991,["GJX@GJXAIOU",[[1,8462," 向日志文件输出的相关的配置"]],[8462,8462],[8476,8476]]],[1567327686910,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[1,12435,"a"],[-1,12436,"`"],[1,12503,"\n`"],[-1,12506,"\n3"],[1,12509," m"],[-1,12528,"\n!"],[-1,12667,"["],[1,12668,"\n"],[1,12674,"My"],[-1,12679,"**"],[1,12681," 实"],[1,12684," "],[-1,12686," 1."],[1,12691,"概念"],[-1,12693,"\n\n"],[-1,12710,"1"],[1,12711,"\n"],[1,12715,"功能"],[-1,12735,"\n\n"],[1,12742,"业务"],[-1,12769,"\n\n"],[1,12775,"事务"],[-1,12810,"\n1"],[1,12818,"事务"],[-1,12866,"2."],[1,12869," 在"],[-1,12899,"\n2"],[1,12906,"每一"],[-1,12932,"\n2"],[1,12939,"可以"],[-1,12963,"\n2"],[1,12969,"也可"],[-1,13020,"\n3"],[1,13024,"my"],[-1,13045,"\n3"],[1,13051,"JD"],[-1,13108,"\n3"],[1,13114,"应为"],[-1,13187,"4."],[1,13190," 在"],[-1,13237,"\n\n"],[1,13239,"Tr"],[-1,13278,"\n4"],[1,13284,"如果"],[-1,13317,"5."],[1,13321,"实现"],[-1,13327,"\n5"],[1,13332," 在"],[-1,13369,"\n5"],[1,13375,"通过"],[-1,13399,"\n!"],[-1,13528,"["],[1,13529,"\n"],[-1,13664,"八*"],[1,13666,"\n\n"],[1,13672,"My"],[-1,13677,"**"],[1,13679," 实"],[-1,13684,"1."],[1,13687," 在"],[-1,13714,"\n2"],[1,13833,"编写"],[-1,13836,"\n!"],[-1,14046,"[*"],[1,14048,"\n\n"],[1,14051,"my"],[-1,14056,"**"],[1,14058," 实"],[-1,14063,"1."],[1,14066," 在"],[-1,14092,"\n2"],[1,14195,"编写"],[-1,14198,"\n!"],[1,14208," i"],[-1,14261,"Sy"],[1,14266,"Sy"],[-1,14290,"]("],[1,14292,"}e"],[-1,14297,"Sy"],[1,14302,"Sy"],[-1,14347,"]("],[1,14352,"\n\n"]],[8461,8461],[14354,14354]]],[1567327686910,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[-1,12436,"a"],[1,12438,"`"],[-1,12504,"\n`"],[1,12509,"\n3"],[-1,12510," m"],[1,12531,"\n!"],[1,12668,"["],[-1,12668,"\n"],[-1,12675,"My"],[1,12682,"**"],[-1,12682," 实"],[-1,12687," "],[1,12690," 1."],[-1,12692,"概念"],[1,12696,"\n\n"],[1,12711,"1"],[-1,12711,"\n"],[-1,12716,"功能"],[1,12738,"\n\n"],[-1,12743,"业务"],[1,12772,"\n\n"],[-1,12776,"事务"],[1,12813,"\n1"],[-1,12819,"事务"],[1,12869,"2."],[-1,12870," 在"],[1,12902,"\n2"],[-1,12907,"每一"],[1,12935,"\n2"],[-1,12940,"可以"],[1,12966,"\n2"],[-1,12970,"也可"],[1,13023,"\n3"],[-1,13025,"my"],[1,13048,"\n3"],[-1,13052,"JD"],[1,13111,"\n3"],[-1,13115,"应为"],[1,13190,"4."],[-1,13191," 在"],[1,13240,"\n\n"],[-1,13240,"Tr"],[1,13281,"\n4"],[-1,13285,"如果"],[1,13320,"5."],[-1,13322,"实现"],[1,13330,"\n5"],[-1,13333," 在"],[1,13372,"\n5"],[-1,13376,"通过"],[1,13402,"\n!"],[1,13529,"["],[-1,13529,"\n"],[1,13665,"八*"],[-1,13665,"\n\n"],[-1,13673,"My"],[1,13680,"**"],[-1,13680," 实"],[1,13687,"1."],[-1,13688," 在"],[1,13717,"\n2"],[-1,13834,"编写"],[1,13839,"\n!"],[1,14047,"[*"],[-1,14047,"\n\n"],[-1,14052,"my"],[1,14059,"**"],[-1,14059," 实"],[1,14066,"1."],[-1,14067," 在"],[1,14095,"\n2"],[-1,14196,"编写"],[1,14201,"\n!"],[-1,14209," i"],[1,14264,"Sy"],[-1,14267,"Sy"],[1,14293,"]("],[-1,14293,"}e"],[1,14300,"Sy"],[-1,14303,"Sy"],[1,14350,"]("],[-1,14353,"\n\n"]],[14354,14354],[8461,8461]]],[1567327657117,["GJX@GJXAIOU",[[-1,8916," "]],[8917,8917],[8916,8916]]],[1567327657887,["GJX@GJXAIOU",[[-1,8915,"\n"]],[8916,8916],[8915,8915]]],[1567327658599,["GJX@GJXAIOU",[[1,8915,","]],[8915,8915],[8916,8916]]],[1567327659294,["GJX@GJXAIOU",[[-1,8915,","]],[8916,8916],[8915,8915]]],[1567327659798,["GJX@GJXAIOU",[[1,8915,"，"]],[8915,8915],[8916,8916]]],[1567327746912,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[1,12434,"a"],[-1,12435,"`"],[1,12502,"\n`"],[-1,12505,"\n3"],[1,12508," m"],[-1,12527,"\n!"],[-1,12666,"["],[1,12667,"\n"],[1,12673,"My"],[-1,12678,"**"],[1,12680," 实"],[1,12683," "],[-1,12685," 1."],[1,12690,"概念"],[-1,12692,"\n\n"],[-1,12709,"1"],[1,12710,"\n"],[1,12714,"功能"],[-1,12734,"\n\n"],[1,12741,"业务"],[-1,12768,"\n\n"],[1,12774,"事务"],[-1,12809,"\n1"],[1,12817,"事务"],[-1,12865,"2."],[1,12868," 在"],[-1,12898,"\n2"],[1,12905,"每一"],[-1,12931,"\n2"],[1,12938,"可以"],[-1,12962,"\n2"],[1,12968,"也可"],[-1,13019,"\n3"],[1,13023,"my"],[-1,13044,"\n3"],[1,13050,"JD"],[-1,13107,"\n3"],[1,13113,"应为"],[-1,13186,"4."],[1,13189," 在"],[-1,13236,"\n\n"],[1,13238,"Tr"],[-1,13277,"\n4"],[1,13283,"如果"],[-1,13316,"5."],[1,13320,"实现"],[-1,13326,"\n5"],[1,13331," 在"],[-1,13368,"\n5"],[1,13374,"通过"],[-1,13398,"\n!"],[-1,13527,"["],[1,13528,"\n"],[-1,13663,"八*"],[1,13665,"\n\n"],[1,13671,"My"],[-1,13676,"**"],[1,13678," 实"],[-1,13683,"1."],[1,13686," 在"],[-1,13713,"\n2"],[1,13832,"编写"],[-1,13835,"\n!"],[-1,14045,"[*"],[1,14047,"\n\n"],[1,14050,"my"],[-1,14055,"**"],[1,14057," 实"],[-1,14062,"1."],[1,14065," 在"],[-1,14091,"\n2"],[1,14194,"编写"],[-1,14197,"\n!"],[1,14207," i"],[-1,14260,"Sy"],[1,14265,"Sy"],[-1,14289,"]("],[1,14291,"}e"],[-1,14296,"Sy"],[1,14301,"Sy"],[-1,14346,"]("],[1,14351,"\n\n"]],[8461,8461],[14353,14353]]],[1567327746912,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[-1,12435,"a"],[1,12437,"`"],[-1,12503,"\n`"],[1,12508,"\n3"],[-1,12509," m"],[1,12530,"\n!"],[1,12667,"["],[-1,12667,"\n"],[-1,12674,"My"],[1,12681,"**"],[-1,12681," 实"],[-1,12686," "],[1,12689," 1."],[-1,12691,"概念"],[1,12695,"\n\n"],[1,12710,"1"],[-1,12710,"\n"],[-1,12715,"功能"],[1,12737,"\n\n"],[-1,12742,"业务"],[1,12771,"\n\n"],[-1,12775,"事务"],[1,12812,"\n1"],[-1,12818,"事务"],[1,12868,"2."],[-1,12869," 在"],[1,12901,"\n2"],[-1,12906,"每一"],[1,12934,"\n2"],[-1,12939,"可以"],[1,12965,"\n2"],[-1,12969,"也可"],[1,13022,"\n3"],[-1,13024,"my"],[1,13047,"\n3"],[-1,13051,"JD"],[1,13110,"\n3"],[-1,13114,"应为"],[1,13189,"4."],[-1,13190," 在"],[1,13239,"\n\n"],[-1,13239,"Tr"],[1,13280,"\n4"],[-1,13284,"如果"],[1,13319,"5."],[-1,13321,"实现"],[1,13329,"\n5"],[-1,13332," 在"],[1,13371,"\n5"],[-1,13375,"通过"],[1,13401,"\n!"],[1,13528,"["],[-1,13528,"\n"],[1,13664,"八*"],[-1,13664,"\n\n"],[-1,13672,"My"],[1,13679,"**"],[-1,13679," 实"],[1,13686,"1."],[-1,13687," 在"],[1,13716,"\n2"],[-1,13833,"编写"],[1,13838,"\n!"],[1,14046,"[*"],[-1,14046,"\n\n"],[-1,14051,"my"],[1,14058,"**"],[-1,14058," 实"],[1,14065,"1."],[-1,14066," 在"],[1,14094,"\n2"],[-1,14195,"编写"],[1,14200,"\n!"],[-1,14208," i"],[1,14263,"Sy"],[-1,14266,"Sy"],[1,14292,"]("],[-1,14292,"}e"],[1,14299,"Sy"],[-1,14302,"Sy"],[1,14349,"]("],[-1,14352,"\n\n"]],[14353,14353],[8461,8461]]],[1567327727152,["GJX@GJXAIOU",[[1,10228," "]],[10228,10228],[10229,10229]]],[1567332126990,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,10227,"中"],[1,10229,"中"],[1,12435,"a"],[-1,12436,"`"],[1,12503,"\n`"],[-1,12506,"\n3"],[1,12509," m"],[-1,12528,"\n!"],[-1,12667,"["],[1,12668,"\n"],[1,12674,"My"],[-1,12679,"**"],[1,12681," 实"],[1,12684," "],[-1,12686," 1."],[1,12691,"概念"],[-1,12693,"\n\n"],[-1,12710,"1"],[1,12711,"\n"],[1,12715,"功能"],[-1,12735,"\n\n"],[1,12742,"业务"],[-1,12769,"\n\n"],[1,12775,"事务"],[-1,12810,"\n1"],[1,12818,"事务"],[-1,12866,"2."],[1,12869," 在"],[-1,12899,"\n2"],[1,12906,"每一"],[-1,12932,"\n2"],[1,12939,"可以"],[-1,12963,"\n2"],[1,12969,"也可"],[-1,13020,"\n3"],[1,13024,"my"],[-1,13045,"\n3"],[1,13051,"JD"],[-1,13108,"\n3"],[1,13114,"应为"],[-1,13187,"4."],[1,13190," 在"],[-1,13237,"\n\n"],[1,13239,"Tr"],[-1,13278,"\n4"],[1,13284,"如果"],[-1,13317,"5."],[1,13321,"实现"],[-1,13327,"\n5"],[1,13332," 在"],[-1,13369,"\n5"],[1,13375,"通过"],[-1,13399,"\n!"],[-1,13528,"["],[1,13529,"\n"],[-1,13664,"八*"],[1,13666,"\n\n"],[1,13672,"My"],[-1,13677,"**"],[1,13679," 实"],[-1,13684,"1."],[1,13687," 在"],[-1,13714,"\n2"],[1,13833,"编写"],[-1,13836,"\n!"],[-1,14046,"[*"],[1,14048,"\n\n"],[1,14051,"my"],[-1,14056,"**"],[1,14058," 实"],[-1,14063,"1."],[1,14066," 在"],[-1,14092,"\n2"],[1,14195,"编写"],[-1,14198,"\n!"],[1,14208," i"],[-1,14261,"Sy"],[1,14266,"Sy"],[-1,14290,"]("],[1,14292,"}e"],[-1,14297,"Sy"],[1,14302,"Sy"],[-1,14347,"]("],[1,14352,"\n\n"]],[8461,8461],[14354,14354]]],[1567332126990,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,10228,"中"],[-1,10229,"中"],[-1,12436,"a"],[1,12438,"`"],[-1,12504,"\n`"],[1,12509,"\n3"],[-1,12510," m"],[1,12531,"\n!"],[1,12668,"["],[-1,12668,"\n"],[-1,12675,"My"],[1,12682,"**"],[-1,12682," 实"],[-1,12687," "],[1,12690," 1."],[-1,12692,"概念"],[1,12696,"\n\n"],[1,12711,"1"],[-1,12711,"\n"],[-1,12716,"功能"],[1,12738,"\n\n"],[-1,12743,"业务"],[1,12772,"\n\n"],[-1,12776,"事务"],[1,12813,"\n1"],[-1,12819,"事务"],[1,12869,"2."],[-1,12870," 在"],[1,12902,"\n2"],[-1,12907,"每一"],[1,12935,"\n2"],[-1,12940,"可以"],[1,12966,"\n2"],[-1,12970,"也可"],[1,13023,"\n3"],[-1,13025,"my"],[1,13048,"\n3"],[-1,13052,"JD"],[1,13111,"\n3"],[-1,13115,"应为"],[1,13190,"4."],[-1,13191," 在"],[1,13240,"\n\n"],[-1,13240,"Tr"],[1,13281,"\n4"],[-1,13285,"如果"],[1,13320,"5."],[-1,13322,"实现"],[1,13330,"\n5"],[-1,13333," 在"],[1,13372,"\n5"],[-1,13376,"通过"],[1,13402,"\n!"],[1,13529,"["],[-1,13529,"\n"],[1,13665,"八*"],[-1,13665,"\n\n"],[-1,13673,"My"],[1,13680,"**"],[-1,13680," 实"],[1,13687,"1."],[-1,13688," 在"],[1,13717,"\n2"],[-1,13834,"编写"],[1,13839,"\n!"],[1,14047,"[*"],[-1,14047,"\n\n"],[-1,14052,"my"],[1,14059,"**"],[-1,14059," 实"],[1,14066,"1."],[-1,14067," 在"],[1,14095,"\n2"],[-1,14196,"编写"],[1,14201,"\n!"],[-1,14209," i"],[1,14264,"Sy"],[-1,14267,"Sy"],[1,14293,"]("],[-1,14293,"}e"],[1,14300,"Sy"],[-1,14303,"Sy"],[1,14350,"]("],[-1,14353,"\n\n"]],[14354,14354],[8461,8461]]],[1567332105719,["GJX@GJXAIOU",[[1,9737," ：直接在.p"]],[9737,9737],[9744,9744]]],[1567332106651,["GJX@GJXAIOU",[[-1,9742,".p"]],[9744,9744],[9742,9742]]],[1567332106939,["GJX@GJXAIOU",[[1,9742,"l"]],[9742,9742],[9743,9743]]],[1567332106994,["GJX@GJXAIOU",[[1,9742," "]],[9743,9743],[9744,9744]]],[1567332115000,["GJX@GJXAIOU",[[1,9744,"og4j.properties中"]],[9744,9744],[9760,9760]]],[1567332115055,["GJX@GJXAIOU",[[1,9759," "]],[9760,9760],[9761,9761]]],[1567332117965,["GJX@GJXAIOU",[[1,9761,"设置；"]],[9761,9761],[9764,9764]]],[1567332186990,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[1,12462,"a"],[-1,12463,"`"],[1,12530,"\n`"],[-1,12533,"\n3"],[1,12536," m"],[-1,12555,"\n!"],[-1,12694,"["],[1,12695,"\n"],[1,12701,"My"],[-1,12706,"**"],[1,12708," 实"],[1,12711," "],[-1,12713," 1."],[1,12718,"概念"],[-1,12720,"\n\n"],[-1,12737,"1"],[1,12738,"\n"],[1,12742,"功能"],[-1,12762,"\n\n"],[1,12769,"业务"],[-1,12796,"\n\n"],[1,12802,"事务"],[-1,12837,"\n1"],[1,12845,"事务"],[-1,12893,"2."],[1,12896," 在"],[-1,12926,"\n2"],[1,12933,"每一"],[-1,12959,"\n2"],[1,12966,"可以"],[-1,12990,"\n2"],[1,12996,"也可"],[-1,13047,"\n3"],[1,13051,"my"],[-1,13072,"\n3"],[1,13078,"JD"],[-1,13135,"\n3"],[1,13141,"应为"],[-1,13214,"4."],[1,13217," 在"],[-1,13264,"\n\n"],[1,13266,"Tr"],[-1,13305,"\n4"],[1,13311,"如果"],[-1,13344,"5."],[1,13348,"实现"],[-1,13354,"\n5"],[1,13359," 在"],[-1,13396,"\n5"],[1,13402,"通过"],[-1,13426,"\n!"],[-1,13555,"["],[1,13556,"\n"],[-1,13691,"八*"],[1,13693,"\n\n"],[1,13699,"My"],[-1,13704,"**"],[1,13706," 实"],[-1,13711,"1."],[1,13714," 在"],[-1,13741,"\n2"],[1,13860,"编写"],[-1,13863,"\n!"],[-1,14073,"[*"],[1,14075,"\n\n"],[1,14078,"my"],[-1,14083,"**"],[1,14085," 实"],[-1,14090,"1."],[1,14093," 在"],[-1,14119,"\n2"],[1,14222,"编写"],[-1,14225,"\n!"],[1,14235," i"],[-1,14288,"Sy"],[1,14293,"Sy"],[-1,14317,"]("],[1,14319,"}e"],[-1,14324,"Sy"],[1,14329,"Sy"],[-1,14374,"]("],[1,14379,"\n\n"]],[8461,8461],[14381,14381]]],[1567332186990,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[-1,12463,"a"],[1,12465,"`"],[-1,12531,"\n`"],[1,12536,"\n3"],[-1,12537," m"],[1,12558,"\n!"],[1,12695,"["],[-1,12695,"\n"],[-1,12702,"My"],[1,12709,"**"],[-1,12709," 实"],[-1,12714," "],[1,12717," 1."],[-1,12719,"概念"],[1,12723,"\n\n"],[1,12738,"1"],[-1,12738,"\n"],[-1,12743,"功能"],[1,12765,"\n\n"],[-1,12770,"业务"],[1,12799,"\n\n"],[-1,12803,"事务"],[1,12840,"\n1"],[-1,12846,"事务"],[1,12896,"2."],[-1,12897," 在"],[1,12929,"\n2"],[-1,12934,"每一"],[1,12962,"\n2"],[-1,12967,"可以"],[1,12993,"\n2"],[-1,12997,"也可"],[1,13050,"\n3"],[-1,13052,"my"],[1,13075,"\n3"],[-1,13079,"JD"],[1,13138,"\n3"],[-1,13142,"应为"],[1,13217,"4."],[-1,13218," 在"],[1,13267,"\n\n"],[-1,13267,"Tr"],[1,13308,"\n4"],[-1,13312,"如果"],[1,13347,"5."],[-1,13349,"实现"],[1,13357,"\n5"],[-1,13360," 在"],[1,13399,"\n5"],[-1,13403,"通过"],[1,13429,"\n!"],[1,13556,"["],[-1,13556,"\n"],[1,13692,"八*"],[-1,13692,"\n\n"],[-1,13700,"My"],[1,13707,"**"],[-1,13707," 实"],[1,13714,"1."],[-1,13715," 在"],[1,13744,"\n2"],[-1,13861,"编写"],[1,13866,"\n!"],[1,14074,"[*"],[-1,14074,"\n\n"],[-1,14079,"my"],[1,14086,"**"],[-1,14086," 实"],[1,14093,"1."],[-1,14094," 在"],[1,14122,"\n2"],[-1,14223,"编写"],[1,14228,"\n!"],[-1,14236," i"],[1,14291,"Sy"],[-1,14294,"Sy"],[1,14320,"]("],[-1,14320,"}e"],[1,14327,"Sy"],[-1,14330,"Sy"],[1,14377,"]("],[-1,14380,"\n\n"]],[14381,14381],[8461,8461]]],[1567332173943,["GJX@GJXAIOU",[[1,10284,"·"]],[10284,10284],[10285,10285]]],[1567332175482,["GJX@GJXAIOU",[[-1,10284,"·"]],[10285,10285],[10284,10284]]],[1567332175862,["GJX@GJXAIOU",[[1,10284,"`"]],[10284,10284],[10285,10285]]],[1567332177738,["GJX@GJXAIOU",[[1,10301,"`"]],[10301,10301],[10302,10302]]],[1567332180987,["GJX@GJXAIOU",[[1,10307,"`"]],[10307,10307],[10308,10308]]],[1567332182773,["GJX@GJXAIOU",[[1,10321,"`"]],[10321,10321],[10322,10322]]],[1567332246996,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,12466,"a"],[-1,12467,"`"],[1,12534,"\n`"],[-1,12537,"\n3"],[1,12540," m"],[-1,12559,"\n!"],[-1,12698,"["],[1,12699,"\n"],[1,12705,"My"],[-1,12710,"**"],[1,12712," 实"],[1,12715," "],[-1,12717," 1."],[1,12722,"概念"],[-1,12724,"\n\n"],[-1,12741,"1"],[1,12742,"\n"],[1,12746,"功能"],[-1,12766,"\n\n"],[1,12773,"业务"],[-1,12800,"\n\n"],[1,12806,"事务"],[-1,12841,"\n1"],[1,12849,"事务"],[-1,12897,"2."],[1,12900," 在"],[-1,12930,"\n2"],[1,12937,"每一"],[-1,12963,"\n2"],[1,12970,"可以"],[-1,12994,"\n2"],[1,13000,"也可"],[-1,13051,"\n3"],[1,13055,"my"],[-1,13076,"\n3"],[1,13082,"JD"],[-1,13139,"\n3"],[1,13145,"应为"],[-1,13218,"4."],[1,13221," 在"],[-1,13268,"\n\n"],[1,13270,"Tr"],[-1,13309,"\n4"],[1,13315,"如果"],[-1,13348,"5."],[1,13352,"实现"],[-1,13358,"\n5"],[1,13363," 在"],[-1,13400,"\n5"],[1,13406,"通过"],[-1,13430,"\n!"],[-1,13559,"["],[1,13560,"\n"],[-1,13695,"八*"],[1,13697,"\n\n"],[1,13703,"My"],[-1,13708,"**"],[1,13710," 实"],[-1,13715,"1."],[1,13718," 在"],[-1,13745,"\n2"],[1,13864,"编写"],[-1,13867,"\n!"],[-1,14077,"[*"],[1,14079,"\n\n"],[1,14082,"my"],[-1,14087,"**"],[1,14089," 实"],[-1,14094,"1."],[1,14097," 在"],[-1,14123,"\n2"],[1,14226,"编写"],[-1,14229,"\n!"],[1,14239," i"],[-1,14292,"Sy"],[1,14297,"Sy"],[-1,14321,"]("],[1,14323,"}e"],[-1,14328,"Sy"],[1,14333,"Sy"],[-1,14378,"]("],[1,14383,"\n\n"]],[8461,8461],[14385,14385]]],[1567332246996,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,12467,"a"],[1,12469,"`"],[-1,12535,"\n`"],[1,12540,"\n3"],[-1,12541," m"],[1,12562,"\n!"],[1,12699,"["],[-1,12699,"\n"],[-1,12706,"My"],[1,12713,"**"],[-1,12713," 实"],[-1,12718," "],[1,12721," 1."],[-1,12723,"概念"],[1,12727,"\n\n"],[1,12742,"1"],[-1,12742,"\n"],[-1,12747,"功能"],[1,12769,"\n\n"],[-1,12774,"业务"],[1,12803,"\n\n"],[-1,12807,"事务"],[1,12844,"\n1"],[-1,12850,"事务"],[1,12900,"2."],[-1,12901," 在"],[1,12933,"\n2"],[-1,12938,"每一"],[1,12966,"\n2"],[-1,12971,"可以"],[1,12997,"\n2"],[-1,13001,"也可"],[1,13054,"\n3"],[-1,13056,"my"],[1,13079,"\n3"],[-1,13083,"JD"],[1,13142,"\n3"],[-1,13146,"应为"],[1,13221,"4."],[-1,13222," 在"],[1,13271,"\n\n"],[-1,13271,"Tr"],[1,13312,"\n4"],[-1,13316,"如果"],[1,13351,"5."],[-1,13353,"实现"],[1,13361,"\n5"],[-1,13364," 在"],[1,13403,"\n5"],[-1,13407,"通过"],[1,13433,"\n!"],[1,13560,"["],[-1,13560,"\n"],[1,13696,"八*"],[-1,13696,"\n\n"],[-1,13704,"My"],[1,13711,"**"],[-1,13711," 实"],[1,13718,"1."],[-1,13719," 在"],[1,13748,"\n2"],[-1,13865,"编写"],[1,13870,"\n!"],[1,14078,"[*"],[-1,14078,"\n\n"],[-1,14083,"my"],[1,14090,"**"],[-1,14090," 实"],[1,14097,"1."],[-1,14098," 在"],[1,14126,"\n2"],[-1,14227,"编写"],[1,14232,"\n!"],[-1,14240," i"],[1,14295,"Sy"],[-1,14298,"Sy"],[1,14324,"]("],[-1,14324,"}e"],[1,14331,"Sy"],[-1,14334,"Sy"],[1,14381,"]("],[-1,14384,"\n\n"]],[14385,14385],[8461,8461]]],[1567332189003,["GJX@GJXAIOU",[[1,10338," "]],[10338,10338],[10339,10339]]],[1567332190620,["GJX@GJXAIOU",[[1,10344," "]],[10344,10344],[10345,10345]]],[1567332191671,["GJX@GJXAIOU",[[-1,10344," "]],[10345,10345],[10344,10344]]],[1567332192236,["GJX@GJXAIOU",[[1,10345," "]],[10345,10345],[10346,10346]]],[1567332306996,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,10337," "],[-1,10338," "],[-1,10344,"语"],[1,10346,"语"],[1,12468,"a"],[-1,12469,"`"],[1,12536,"\n`"],[-1,12539,"\n3"],[1,12542," m"],[-1,12561,"\n!"],[-1,12700,"["],[1,12701,"\n"],[1,12707,"My"],[-1,12712,"**"],[1,12714," 实"],[1,12717," "],[-1,12719," 1."],[1,12724,"概念"],[-1,12726,"\n\n"],[-1,12743,"1"],[1,12744,"\n"],[1,12748,"功能"],[-1,12768,"\n\n"],[1,12775,"业务"],[-1,12802,"\n\n"],[1,12808,"事务"],[-1,12843,"\n1"],[1,12851,"事务"],[-1,12899,"2."],[1,12902," 在"],[-1,12932,"\n2"],[1,12939,"每一"],[-1,12965,"\n2"],[1,12972,"可以"],[-1,12996,"\n2"],[1,13002,"也可"],[-1,13053,"\n3"],[1,13057,"my"],[-1,13078,"\n3"],[1,13084,"JD"],[-1,13141,"\n3"],[1,13147,"应为"],[-1,13220,"4."],[1,13223," 在"],[-1,13270,"\n\n"],[1,13272,"Tr"],[-1,13311,"\n4"],[1,13317,"如果"],[-1,13350,"5."],[1,13354,"实现"],[-1,13360,"\n5"],[1,13365," 在"],[-1,13402,"\n5"],[1,13408,"通过"],[-1,13432,"\n!"],[-1,13561,"["],[1,13562,"\n"],[-1,13697,"八*"],[1,13699,"\n\n"],[1,13705,"My"],[-1,13710,"**"],[1,13712," 实"],[-1,13717,"1."],[1,13720," 在"],[-1,13747,"\n2"],[1,13866,"编写"],[-1,13869,"\n!"],[-1,14079,"[*"],[1,14081,"\n\n"],[1,14084,"my"],[-1,14089,"**"],[1,14091," 实"],[-1,14096,"1."],[1,14099," 在"],[-1,14125,"\n2"],[1,14228,"编写"],[-1,14231,"\n!"],[1,14241," i"],[-1,14294,"Sy"],[1,14299,"Sy"],[-1,14323,"]("],[1,14325,"}e"],[-1,14330,"Sy"],[1,14335,"Sy"],[-1,14380,"]("],[1,14385,"\n\n"]],[8461,8461],[14387,14387]]],[1567332306996,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,10338," "],[1,10340," "],[1,10345,"语"],[-1,10346,"语"],[-1,12469,"a"],[1,12471,"`"],[-1,12537,"\n`"],[1,12542,"\n3"],[-1,12543," m"],[1,12564,"\n!"],[1,12701,"["],[-1,12701,"\n"],[-1,12708,"My"],[1,12715,"**"],[-1,12715," 实"],[-1,12720," "],[1,12723," 1."],[-1,12725,"概念"],[1,12729,"\n\n"],[1,12744,"1"],[-1,12744,"\n"],[-1,12749,"功能"],[1,12771,"\n\n"],[-1,12776,"业务"],[1,12805,"\n\n"],[-1,12809,"事务"],[1,12846,"\n1"],[-1,12852,"事务"],[1,12902,"2."],[-1,12903," 在"],[1,12935,"\n2"],[-1,12940,"每一"],[1,12968,"\n2"],[-1,12973,"可以"],[1,12999,"\n2"],[-1,13003,"也可"],[1,13056,"\n3"],[-1,13058,"my"],[1,13081,"\n3"],[-1,13085,"JD"],[1,13144,"\n3"],[-1,13148,"应为"],[1,13223,"4."],[-1,13224," 在"],[1,13273,"\n\n"],[-1,13273,"Tr"],[1,13314,"\n4"],[-1,13318,"如果"],[1,13353,"5."],[-1,13355,"实现"],[1,13363,"\n5"],[-1,13366," 在"],[1,13405,"\n5"],[-1,13409,"通过"],[1,13435,"\n!"],[1,13562,"["],[-1,13562,"\n"],[1,13698,"八*"],[-1,13698,"\n\n"],[-1,13706,"My"],[1,13713,"**"],[-1,13713," 实"],[1,13720,"1."],[-1,13721," 在"],[1,13750,"\n2"],[-1,13867,"编写"],[1,13872,"\n!"],[1,14080,"[*"],[-1,14080,"\n\n"],[-1,14085,"my"],[1,14092,"**"],[-1,14092," 实"],[1,14099,"1."],[-1,14100," 在"],[1,14128,"\n2"],[-1,14229,"编写"],[1,14234,"\n!"],[-1,14242," i"],[1,14297,"Sy"],[-1,14300,"Sy"],[1,14326,"]("],[-1,14326,"}e"],[1,14333,"Sy"],[-1,14336,"Sy"],[1,14383,"]("],[-1,14386,"\n\n"]],[14387,14387],[8461,8461]]],[1567332253965,["GJX@GJXAIOU",[[1,10658,"`"]],[10658,10658],[10659,10659]]],[1567332255083,["GJX@GJXAIOU",[[1,10668,"`"]],[10668,10668],[10669,10669]]],[1567332255803,["GJX@GJXAIOU",[[1,10633,"`"]],[10633,10633],[10634,10634]]],[1567332256524,["GJX@GJXAIOU",[[1,10638,"`"]],[10638,10638],[10639,10639]]],[1567332260500,["GJX@GJXAIOU",[[1,10603,"`"]],[10603,10603],[10604,10604]]],[1567332262908,["GJX@GJXAIOU",[[1,10607,"`c "]],[10607,10607],[10609,10609]]],[1567332264079,["GJX@GJXAIOU",[[-1,10608,"c"]],[10609,10609],[10608,10608]]],[1567332264251,["GJX@GJXAIOU",[[1,10609," "]],[10608,10608],[10609,10609]]],[1567332268195,["GJX@GJXAIOU",[[1,10575,"`"]],[10575,10575],[10576,10576]]],[1567332269362,["GJX@GJXAIOU",[[1,10589,"`"]],[10589,10589],[10590,10590]]],[1567332367000,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,10337," "],[-1,10338," "],[-1,10344,"语"],[1,10346,"语"],[-1,10574,"p"],[1,10576,"p"],[-1,10588," "],[1,10590," "],[-1,10604,"#"],[1,10606,"#"],[-1,10608,"获"],[1,10612,"获"],[-1,10638,"#"],[1,10640,"#"],[-1,10643,"表"],[1,10645,"表"],[-1,10665,"#"],[1,10667,"#"],[-1,10675,"第"],[1,10677,"第"],[1,12478,"a"],[-1,12479,"`"],[1,12546,"\n`"],[-1,12549,"\n3"],[1,12552," m"],[-1,12571,"\n!"],[-1,12710,"["],[1,12711,"\n"],[1,12717,"My"],[-1,12722,"**"],[1,12724," 实"],[1,12727," "],[-1,12729," 1."],[1,12734,"概念"],[-1,12736,"\n\n"],[-1,12753,"1"],[1,12754,"\n"],[1,12758,"功能"],[-1,12778,"\n\n"],[1,12785,"业务"],[-1,12812,"\n\n"],[1,12818,"事务"],[-1,12853,"\n1"],[1,12861,"事务"],[-1,12909,"2."],[1,12912," 在"],[-1,12942,"\n2"],[1,12949,"每一"],[-1,12975,"\n2"],[1,12982,"可以"],[-1,13006,"\n2"],[1,13012,"也可"],[-1,13063,"\n3"],[1,13067,"my"],[-1,13088,"\n3"],[1,13094,"JD"],[-1,13151,"\n3"],[1,13157,"应为"],[-1,13230,"4."],[1,13233," 在"],[-1,13280,"\n\n"],[1,13282,"Tr"],[-1,13321,"\n4"],[1,13327,"如果"],[-1,13360,"5."],[1,13364,"实现"],[-1,13370,"\n5"],[1,13375," 在"],[-1,13412,"\n5"],[1,13418,"通过"],[-1,13442,"\n!"],[-1,13571,"["],[1,13572,"\n"],[-1,13707,"八*"],[1,13709,"\n\n"],[1,13715,"My"],[-1,13720,"**"],[1,13722," 实"],[-1,13727,"1."],[1,13730," 在"],[-1,13757,"\n2"],[1,13876,"编写"],[-1,13879,"\n!"],[-1,14089,"[*"],[1,14091,"\n\n"],[1,14094,"my"],[-1,14099,"**"],[1,14101," 实"],[-1,14106,"1."],[1,14109," 在"],[-1,14135,"\n2"],[1,14238,"编写"],[-1,14241,"\n!"],[1,14251," i"],[-1,14304,"Sy"],[1,14309,"Sy"],[-1,14333,"]("],[1,14335,"}e"],[-1,14340,"Sy"],[1,14345,"Sy"],[-1,14390,"]("],[1,14395,"\n\n"]],[8461,8461],[14397,14397]]],[1567332367000,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,10338," "],[1,10340," "],[1,10345,"语"],[-1,10346,"语"],[1,10575,"p"],[-1,10576,"p"],[1,10589," "],[-1,10590," "],[1,10605,"#"],[-1,10606,"#"],[1,10609,"获"],[-1,10612,"获"],[1,10639,"#"],[-1,10640,"#"],[1,10644,"表"],[-1,10645,"表"],[1,10666,"#"],[-1,10667,"#"],[1,10676,"第"],[-1,10677,"第"],[-1,12479,"a"],[1,12481,"`"],[-1,12547,"\n`"],[1,12552,"\n3"],[-1,12553," m"],[1,12574,"\n!"],[1,12711,"["],[-1,12711,"\n"],[-1,12718,"My"],[1,12725,"**"],[-1,12725," 实"],[-1,12730," "],[1,12733," 1."],[-1,12735,"概念"],[1,12739,"\n\n"],[1,12754,"1"],[-1,12754,"\n"],[-1,12759,"功能"],[1,12781,"\n\n"],[-1,12786,"业务"],[1,12815,"\n\n"],[-1,12819,"事务"],[1,12856,"\n1"],[-1,12862,"事务"],[1,12912,"2."],[-1,12913," 在"],[1,12945,"\n2"],[-1,12950,"每一"],[1,12978,"\n2"],[-1,12983,"可以"],[1,13009,"\n2"],[-1,13013,"也可"],[1,13066,"\n3"],[-1,13068,"my"],[1,13091,"\n3"],[-1,13095,"JD"],[1,13154,"\n3"],[-1,13158,"应为"],[1,13233,"4."],[-1,13234," 在"],[1,13283,"\n\n"],[-1,13283,"Tr"],[1,13324,"\n4"],[-1,13328,"如果"],[1,13363,"5."],[-1,13365,"实现"],[1,13373,"\n5"],[-1,13376," 在"],[1,13415,"\n5"],[-1,13419,"通过"],[1,13445,"\n!"],[1,13572,"["],[-1,13572,"\n"],[1,13708,"八*"],[-1,13708,"\n\n"],[-1,13716,"My"],[1,13723,"**"],[-1,13723," 实"],[1,13730,"1."],[-1,13731," 在"],[1,13760,"\n2"],[-1,13877,"编写"],[1,13882,"\n!"],[1,14090,"[*"],[-1,14090,"\n\n"],[-1,14095,"my"],[1,14102,"**"],[-1,14102," 实"],[1,14109,"1."],[-1,14110," 在"],[1,14138,"\n2"],[-1,14239,"编写"],[1,14244,"\n!"],[-1,14252," i"],[1,14307,"Sy"],[-1,14310,"Sy"],[1,14336,"]("],[-1,14336,"}e"],[1,14343,"Sy"],[-1,14346,"Sy"],[1,14393,"]("],[-1,14396,"\n\n"]],[14397,14397],[8461,8461]]],[1567332315536,["GJX@GJXAIOU",[[1,10538,"shilk"]],[10538,10538],[10543,10543]]],[1567332316731,["GJX@GJXAIOU",[[-1,10538,"shilk"]],[10543,10543],[10538,10538]]],[1567332319454,["GJX@GJXAIOU",[[1,10538,"实例名 "]],[10538,10538],[10541,10541]]],[1567332321266,["GJX@GJXAIOU",[[-1,10541," "]],[10542,10542],[10541,10541]]],[1567332325517,["GJX@GJXAIOU",[[1,10558,"·"]],[10558,10558],[10559,10559]]],[1567332327156,["GJX@GJXAIOU",[[-1,10558,"·"]],[10559,10559],[10558,10558]]],[1567332328534,["GJX@GJXAIOU",[[1,10558,"`"]],[10558,10558],[10559,10559]]],[1567332329901,["GJX@GJXAIOU",[[1,10562,"`"]],[10562,10562],[10563,10563]]],[1567332334773,["GJX@GJXAIOU",[[1,10775,"`"]],[10775,10775],[10776,10776]]],[1567332336063,["GJX@GJXAIOU",[[1,10782,"`"]],[10782,10782],[10783,10783]]],[1567332345310,["GJX@GJXAIOU",[[1,10806,"`"]],[10806,10806],[10807,10807]]],[1567332346735,["GJX@GJXAIOU",[[1,10813,"`"]],[10813,10813],[10814,10814]]],[1567332349723,["GJX@GJXAIOU",[[1,10834," "]],[10834,10834],[10835,10835]]],[1567332355863,["GJX@GJXAIOU",[[1,11064,"`"]],[11064,11064],[11065,11065]]],[1567332358424,["GJX@GJXAIOU",[[1,11068,"`"]],[11068,11068],[11069,11069]]],[1567332359820,["GJX@GJXAIOU",[[1,11084,"`"]],[11084,11084],[11085,11085]]],[1567332360758,["GJX@GJXAIOU",[[1,11090,"`"]],[11090,11090],[11091,11091]]],[1567332427002,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,10337," "],[-1,10338," "],[-1,10344,"语"],[1,10346,"语"],[-1,10537,"M"],[1,10541,"M"],[-1,10557,"#"],[1,10559,"#"],[-1,10561,"获"],[1,10563,"获"],[-1,10579,"p"],[1,10581,"p"],[-1,10593," "],[1,10595," "],[-1,10609,"#"],[1,10611,"#"],[-1,10613,"获"],[1,10617,"获"],[-1,10643,"#"],[1,10645,"#"],[-1,10648,"表"],[1,10650,"表"],[-1,10670,"#"],[1,10672,"#"],[-1,10680,"第"],[1,10682,"第"],[-1,10774,"#"],[1,10776,"#"],[-1,10781,"\n"],[1,10783,"\n"],[-1,10805,"#"],[1,10807,"#"],[-1,10812," "],[1,10814," "],[-1,10833,"m"],[1,10835,"m"],[-1,11063,"$"],[1,11065,"$"],[-1,11067," "],[1,11069," "],[-1,11083,"$"],[1,11085,"$"],[-1,11089,"内"],[1,11091,"内"],[1,12492,"a"],[-1,12493,"`"],[1,12560,"\n`"],[-1,12563,"\n3"],[1,12566," m"],[-1,12585,"\n!"],[-1,12724,"["],[1,12725,"\n"],[1,12731,"My"],[-1,12736,"**"],[1,12738," 实"],[1,12741," "],[-1,12743," 1."],[1,12748,"概念"],[-1,12750,"\n\n"],[-1,12767,"1"],[1,12768,"\n"],[1,12772,"功能"],[-1,12792,"\n\n"],[1,12799,"业务"],[-1,12826,"\n\n"],[1,12832,"事务"],[-1,12867,"\n1"],[1,12875,"事务"],[-1,12923,"2."],[1,12926," 在"],[-1,12956,"\n2"],[1,12963,"每一"],[-1,12989,"\n2"],[1,12996,"可以"],[-1,13020,"\n2"],[1,13026,"也可"],[-1,13077,"\n3"],[1,13081,"my"],[-1,13102,"\n3"],[1,13108,"JD"],[-1,13165,"\n3"],[1,13171,"应为"],[-1,13244,"4."],[1,13247," 在"],[-1,13294,"\n\n"],[1,13296,"Tr"],[-1,13335,"\n4"],[1,13341,"如果"],[-1,13374,"5."],[1,13378,"实现"],[-1,13384,"\n5"],[1,13389," 在"],[-1,13426,"\n5"],[1,13432,"通过"],[-1,13456,"\n!"],[-1,13585,"["],[1,13586,"\n"],[-1,13721,"八*"],[1,13723,"\n\n"],[1,13729,"My"],[-1,13734,"**"],[1,13736," 实"],[-1,13741,"1."],[1,13744," 在"],[-1,13771,"\n2"],[1,13890,"编写"],[-1,13893,"\n!"],[-1,14103,"[*"],[1,14105,"\n\n"],[1,14108,"my"],[-1,14113,"**"],[1,14115," 实"],[-1,14120,"1."],[1,14123," 在"],[-1,14149,"\n2"],[1,14252,"编写"],[-1,14255,"\n!"],[1,14265," i"],[-1,14318,"Sy"],[1,14323,"Sy"],[-1,14347,"]("],[1,14349,"}e"],[-1,14354,"Sy"],[1,14359,"Sy"],[-1,14404,"]("],[1,14409,"\n\n"]],[8461,8461],[14411,14411]]],[1567332427002,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,10338," "],[1,10340," "],[1,10345,"语"],[-1,10346,"语"],[1,10538,"M"],[-1,10541,"M"],[1,10558,"#"],[-1,10559,"#"],[1,10562,"获"],[-1,10563,"获"],[1,10580,"p"],[-1,10581,"p"],[1,10594," "],[-1,10595," "],[1,10610,"#"],[-1,10611,"#"],[1,10614,"获"],[-1,10617,"获"],[1,10644,"#"],[-1,10645,"#"],[1,10649,"表"],[-1,10650,"表"],[1,10671,"#"],[-1,10672,"#"],[1,10681,"第"],[-1,10682,"第"],[1,10775,"#"],[-1,10776,"#"],[1,10782,"\n"],[-1,10783,"\n"],[1,10806,"#"],[-1,10807,"#"],[1,10813," "],[-1,10814," "],[1,10834,"m"],[-1,10835,"m"],[1,11064,"$"],[-1,11065,"$"],[1,11068," "],[-1,11069," "],[1,11084,"$"],[-1,11085,"$"],[1,11090,"内"],[-1,11091,"内"],[-1,12493,"a"],[1,12495,"`"],[-1,12561,"\n`"],[1,12566,"\n3"],[-1,12567," m"],[1,12588,"\n!"],[1,12725,"["],[-1,12725,"\n"],[-1,12732,"My"],[1,12739,"**"],[-1,12739," 实"],[-1,12744," "],[1,12747," 1."],[-1,12749,"概念"],[1,12753,"\n\n"],[1,12768,"1"],[-1,12768,"\n"],[-1,12773,"功能"],[1,12795,"\n\n"],[-1,12800,"业务"],[1,12829,"\n\n"],[-1,12833,"事务"],[1,12870,"\n1"],[-1,12876,"事务"],[1,12926,"2."],[-1,12927," 在"],[1,12959,"\n2"],[-1,12964,"每一"],[1,12992,"\n2"],[-1,12997,"可以"],[1,13023,"\n2"],[-1,13027,"也可"],[1,13080,"\n3"],[-1,13082,"my"],[1,13105,"\n3"],[-1,13109,"JD"],[1,13168,"\n3"],[-1,13172,"应为"],[1,13247,"4."],[-1,13248," 在"],[1,13297,"\n\n"],[-1,13297,"Tr"],[1,13338,"\n4"],[-1,13342,"如果"],[1,13377,"5."],[-1,13379,"实现"],[1,13387,"\n5"],[-1,13390," 在"],[1,13429,"\n5"],[-1,13433,"通过"],[1,13459,"\n!"],[1,13586,"["],[-1,13586,"\n"],[1,13722,"八*"],[-1,13722,"\n\n"],[-1,13730,"My"],[1,13737,"**"],[-1,13737," 实"],[1,13744,"1."],[-1,13745," 在"],[1,13774,"\n2"],[-1,13891,"编写"],[1,13896,"\n!"],[1,14104,"[*"],[-1,14104,"\n\n"],[-1,14109,"my"],[1,14116,"**"],[-1,14116," 实"],[1,14123,"1."],[-1,14124," 在"],[1,14152,"\n2"],[-1,14253,"编写"],[1,14258,"\n!"],[-1,14266," i"],[1,14321,"Sy"],[-1,14324,"Sy"],[1,14350,"]("],[-1,14350,"}e"],[1,14357,"Sy"],[-1,14360,"Sy"],[1,14407,"]("],[-1,14410,"\n\n"]],[14411,14411],[8461,8461]]],[1567332381133,["GJX@GJXAIOU",[[1,11533,"zh"]],[11533,11533],[11535,11535]]],[1567332381173,["GJX@GJXAIOU",[[-1,11534,"h"],[1,11535," "]],[11535,11535],[11534,11534]]],[1567332381517,["GJX@GJXAIOU",[[1,11534,"ong"]],[11534,11534],[11537,11537]]],[1567332381613,["GJX@GJXAIOU",[[-1,11534,"ong"],[1,11537,"h"]],[11537,11537],[11535,11535]]],[1567332381784,["GJX@GJXAIOU",[[1,11536," "]],[11535,11535],[11536,11536]]],[1567332382655,["GJX@GJXAIOU",[[-1,11533,"zh "]],[11536,11536],[11533,11533]]],[1567332383988,["GJX@GJXAIOU",[[1,11533,"中"]],[11533,11533],[11534,11534]]],[1567333447017,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,10337," "],[-1,10338," "],[-1,10344,"语"],[1,10346,"语"],[-1,10537,"M"],[1,10541,"M"],[-1,10557,"#"],[1,10559,"#"],[-1,10561,"获"],[1,10563,"获"],[-1,10579,"p"],[1,10581,"p"],[-1,10593," "],[1,10595," "],[-1,10609,"#"],[1,10611,"#"],[-1,10613,"获"],[1,10617,"获"],[-1,10643,"#"],[1,10645,"#"],[-1,10648,"表"],[1,10650,"表"],[-1,10670,"#"],[1,10672,"#"],[-1,10680,"第"],[1,10682,"第"],[-1,10774,"#"],[1,10776,"#"],[-1,10781,"\n"],[1,10783,"\n"],[-1,10805,"#"],[1,10807,"#"],[-1,10812," "],[1,10814," "],[-1,10833,"m"],[1,10835,"m"],[-1,11063,"$"],[1,11065,"$"],[-1,11067," "],[1,11069," "],[-1,11083,"$"],[1,11085,"$"],[-1,11089,"内"],[1,11091,"内"],[-1,11532,"不"],[1,11535,"不"],[1,12494,"a"],[-1,12495,"`"],[1,12562,"\n`"],[-1,12565,"\n3"],[1,12568," m"],[-1,12587,"\n!"],[-1,12726,"["],[1,12727,"\n"],[1,12733,"My"],[-1,12738,"**"],[1,12740," 实"],[1,12743," "],[-1,12745," 1."],[1,12750,"概念"],[-1,12752,"\n\n"],[-1,12769,"1"],[1,12770,"\n"],[1,12774,"功能"],[-1,12794,"\n\n"],[1,12801,"业务"],[-1,12828,"\n\n"],[1,12834,"事务"],[-1,12869,"\n1"],[1,12877,"事务"],[-1,12925,"2."],[1,12928," 在"],[-1,12958,"\n2"],[1,12965,"每一"],[-1,12991,"\n2"],[1,12998,"可以"],[-1,13022,"\n2"],[1,13028,"也可"],[-1,13079,"\n3"],[1,13083,"my"],[-1,13104,"\n3"],[1,13110,"JD"],[-1,13167,"\n3"],[1,13173,"应为"],[-1,13246,"4."],[1,13249," 在"],[-1,13296,"\n\n"],[1,13298,"Tr"],[-1,13337,"\n4"],[1,13343,"如果"],[-1,13376,"5."],[1,13380,"实现"],[-1,13386,"\n5"],[1,13391," 在"],[-1,13428,"\n5"],[1,13434,"通过"],[-1,13458,"\n!"],[-1,13587,"["],[1,13588,"\n"],[-1,13723,"八*"],[1,13725,"\n\n"],[1,13731,"My"],[-1,13736,"**"],[1,13738," 实"],[-1,13743,"1."],[1,13746," 在"],[-1,13773,"\n2"],[1,13892,"编写"],[-1,13895,"\n!"],[-1,14105,"[*"],[1,14107,"\n\n"],[1,14110,"my"],[-1,14115,"**"],[1,14117," 实"],[-1,14122,"1."],[1,14125," 在"],[-1,14151,"\n2"],[1,14254,"编写"],[-1,14257,"\n!"],[1,14267," i"],[-1,14320,"Sy"],[1,14325,"Sy"],[-1,14349,"]("],[1,14351,"}e"],[-1,14356,"Sy"],[1,14361,"Sy"],[-1,14406,"]("],[1,14411,"\n\n"]],[8461,8461],[14413,14413]]],[1567333447017,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,10338," "],[1,10340," "],[1,10345,"语"],[-1,10346,"语"],[1,10538,"M"],[-1,10541,"M"],[1,10558,"#"],[-1,10559,"#"],[1,10562,"获"],[-1,10563,"获"],[1,10580,"p"],[-1,10581,"p"],[1,10594," "],[-1,10595," "],[1,10610,"#"],[-1,10611,"#"],[1,10614,"获"],[-1,10617,"获"],[1,10644,"#"],[-1,10645,"#"],[1,10649,"表"],[-1,10650,"表"],[1,10671,"#"],[-1,10672,"#"],[1,10681,"第"],[-1,10682,"第"],[1,10775,"#"],[-1,10776,"#"],[1,10782,"\n"],[-1,10783,"\n"],[1,10806,"#"],[-1,10807,"#"],[1,10813," "],[-1,10814," "],[1,10834,"m"],[-1,10835,"m"],[1,11064,"$"],[-1,11065,"$"],[1,11068," "],[-1,11069," "],[1,11084,"$"],[-1,11085,"$"],[1,11090,"内"],[-1,11091,"内"],[1,11533,"不"],[-1,11535,"不"],[-1,12495,"a"],[1,12497,"`"],[-1,12563,"\n`"],[1,12568,"\n3"],[-1,12569," m"],[1,12590,"\n!"],[1,12727,"["],[-1,12727,"\n"],[-1,12734,"My"],[1,12741,"**"],[-1,12741," 实"],[-1,12746," "],[1,12749," 1."],[-1,12751,"概念"],[1,12755,"\n\n"],[1,12770,"1"],[-1,12770,"\n"],[-1,12775,"功能"],[1,12797,"\n\n"],[-1,12802,"业务"],[1,12831,"\n\n"],[-1,12835,"事务"],[1,12872,"\n1"],[-1,12878,"事务"],[1,12928,"2."],[-1,12929," 在"],[1,12961,"\n2"],[-1,12966,"每一"],[1,12994,"\n2"],[-1,12999,"可以"],[1,13025,"\n2"],[-1,13029,"也可"],[1,13082,"\n3"],[-1,13084,"my"],[1,13107,"\n3"],[-1,13111,"JD"],[1,13170,"\n3"],[-1,13174,"应为"],[1,13249,"4."],[-1,13250," 在"],[1,13299,"\n\n"],[-1,13299,"Tr"],[1,13340,"\n4"],[-1,13344,"如果"],[1,13379,"5."],[-1,13381,"实现"],[1,13389,"\n5"],[-1,13392," 在"],[1,13431,"\n5"],[-1,13435,"通过"],[1,13461,"\n!"],[1,13588,"["],[-1,13588,"\n"],[1,13724,"八*"],[-1,13724,"\n\n"],[-1,13732,"My"],[1,13739,"**"],[-1,13739," 实"],[1,13746,"1."],[-1,13747," 在"],[1,13776,"\n2"],[-1,13893,"编写"],[1,13898,"\n!"],[1,14106,"[*"],[-1,14106,"\n\n"],[-1,14111,"my"],[1,14118,"**"],[-1,14118," 实"],[1,14125,"1."],[-1,14126," 在"],[1,14154,"\n2"],[-1,14255,"编写"],[1,14260,"\n!"],[-1,14268," i"],[1,14323,"Sy"],[-1,14326,"Sy"],[1,14352,"]("],[-1,14352,"}e"],[1,14359,"Sy"],[-1,14362,"Sy"],[1,14409,"]("],[-1,14412,"\n\n"]],[14413,14413],[8461,8461]]],[1567333397126,["GJX@GJXAIOU",[[1,13183," "]],[13183,13183],[13184,13184]]],[1567333398939,["GJX@GJXAIOU",[[1,13193,"·"]],[13193,13193],[13194,13194]]],[1567333400407,["GJX@GJXAIOU",[[-1,13193,"·"]],[13194,13194],[13193,13193]]],[1567333401142,["GJX@GJXAIOU",[[1,13193,"`"]],[13193,13193],[13194,13194]]],[1567333418060,["GJX@GJXAIOU",[[1,13220,"` "]],[13220,13220],[13222,13222]]],[1567333419677,["GJX@GJXAIOU",[[1,13193," "]],[13193,13193],[13194,13194]]],[1567333428292,["GJX@GJXAIOU",[[1,13241," "]],[13241,13241],[13242,13242]]],[1567333431968,["GJX@GJXAIOU",[[-1,13240,", "]],[13242,13242],[13240,13240]]],[1567333432955,["GJX@GJXAIOU",[[1,13240,","]],[13240,13240],[13241,13241]]],[1567333433848,["GJX@GJXAIOU",[[-1,13240,","]],[13241,13241],[13240,13240]]],[1567333434433,["GJX@GJXAIOU",[[1,13240,"，"]],[13240,13240],[13241,13241]]],[1567333439883,["GJX@GJXAIOU",[[1,13227," "]],[13227,13227],[13228,13228]]],[1567333507014,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,10337," "],[-1,10338," "],[-1,10344,"语"],[1,10346,"语"],[-1,10537,"M"],[1,10541,"M"],[-1,10557,"#"],[1,10559,"#"],[-1,10561,"获"],[1,10563,"获"],[-1,10579,"p"],[1,10581,"p"],[-1,10593," "],[1,10595," "],[-1,10609,"#"],[1,10611,"#"],[-1,10613,"获"],[1,10617,"获"],[-1,10643,"#"],[1,10645,"#"],[-1,10648,"表"],[1,10650,"表"],[-1,10670,"#"],[1,10672,"#"],[-1,10680,"第"],[1,10682,"第"],[-1,10774,"#"],[1,10776,"#"],[-1,10781,"\n"],[1,10783,"\n"],[-1,10805,"#"],[1,10807,"#"],[-1,10812," "],[1,10814," "],[-1,10833,"m"],[1,10835,"m"],[-1,11063,"$"],[1,11065,"$"],[-1,11067," "],[1,11069," "],[-1,11083,"$"],[1,11085,"$"],[-1,11089,"内"],[1,11091,"内"],[-1,11532,"不"],[1,11535,"不"],[1,12494,"a"],[-1,12495,"`"],[1,12562,"\n`"],[-1,12565,"\n3"],[1,12568," m"],[-1,12587,"\n!"],[-1,12726,"["],[1,12727,"\n"],[1,12733,"My"],[-1,12738,"**"],[1,12740," 实"],[1,12743," "],[-1,12745," 1."],[1,12750,"概念"],[-1,12752,"\n\n"],[-1,12769,"1"],[1,12770,"\n"],[1,12774,"功能"],[-1,12795,"\n\n"],[1,12801,"业务"],[-1,12827,"\n\n"],[1,12834,"事务"],[-1,12869,"\n1"],[1,12877,"事务"],[-1,12925,"2."],[1,12928," 在"],[-1,12958,"\n2"],[1,12965,"每一"],[-1,12991,"\n2"],[1,12998,"可以"],[-1,13022,"\n2"],[1,13028,"也可"],[-1,13079,"\n3"],[1,13083,"my"],[-1,13104,"\n3"],[1,13110,"JD"],[-1,13167,"\n3"],[1,13173,"应为"],[1,13180," "],[-1,13183," "],[1,13190," `"],[-1,13193," `"],[1,13218,"` "],[-1,13221,"` 有"],[1,13224,"有 "],[-1,13227," "],[-1,13238,",认为，"],[1,13242,"，认为返"],[-1,13252,"4."],[1,13255," 在"],[-1,13302,"\n\n"],[1,13304,"Tr"],[-1,13343,"\n4"],[1,13349,"如果"],[-1,13382,"5."],[1,13386,"实现"],[-1,13392,"\n5"],[1,13397," 在"],[-1,13434,"\n5"],[1,13440,"通过"],[-1,13464,"\n!"],[-1,13593,"["],[1,13594,"\n"],[-1,13729,"八*"],[1,13731,"\n\n"],[1,13737,"My"],[-1,13742,"**"],[1,13744," 实"],[-1,13749,"1."],[1,13752," 在"],[-1,13779,"\n2"],[1,13898,"编写"],[-1,13901,"\n!"],[-1,14111,"[*"],[1,14113,"\n\n"],[1,14116,"my"],[-1,14121,"**"],[1,14123," 实"],[-1,14128,"1."],[1,14131," 在"],[-1,14157,"\n2"],[1,14260,"编写"],[-1,14263,"\n!"],[1,14273," i"],[-1,14326,"Sy"],[1,14331,"Sy"],[-1,14355,"]("],[1,14357,"}e"],[-1,14362,"Sy"],[1,14367,"Sy"],[-1,14412,"]("],[1,14417,"\n\n"]],[8461,8461],[14419,14419]]],[1567333507014,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,10338," "],[1,10340," "],[1,10345,"语"],[-1,10346,"语"],[1,10538,"M"],[-1,10541,"M"],[1,10558,"#"],[-1,10559,"#"],[1,10562,"获"],[-1,10563,"获"],[1,10580,"p"],[-1,10581,"p"],[1,10594," "],[-1,10595," "],[1,10610,"#"],[-1,10611,"#"],[1,10614,"获"],[-1,10617,"获"],[1,10644,"#"],[-1,10645,"#"],[1,10649,"表"],[-1,10650,"表"],[1,10671,"#"],[-1,10672,"#"],[1,10681,"第"],[-1,10682,"第"],[1,10775,"#"],[-1,10776,"#"],[1,10782,"\n"],[-1,10783,"\n"],[1,10806,"#"],[-1,10807,"#"],[1,10813," "],[-1,10814," "],[1,10834,"m"],[-1,10835,"m"],[1,11064,"$"],[-1,11065,"$"],[1,11068," "],[-1,11069," "],[1,11084,"$"],[-1,11085,"$"],[1,11090,"内"],[-1,11091,"内"],[1,11533,"不"],[-1,11535,"不"],[-1,12495,"a"],[1,12497,"`"],[-1,12563,"\n`"],[1,12568,"\n3"],[-1,12569," m"],[1,12590,"\n!"],[1,12727,"["],[-1,12727,"\n"],[-1,12734,"My"],[1,12741,"**"],[-1,12741," 实"],[-1,12746," "],[1,12749," 1."],[-1,12751,"概念"],[1,12755,"\n\n"],[1,12770,"1"],[-1,12770,"\n"],[-1,12775,"功能"],[1,12798,"\n\n"],[-1,12802,"业务"],[1,12830,"\n\n"],[-1,12835,"事务"],[1,12872,"\n1"],[-1,12878,"事务"],[1,12928,"2."],[-1,12929," 在"],[1,12961,"\n2"],[-1,12966,"每一"],[1,12994,"\n2"],[-1,12999,"可以"],[1,13025,"\n2"],[-1,13029,"也可"],[1,13082,"\n3"],[-1,13084,"my"],[1,13107,"\n3"],[-1,13111,"JD"],[1,13170,"\n3"],[-1,13174,"应为"],[-1,13183," "],[1,13187," "],[-1,13193," `"],[1,13198," `"],[-1,13221,"` "],[1,13226,"` 有"],[-1,13226,"有 "],[1,13231," "],[1,13241,",认为，"],[-1,13241,"，认为返"],[1,13255,"4."],[-1,13256," 在"],[1,13305,"\n\n"],[-1,13305,"Tr"],[1,13346,"\n4"],[-1,13350,"如果"],[1,13385,"5."],[-1,13387,"实现"],[1,13395,"\n5"],[-1,13398," 在"],[1,13437,"\n5"],[-1,13441,"通过"],[1,13467,"\n!"],[1,13594,"["],[-1,13594,"\n"],[1,13730,"八*"],[-1,13730,"\n\n"],[-1,13738,"My"],[1,13745,"**"],[-1,13745," 实"],[1,13752,"1."],[-1,13753," 在"],[1,13782,"\n2"],[-1,13899,"编写"],[1,13904,"\n!"],[1,14112,"[*"],[-1,14112,"\n\n"],[-1,14117,"my"],[1,14124,"**"],[-1,14124," 实"],[1,14131,"1."],[-1,14132," 在"],[1,14160,"\n2"],[-1,14261,"编写"],[1,14266,"\n!"],[-1,14274," i"],[1,14329,"Sy"],[-1,14332,"Sy"],[1,14358,"]("],[-1,14358,"}e"],[1,14365,"Sy"],[-1,14368,"Sy"],[1,14415,"]("],[-1,14418,"\n\n"]],[14419,14419],[8461,8461]]],[1567333478646,["GJX@GJXAIOU",[[1,13253,"。"]],[13253,13253],[13254,13254]]],[1567333567021,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,10337," "],[-1,10338," "],[-1,10344,"语"],[1,10346,"语"],[-1,10537,"M"],[1,10541,"M"],[-1,10557,"#"],[1,10559,"#"],[-1,10561,"获"],[1,10563,"获"],[-1,10579,"p"],[1,10581,"p"],[-1,10593," "],[1,10595," "],[-1,10609,"#"],[1,10611,"#"],[-1,10613,"获"],[1,10617,"获"],[-1,10643,"#"],[1,10645,"#"],[-1,10648,"表"],[1,10650,"表"],[-1,10670,"#"],[1,10672,"#"],[-1,10680,"第"],[1,10682,"第"],[-1,10774,"#"],[1,10776,"#"],[-1,10781,"\n"],[1,10783,"\n"],[-1,10805,"#"],[1,10807,"#"],[-1,10812," "],[1,10814," "],[-1,10833,"m"],[1,10835,"m"],[-1,11063,"$"],[1,11065,"$"],[-1,11067," "],[1,11069," "],[-1,11083,"$"],[1,11085,"$"],[-1,11089,"内"],[1,11091,"内"],[-1,11532,"不"],[1,11535,"不"],[1,12494,"a"],[-1,12495,"`"],[1,12562,"\n`"],[-1,12565,"\n3"],[1,12568," m"],[-1,12587,"\n!"],[-1,12726,"["],[1,12727,"\n"],[1,12733,"My"],[-1,12738,"**"],[1,12740," 实"],[1,12743," "],[-1,12745," 1."],[1,12750,"概念"],[-1,12752,"\n\n"],[-1,12769,"1"],[1,12770,"\n"],[1,12774,"功能"],[-1,12795,"\n\n"],[1,12801,"业务"],[-1,12827,"\n\n"],[1,12834,"事务"],[-1,12869,"\n1"],[1,12877,"事务"],[-1,12925,"2."],[1,12928," 在"],[-1,12958,"\n2"],[1,12965,"每一"],[-1,12991,"\n2"],[1,12998,"可以"],[-1,13022,"\n2"],[1,13028,"也可"],[-1,13079,"\n3"],[1,13083,"my"],[-1,13104,"\n3"],[1,13110,"JD"],[-1,13167,"\n3"],[1,13173,"应为"],[1,13180," "],[-1,13183," "],[1,13190," `"],[-1,13193," `"],[1,13218,"` "],[-1,13221,"` "],[1,13224," "],[-1,13227," "],[-1,13238,",认为，"],[1,13242,"，认为返"],[1,13250,"。"],[-1,13252,"4。."],[1,13256," 在"],[-1,13303,"\n\n"],[1,13305,"Tr"],[-1,13344,"\n4"],[1,13350,"如果"],[-1,13383,"5."],[1,13387,"实现"],[-1,13393,"\n5"],[1,13398," 在"],[-1,13435,"\n5"],[1,13441,"通过"],[-1,13465,"\n!"],[-1,13594,"["],[1,13595,"\n"],[-1,13730,"八*"],[1,13732,"\n\n"],[1,13738,"My"],[-1,13743,"**"],[1,13745," 实"],[-1,13750,"1."],[1,13753," 在"],[-1,13780,"\n2"],[1,13899,"编写"],[-1,13902,"\n!"],[-1,14112,"[*"],[1,14114,"\n\n"],[1,14117,"my"],[-1,14122,"**"],[1,14124," 实"],[-1,14129,"1."],[1,14132," 在"],[-1,14158,"\n2"],[1,14261,"编写"],[-1,14264,"\n!"],[1,14274," i"],[-1,14327,"Sy"],[1,14332,"Sy"],[-1,14356,"]("],[1,14358,"}e"],[-1,14363,"Sy"],[1,14368,"Sy"],[-1,14413,"]("],[1,14418,"\n\n"]],[8461,8461],[14420,14420]]],[1567333567021,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,10338," "],[1,10340," "],[1,10345,"语"],[-1,10346,"语"],[1,10538,"M"],[-1,10541,"M"],[1,10558,"#"],[-1,10559,"#"],[1,10562,"获"],[-1,10563,"获"],[1,10580,"p"],[-1,10581,"p"],[1,10594," "],[-1,10595," "],[1,10610,"#"],[-1,10611,"#"],[1,10614,"获"],[-1,10617,"获"],[1,10644,"#"],[-1,10645,"#"],[1,10649,"表"],[-1,10650,"表"],[1,10671,"#"],[-1,10672,"#"],[1,10681,"第"],[-1,10682,"第"],[1,10775,"#"],[-1,10776,"#"],[1,10782,"\n"],[-1,10783,"\n"],[1,10806,"#"],[-1,10807,"#"],[1,10813," "],[-1,10814," "],[1,10834,"m"],[-1,10835,"m"],[1,11064,"$"],[-1,11065,"$"],[1,11068," "],[-1,11069," "],[1,11084,"$"],[-1,11085,"$"],[1,11090,"内"],[-1,11091,"内"],[1,11533,"不"],[-1,11535,"不"],[-1,12495,"a"],[1,12497,"`"],[-1,12563,"\n`"],[1,12568,"\n3"],[-1,12569," m"],[1,12590,"\n!"],[1,12727,"["],[-1,12727,"\n"],[-1,12734,"My"],[1,12741,"**"],[-1,12741," 实"],[-1,12746," "],[1,12749," 1."],[-1,12751,"概念"],[1,12755,"\n\n"],[1,12770,"1"],[-1,12770,"\n"],[-1,12775,"功能"],[1,12798,"\n\n"],[-1,12802,"业务"],[1,12830,"\n\n"],[-1,12835,"事务"],[1,12872,"\n1"],[-1,12878,"事务"],[1,12928,"2."],[-1,12929," 在"],[1,12961,"\n2"],[-1,12966,"每一"],[1,12994,"\n2"],[-1,12999,"可以"],[1,13025,"\n2"],[-1,13029,"也可"],[1,13082,"\n3"],[-1,13084,"my"],[1,13107,"\n3"],[-1,13111,"JD"],[1,13170,"\n3"],[-1,13174,"应为"],[-1,13183," "],[1,13187," "],[-1,13193," `"],[1,13198," `"],[-1,13221,"` "],[1,13226,"` "],[-1,13227," "],[1,13231," "],[1,13241,",认为，"],[-1,13241,"，认为返"],[-1,13253,"。"],[1,13256,"4。."],[-1,13257," 在"],[1,13306,"\n\n"],[-1,13306,"Tr"],[1,13347,"\n4"],[-1,13351,"如果"],[1,13386,"5."],[-1,13388,"实现"],[1,13396,"\n5"],[-1,13399," 在"],[1,13438,"\n5"],[-1,13442,"通过"],[1,13468,"\n!"],[1,13595,"["],[-1,13595,"\n"],[1,13731,"八*"],[-1,13731,"\n\n"],[-1,13739,"My"],[1,13746,"**"],[-1,13746," 实"],[1,13753,"1."],[-1,13754," 在"],[1,13783,"\n2"],[-1,13900,"编写"],[1,13905,"\n!"],[1,14113,"[*"],[-1,14113,"\n\n"],[-1,14118,"my"],[1,14125,"**"],[-1,14125," 实"],[1,14132,"1."],[-1,14133," 在"],[1,14161,"\n2"],[-1,14262,"编写"],[1,14267,"\n!"],[-1,14275," i"],[1,14330,"Sy"],[-1,14333,"Sy"],[1,14359,"]("],[-1,14359,"}e"],[1,14366,"Sy"],[-1,14369,"Sy"],[1,14416,"]("],[-1,14419,"\n\n"]],[14420,14420],[8461,8461]]],[1567333511604,["GJX@GJXAIOU",[[1,13306," "]],[13306,13306],[13307,13307]]],[1567333687020,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,10337," "],[-1,10338," "],[-1,10344,"语"],[1,10346,"语"],[-1,10537,"M"],[1,10541,"M"],[-1,10557,"#"],[1,10559,"#"],[-1,10561,"获"],[1,10563,"获"],[-1,10579,"p"],[1,10581,"p"],[-1,10593," "],[1,10595," "],[-1,10609,"#"],[1,10611,"#"],[-1,10613,"获"],[1,10617,"获"],[-1,10643,"#"],[1,10645,"#"],[-1,10648,"表"],[1,10650,"表"],[-1,10670,"#"],[1,10672,"#"],[-1,10680,"第"],[1,10682,"第"],[-1,10774,"#"],[1,10776,"#"],[-1,10781,"\n"],[1,10783,"\n"],[-1,10805,"#"],[1,10807,"#"],[-1,10812," "],[1,10814," "],[-1,10833,"m"],[1,10835,"m"],[-1,11063,"$"],[1,11065,"$"],[-1,11067," "],[1,11069," "],[-1,11083,"$"],[1,11085,"$"],[-1,11089,"内"],[1,11091,"内"],[-1,11532,"不"],[1,11535,"不"],[1,12494,"a"],[-1,12495,"`"],[1,12562,"\n`"],[-1,12565,"\n3"],[1,12568," m"],[-1,12587,"\n!"],[-1,12726,"["],[1,12727,"\n"],[1,12733,"My"],[-1,12738,"**"],[1,12740," 实"],[1,12743," "],[-1,12745," 1."],[1,12750,"概念"],[-1,12752,"\n\n"],[-1,12769,"1"],[1,12770,"\n"],[1,12774,"功能"],[-1,12795,"\n\n"],[1,12801,"业务"],[-1,12828,"\n\n"],[1,12834,"事务"],[-1,12869,"\n1"],[1,12877,"事务"],[-1,12925,"2."],[1,12929,"在 "],[-1,12958,"\n2"],[1,12965,"每一"],[-1,12991,"\n2"],[1,12998,"可以"],[-1,13022,"\n2"],[1,13028,"也可"],[-1,13079,"\n3"],[1,13083,"my"],[-1,13104,"\n3"],[1,13110,"JD"],[-1,13167,"\n3"],[1,13173,"应为"],[1,13180," "],[-1,13183," "],[1,13190," `"],[-1,13193," `"],[1,13218,"` "],[-1,13221,"` 有"],[1,13224,"有 "],[-1,13227," "],[-1,13238,",认为，"],[1,13242,"，认为返"],[1,13250,"。"],[-1,13252,"4。."],[1,13257,"在 "],[-1,13303,"\n\na "],[1,13307," Tra"],[-1,13345,"\n4"],[1,13351,"如果"],[-1,13384,"5."],[1,13388,"实现"],[-1,13394,"\n5"],[1,13399," 在"],[-1,13436,"\n5"],[1,13442,"通过"],[-1,13466,"\n!"],[-1,13595,"["],[1,13596,"\n"],[-1,13731,"八*"],[1,13733,"\n\n"],[1,13739,"My"],[-1,13744,"**"],[1,13746," 实"],[-1,13751,"1."],[1,13754," 在"],[-1,13781,"\n2"],[1,13900,"编写"],[-1,13903,"\n!"],[-1,14113,"[*"],[1,14115,"\n\n"],[1,14118,"my"],[-1,14123,"**"],[1,14125," 实"],[-1,14130,"1."],[1,14133," 在"],[-1,14159,"\n2"],[1,14262,"编写"],[-1,14265,"\n!"],[1,14275," i"],[-1,14328,"Sy"],[1,14333,"Sy"],[-1,14357,"]("],[1,14359,"}e"],[-1,14364,"Sy"],[1,14369,"Sy"],[-1,14414,"]("],[1,14419,"\n\n"]],[8461,8461],[14421,14421]]],[1567333687020,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,10338," "],[1,10340," "],[1,10345,"语"],[-1,10346,"语"],[1,10538,"M"],[-1,10541,"M"],[1,10558,"#"],[-1,10559,"#"],[1,10562,"获"],[-1,10563,"获"],[1,10580,"p"],[-1,10581,"p"],[1,10594," "],[-1,10595," "],[1,10610,"#"],[-1,10611,"#"],[1,10614,"获"],[-1,10617,"获"],[1,10644,"#"],[-1,10645,"#"],[1,10649,"表"],[-1,10650,"表"],[1,10671,"#"],[-1,10672,"#"],[1,10681,"第"],[-1,10682,"第"],[1,10775,"#"],[-1,10776,"#"],[1,10782,"\n"],[-1,10783,"\n"],[1,10806,"#"],[-1,10807,"#"],[1,10813," "],[-1,10814," "],[1,10834,"m"],[-1,10835,"m"],[1,11064,"$"],[-1,11065,"$"],[1,11068," "],[-1,11069," "],[1,11084,"$"],[-1,11085,"$"],[1,11090,"内"],[-1,11091,"内"],[1,11533,"不"],[-1,11535,"不"],[-1,12495,"a"],[1,12497,"`"],[-1,12563,"\n`"],[1,12568,"\n3"],[-1,12569," m"],[1,12590,"\n!"],[1,12727,"["],[-1,12727,"\n"],[-1,12734,"My"],[1,12741,"**"],[-1,12741," 实"],[-1,12746," "],[1,12749," 1."],[-1,12751,"概念"],[1,12755,"\n\n"],[1,12770,"1"],[-1,12770,"\n"],[-1,12775,"功能"],[1,12798,"\n\n"],[-1,12802,"业务"],[1,12831,"\n\n"],[-1,12835,"事务"],[1,12872,"\n1"],[-1,12878,"事务"],[1,12928,"2."],[-1,12930,"在 "],[1,12961,"\n2"],[-1,12966,"每一"],[1,12994,"\n2"],[-1,12999,"可以"],[1,13025,"\n2"],[-1,13029,"也可"],[1,13082,"\n3"],[-1,13084,"my"],[1,13107,"\n3"],[-1,13111,"JD"],[1,13170,"\n3"],[-1,13174,"应为"],[-1,13183," "],[1,13187," "],[-1,13193," `"],[1,13198," `"],[-1,13221,"` "],[1,13226,"` 有"],[-1,13226,"有 "],[1,13231," "],[1,13241,",认为，"],[-1,13241,"，认为返"],[-1,13253,"。"],[1,13256,"4。."],[-1,13258,"在 "],[1,13306,"\n\na "],[-1,13306," Tra"],[1,13348,"\n4"],[-1,13352,"如果"],[1,13387,"5."],[-1,13389,"实现"],[1,13397,"\n5"],[-1,13400," 在"],[1,13439,"\n5"],[-1,13443,"通过"],[1,13469,"\n!"],[1,13596,"["],[-1,13596,"\n"],[1,13732,"八*"],[-1,13732,"\n\n"],[-1,13740,"My"],[1,13747,"**"],[-1,13747," 实"],[1,13754,"1."],[-1,13755," 在"],[1,13784,"\n2"],[-1,13901,"编写"],[1,13906,"\n!"],[1,14114,"[*"],[-1,14114,"\n\n"],[-1,14119,"my"],[1,14126,"**"],[-1,14126," 实"],[1,14133,"1."],[-1,14134," 在"],[1,14162,"\n2"],[-1,14263,"编写"],[1,14268,"\n!"],[-1,14276," i"],[1,14331,"Sy"],[-1,14334,"Sy"],[1,14360,"]("],[-1,14360,"}e"],[1,14367,"Sy"],[-1,14370,"Sy"],[1,14417,"]("],[-1,14420,"\n\n"]],[14421,14421],[8461,8461]]],[1567333629158,["GJX@GJXAIOU",[[1,13380," "]],[13380,13380],[13381,13381]]],[1567333747025,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,10337," "],[-1,10338," "],[-1,10344,"语"],[1,10346,"语"],[-1,10537,"M"],[1,10541,"M"],[-1,10557,"#"],[1,10559,"#"],[-1,10561,"获"],[1,10563,"获"],[-1,10579,"p"],[1,10581,"p"],[-1,10593," "],[1,10595," "],[-1,10609,"#"],[1,10611,"#"],[-1,10613,"获"],[1,10617,"获"],[-1,10643,"#"],[1,10645,"#"],[-1,10648,"表"],[1,10650,"表"],[-1,10670,"#"],[1,10672,"#"],[-1,10680,"第"],[1,10682,"第"],[-1,10774,"#"],[1,10776,"#"],[-1,10781,"\n"],[1,10783,"\n"],[-1,10805,"#"],[1,10807,"#"],[-1,10812," "],[1,10814," "],[-1,10833,"m"],[1,10835,"m"],[-1,11063,"$"],[1,11065,"$"],[-1,11067," "],[1,11069," "],[-1,11083,"$"],[1,11085,"$"],[-1,11089,"内"],[1,11091,"内"],[-1,11532,"不"],[1,11535,"不"],[1,12494,"a"],[-1,12495,"`"],[1,12562,"\n`"],[-1,12565,"\n3"],[1,12568," m"],[-1,12587,"\n!"],[-1,12726,"["],[1,12727,"\n"],[1,12733,"My"],[-1,12738,"**"],[1,12740," 实"],[1,12743," "],[-1,12745," 1."],[1,12750,"概念"],[-1,12752,"\n\n"],[-1,12769,"1"],[1,12770,"\n"],[1,12774,"功能"],[-1,12795,"\n\n"],[1,12801,"业务"],[-1,12828,"\n\n"],[1,12834,"事务"],[-1,12869,"\n1"],[1,12877,"事务"],[-1,12925,"2."],[1,12929,"在 "],[-1,12958,"\n2"],[1,12965,"每一"],[-1,12991,"\n2"],[1,12998,"可以"],[-1,13022,"\n2"],[1,13028,"也可"],[-1,13079,"\n3"],[1,13083,"my"],[-1,13104,"\n3"],[1,13110,"JD"],[-1,13167,"\n3"],[1,13173,"应为"],[1,13180," "],[-1,13183," "],[1,13190," `"],[-1,13193," `"],[1,13218,"` "],[-1,13221,"` "],[1,13224," "],[-1,13227," "],[-1,13238,",认为，"],[1,13242,"，认为返"],[1,13250,"。"],[-1,13252,"4。."],[1,13257,"在 "],[-1,13303,"\n\na"],[1,13307,"Tra"],[-1,13345,"\n4"],[1,13351,"如果"],[1,13377," "],[-1,13380," "],[-1,13385,"5."],[1,13389,"实现"],[-1,13395,"\n5"],[1,13400," 在"],[-1,13437,"\n5"],[1,13443,"通过"],[-1,13467,"\n!"],[-1,13596,"["],[1,13597,"\n"],[-1,13732,"八*"],[1,13734,"\n\n"],[1,13740,"My"],[-1,13745,"**"],[1,13747," 实"],[-1,13752,"1."],[1,13755," 在"],[-1,13782,"\n2"],[1,13901,"编写"],[-1,13904,"\n!"],[-1,14114,"[*"],[1,14116,"\n\n"],[1,14119,"my"],[-1,14124,"**"],[1,14126," 实"],[-1,14131,"1."],[1,14134," 在"],[-1,14160,"\n2"],[1,14263,"编写"],[-1,14266,"\n!"],[1,14276," i"],[-1,14329,"Sy"],[1,14334,"Sy"],[-1,14358,"]("],[1,14360,"}e"],[-1,14365,"Sy"],[1,14370,"Sy"],[-1,14415,"]("],[1,14420,"\n\n"]],[8461,8461],[14422,14422]]],[1567333747025,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,10338," "],[1,10340," "],[1,10345,"语"],[-1,10346,"语"],[1,10538,"M"],[-1,10541,"M"],[1,10558,"#"],[-1,10559,"#"],[1,10562,"获"],[-1,10563,"获"],[1,10580,"p"],[-1,10581,"p"],[1,10594," "],[-1,10595," "],[1,10610,"#"],[-1,10611,"#"],[1,10614,"获"],[-1,10617,"获"],[1,10644,"#"],[-1,10645,"#"],[1,10649,"表"],[-1,10650,"表"],[1,10671,"#"],[-1,10672,"#"],[1,10681,"第"],[-1,10682,"第"],[1,10775,"#"],[-1,10776,"#"],[1,10782,"\n"],[-1,10783,"\n"],[1,10806,"#"],[-1,10807,"#"],[1,10813," "],[-1,10814," "],[1,10834,"m"],[-1,10835,"m"],[1,11064,"$"],[-1,11065,"$"],[1,11068," "],[-1,11069," "],[1,11084,"$"],[-1,11085,"$"],[1,11090,"内"],[-1,11091,"内"],[1,11533,"不"],[-1,11535,"不"],[-1,12495,"a"],[1,12497,"`"],[-1,12563,"\n`"],[1,12568,"\n3"],[-1,12569," m"],[1,12590,"\n!"],[1,12727,"["],[-1,12727,"\n"],[-1,12734,"My"],[1,12741,"**"],[-1,12741," 实"],[-1,12746," "],[1,12749," 1."],[-1,12751,"概念"],[1,12755,"\n\n"],[1,12770,"1"],[-1,12770,"\n"],[-1,12775,"功能"],[1,12798,"\n\n"],[-1,12802,"业务"],[1,12831,"\n\n"],[-1,12835,"事务"],[1,12872,"\n1"],[-1,12878,"事务"],[1,12928,"2."],[-1,12930,"在 "],[1,12961,"\n2"],[-1,12966,"每一"],[1,12994,"\n2"],[-1,12999,"可以"],[1,13025,"\n2"],[-1,13029,"也可"],[1,13082,"\n3"],[-1,13084,"my"],[1,13107,"\n3"],[-1,13111,"JD"],[1,13170,"\n3"],[-1,13174,"应为"],[-1,13183," "],[1,13187," "],[-1,13193," `"],[1,13198," `"],[-1,13221,"` "],[1,13226,"` "],[-1,13227," "],[1,13231," "],[1,13241,",认为，"],[-1,13241,"，认为返"],[-1,13253,"。"],[1,13256,"4。."],[-1,13258,"在 "],[1,13306,"\n\na"],[-1,13307,"Tra"],[1,13348,"\n4"],[-1,13352,"如果"],[-1,13380," "],[1,13384," "],[1,13388,"5."],[-1,13390,"实现"],[1,13398,"\n5"],[-1,13401," 在"],[1,13440,"\n5"],[-1,13444,"通过"],[1,13470,"\n!"],[1,13597,"["],[-1,13597,"\n"],[1,13733,"八*"],[-1,13733,"\n\n"],[-1,13741,"My"],[1,13748,"**"],[-1,13748," 实"],[1,13755,"1."],[-1,13756," 在"],[1,13785,"\n2"],[-1,13902,"编写"],[1,13907,"\n!"],[1,14115,"[*"],[-1,14115,"\n\n"],[-1,14120,"my"],[1,14127,"**"],[-1,14127," 实"],[1,14134,"1."],[-1,14135," 在"],[1,14163,"\n2"],[-1,14264,"编写"],[1,14269,"\n!"],[-1,14277," i"],[1,14332,"Sy"],[-1,14335,"Sy"],[1,14361,"]("],[-1,14361,"}e"],[1,14368,"Sy"],[-1,14371,"Sy"],[1,14418,"]("],[-1,14421,"\n\n"]],[14422,14422],[8461,8461]]],[1567333704258,["GJX@GJXAIOU",[[1,13362,"·"]],[13362,13362],[13363,13363]]],[1567333705678,["GJX@GJXAIOU",[[-1,13362,"·"]],[13363,13363],[13362,13362]]],[1567333706194,["GJX@GJXAIOU",[[1,13362,"`"]],[13362,13362],[13363,13363]]],[1567333710564,["GJX@GJXAIOU",[[1,13381,"`"]],[13381,13381],[13382,13382]]],[1567333716307,["GJX@GJXAIOU",[[1,13465,"` "]],[13465,13465],[13467,13467]]],[1567333719018,["GJX@GJXAIOU",[[1,13449,"`"]],[13449,13449],[13450,13450]]],[1567333734421,["GJX@GJXAIOU",[[-1,13775," "]],[13776,13776],[13775,13775]]],[1567333742038,["GJX@GJXAIOU",[[1,14121,"2 "]],[14121,14121],[14122,14122]]],[1567333743293,["GJX@GJXAIOU",[[-1,14121,"2"]],[14122,14122],[14121,14121]]],[1567333743787,["GJX@GJXAIOU",[[1,14121,"2"]],[14121,14121],[14122,14122]]],[1567333745056,["GJX@GJXAIOU",[[-1,14121,"2"]],[14122,14122],[14121,14121]]],[1567333745624,["GJX@GJXAIOU",[[1,14121,"## "]],[14121,14121],[14140,14140]]],[1567333807021,[null,[[-1,8461,"\n"],[1,8462,"/"],[1,8476,"\n"],[-1,8914,"\n"],[1,8916,"其"],[-1,9736,"\n"],[1,9764,"\n"],[-1,10254,"中"],[1,10256,"中"],[-1,10283,"<"],[1,10285,"<"],[-1,10300,"等"],[1,10302,"等"],[-1,10306,"p"],[1,10308,"p"],[-1,10320," "],[1,10322," "],[1,10337," "],[-1,10338," "],[-1,10344,"语"],[1,10346,"语"],[-1,10537,"M"],[1,10541,"M"],[-1,10557,"#"],[1,10559,"#"],[-1,10561,"获"],[1,10563,"获"],[-1,10579,"p"],[1,10581,"p"],[-1,10593," "],[1,10595," "],[-1,10609,"#"],[1,10611,"#"],[-1,10613,"获"],[1,10617,"获"],[-1,10643,"#"],[1,10645,"#"],[-1,10648,"表"],[1,10650,"表"],[-1,10670,"#"],[1,10672,"#"],[-1,10680,"第"],[1,10682,"第"],[-1,10774,"#"],[1,10776,"#"],[-1,10781,"\n"],[1,10783,"\n"],[-1,10805,"#"],[1,10807,"#"],[-1,10812," "],[1,10814," "],[-1,10833,"m"],[1,10835,"m"],[-1,11063,"$"],[1,11065,"$"],[-1,11067," "],[1,11069," "],[-1,11083,"$"],[1,11085,"$"],[-1,11089,"内"],[1,11091,"内"],[-1,11532,"不"],[1,11535,"不"],[1,12494,"a"],[-1,12495,"`"],[1,12562,"\n`"],[-1,12565,"\n3"],[1,12568," m"],[-1,12587,"\n!"],[-1,12726,"["],[1,12727,"\n"],[1,12733,"My"],[-1,12738,"**"],[1,12740," 实"],[1,12743," "],[-1,12745," 1."],[1,12750,"概念"],[-1,12752,"\n\n"],[-1,12769,"1"],[1,12770,"\n"],[1,12774,"功能"],[-1,12795,"\n\n"],[1,12801,"业务"],[-1,12828,"\n\n"],[1,12834,"事务"],[-1,12869,"\n1"],[1,12877,"事务"],[-1,12925,"2."],[1,12928," 在"],[-1,12958,"\n2"],[1,12965,"每一"],[-1,12991,"\n2"],[1,12998,"可以"],[-1,13022,"\n2"],[1,13028,"也可"],[-1,13079,"\n3"],[1,13083,"my"],[-1,13104,"\n3"],[1,13110,"JD"],[-1,13167,"\n3"],[1,13173,"应为"],[1,13180," "],[-1,13183," "],[1,13190," `"],[-1,13193," `"],[1,13218,"` "],[-1,13221,"` 有"],[1,13224,"有 "],[-1,13227," "],[-1,13238,",认为，"],[1,13242,"，认为返"],[1,13250,"。"],[-1,13252,"4。."],[1,13256," 在"],[-1,13303,"\n\na"],[1,13307,"Tra"],[-1,13345,"\n4"],[1,13351,"如果"],[1,13359,"`"],[-1,13362,"`"],[1,13378,"` "],[-1,13381,"` "],[-1,13387,"5."],[1,13391,"实现"],[-1,13397,"\n5"],[1,13403,"在 "],[-1,13439,"\n5"],[1,13445,"通过"],[1,13446,"`"],[-1,13449,"`"],[1,13463,"` "],[-1,13466,"` "],[-1,13472,"\n!"],[-1,13601,"["],[1,13602,"\n"],[-1,13737,"八*"],[1,13739,"\n\n"],[1,13745,"My"],[-1,13750,"**"],[1,13752," 实"],[-1,13757,"1."],[1,13760," 在"],[-1,13772," "],[1,13775,"供"],[-1,13786,"\n2"],[1,13905,"编写"],[-1,13908,"\n!"],[-1,14118,"[*十"],[1,14121,"\n\n"],[1,14125,"十"],[1,14127,"my"],[-1,14132,"**"],[1,14134," 实"],[-1,14139,"1."],[1,14142," 在"],[-1,14168,"\n2"],[1,14271,"编写"],[-1,14274,"\n!"],[1,14284," i"],[-1,14337,"Sy"],[1,14342,"Sy"],[-1,14366,"]("],[1,14368,"}e"],[-1,14373,"Sy"],[1,14378,"Sy"],[-1,14423,"]("],[1,14428,"\n\n"]],[8461,8461],[14430,14430]]],[1567333807021,[null,[[1,8461,"\n"],[-1,8461,"/"],[-1,8476,"\n"],[1,8915,"\n"],[-1,8916,"其"],[1,9737,"\n"],[-1,9764,"\n"],[1,10255,"中"],[-1,10256,"中"],[1,10284,"<"],[-1,10285,"<"],[1,10301,"等"],[-1,10302,"等"],[1,10307,"p"],[-1,10308,"p"],[1,10321," "],[-1,10322," "],[-1,10338," "],[1,10340," "],[1,10345,"语"],[-1,10346,"语"],[1,10538,"M"],[-1,10541,"M"],[1,10558,"#"],[-1,10559,"#"],[1,10562,"获"],[-1,10563,"获"],[1,10580,"p"],[-1,10581,"p"],[1,10594," "],[-1,10595," "],[1,10610,"#"],[-1,10611,"#"],[1,10614,"获"],[-1,10617,"获"],[1,10644,"#"],[-1,10645,"#"],[1,10649,"表"],[-1,10650,"表"],[1,10671,"#"],[-1,10672,"#"],[1,10681,"第"],[-1,10682,"第"],[1,10775,"#"],[-1,10776,"#"],[1,10782,"\n"],[-1,10783,"\n"],[1,10806,"#"],[-1,10807,"#"],[1,10813," "],[-1,10814," "],[1,10834,"m"],[-1,10835,"m"],[1,11064,"$"],[-1,11065,"$"],[1,11068," "],[-1,11069," "],[1,11084,"$"],[-1,11085,"$"],[1,11090,"内"],[-1,11091,"内"],[1,11533,"不"],[-1,11535,"不"],[-1,12495,"a"],[1,12497,"`"],[-1,12563,"\n`"],[1,12568,"\n3"],[-1,12569," m"],[1,12590,"\n!"],[1,12727,"["],[-1,12727,"\n"],[-1,12734,"My"],[1,12741,"**"],[-1,12741," 实"],[-1,12746," "],[1,12749," 1."],[-1,12751,"概念"],[1,12755,"\n\n"],[1,12770,"1"],[-1,12770,"\n"],[-1,12775,"功能"],[1,12798,"\n\n"],[-1,12802,"业务"],[1,12831,"\n\n"],[-1,12835,"事务"],[1,12872,"\n1"],[-1,12878,"事务"],[1,12928,"2."],[-1,12929," 在"],[1,12961,"\n2"],[-1,12966,"每一"],[1,12994,"\n2"],[-1,12999,"可以"],[1,13025,"\n2"],[-1,13029,"也可"],[1,13082,"\n3"],[-1,13084,"my"],[1,13107,"\n3"],[-1,13111,"JD"],[1,13170,"\n3"],[-1,13174,"应为"],[-1,13183," "],[1,13187," "],[-1,13193," `"],[1,13198," `"],[-1,13221,"` "],[1,13226,"` 有"],[-1,13226,"有 "],[1,13231," "],[1,13241,",认为，"],[-1,13241,"，认为返"],[-1,13253,"。"],[1,13256,"4。."],[-1,13257," 在"],[1,13306,"\n\na"],[-1,13307,"Tra"],[1,13348,"\n4"],[-1,13352,"如果"],[-1,13362,"`"],[1,13366,"`"],[-1,13381,"` "],[1,13386,"` "],[1,13390,"5."],[-1,13392,"实现"],[1,13400,"\n5"],[-1,13404,"在 "],[1,13442,"\n5"],[-1,13446,"通过"],[-1,13449,"`"],[1,13453,"`"],[-1,13466,"` "],[1,13471,"` "],[1,13475,"\n!"],[1,13602,"["],[-1,13602,"\n"],[1,13738,"八*"],[-1,13738,"\n\n"],[-1,13746,"My"],[1,13753,"**"],[-1,13753," 实"],[1,13760,"1."],[-1,13761," 在"],[1,13775," "],[-1,13777,"供"],[1,13789,"\n2"],[-1,13906,"编写"],[1,13911,"\n!"],[1,14119,"[*十"],[-1,14119,"\n\n"],[-1,14125,"十"],[-1,14128,"my"],[1,14135,"**"],[-1,14135," 实"],[1,14142,"1."],[-1,14143," 在"],[1,14171,"\n2"],[-1,14272,"编写"],[1,14277,"\n!"],[-1,14285," i"],[1,14340,"Sy"],[-1,14343,"Sy"],[1,14369,"]("],[-1,14369,"}e"],[1,14376,"Sy"],[-1,14379,"Sy"],[1,14426,"]("],[-1,14429,"\n\n"]],[14430,14430],[8461,8461]]],[1567333750415,["GJX@GJXAIOU",[[-1,14457,"\n"]],[14457,14457],[14456,14456]]],[1567333750557,["GJX@GJXAIOU",[[-1,14456,"\n"]],[14456,14456],[14455,14455]]],[1567333750683,["GJX@GJXAIOU",[[-1,14455,"\n"]],[14455,14455],[14454,14454]]],[1567333750792,["GJX@GJXAIOU",[[-1,14454,"\n"]],[14454,14454],[14453,14453]]],[1567333750968,["GJX@GJXAIOU",[[-1,14453,"\n"]],[14453,14453],[14452,14452]]],[1567333751158,["GJX@GJXAIOU",[[-1,14452,"\n"]],[14452,14452],[14451,14451]]],[1567333751386,["GJX@GJXAIOU",[[-1,14451,"\n"]],[14451,14451],[14450,14450]]],[1567333751599,["GJX@GJXAIOU",[[-1,14450,"\n"]],[14450,14450],[14449,14449]]],[1567333751749,["GJX@GJXAIOU",[[-1,14449,"\n"]],[14449,14449],[14448,14448]]],[1567333751882,["GJX@GJXAIOU",[[-1,14448,"\n"]],[14448,14448],[14447,14447]]],[1567333752015,["GJX@GJXAIOU",[[-1,14447,"\n"]],[14447,14447],[14446,14446]]],[1567333752202,["GJX@GJXAIOU",[[-1,14446,"\n"]],[14446,14446],[14445,14445]]],[1567333752331,["GJX@GJXAIOU",[[-1,14445,"\n"]],[14445,14445],[14444,14444]]],[1567333752426,["GJX@GJXAIOU",[[-1,14444,"\n"]],[14444,14444],[14443,14443]]],[1567333752606,["GJX@GJXAIOU",[[-1,14443,"\n"]],[14443,14443],[14442,14442]]],[1567333752702,["GJX@GJXAIOU",[[-1,14442,"\n"]],[14442,14442],[14441,14441]]],[1567333752873,["GJX@GJXAIOU",[[-1,14441,"\n"]],[14441,14441],[14440,14440]]],[1567333753043,["GJX@GJXAIOU",[[-1,14440,"\n"]],[14440,14440],[14439,14439]]],[1567333753151,["GJX@GJXAIOU",[[-1,14439,"\n"]],[14439,14439],[14438,14438]]],[1567333753261,["GJX@GJXAIOU",[[-1,14438,"\n"]],[14438,14438],[14437,14437]]],[1567333753509,["GJX@GJXAIOU",[[-1,14437,"\n"]],[14437,14437],[14436,14436]]],[1567333753639,["GJX@GJXAIOU",[[-1,14436,"\n"]],[14436,14436],[14435,14435]]],[1567333753774,["GJX@GJXAIOU",[[-1,14435,"\n"]],[14435,14435],[14434,14434]]],[1567333753958,["GJX@GJXAIOU",[[-1,14434,"\n"]],[14434,14434],[14433,14433]]],[1567333754089,["GJX@GJXAIOU",[[-1,14433,"\n"]],[14433,14433],[14432,14432]]],[1567333754439,["GJX@GJXAIOU",[[-1,14432,"\n"]],[14432,14432],[14431,14431]]],[1567333755024,["GJX@GJXAIOU",[[-1,14431,"\n"]],[14431,14431],[14430,14430]]]],null,"GJX@GJXAIOU"],["46ab89b1-8d0e-4675-9ffd-5e70640142ba",1567384749512,"---\nstyle: summer\n---\n# FrameDay01 Mybatis3\n\n## 一、前言：数据库 SQL命令\n\n- 创建数据库并指定编码\n`Create database 数据库名 default character set utf8`\n \n - 创建表\n```java\nCreatetable 表名(\n   列名 类型 约束 auto_increament comment \"备注\"\n);\n```\n\n\n## 二、命名规范\n\n* 项目名:没有要求,不起中文\n* 包:公司域名倒写 com.bjsxt\n* 数据访问层:dao, persist, **mapper**\n* 实体:entity, model, bean,javabean, **pojo**\n* 业 务 逻 辑 : **service**，biz \n* 控制器: controller, **servlet**,action,web\n* 过滤器: filter\n* 异常: exception\n* 监听器:listener\n* 注释:\n  * 类上和方法上使用文档注释 `/** */`\n  * 在方法里面使用`/* */` 或`//`\n* 类: 大驼峰\n* 方法,属性:小驼峰\n\n## 四、MVC开发模式\n\n- M: Model 模型；实体类和业务和 dao\n- V: view 视图 ；现在一般 使用. JSP\n- C: Controller 控制器,现在使用servlet\n  - 作用：视图和逻辑分离\n- MVC 适用场景:大型项目开发.\n- **项目实现步骤**：\n  - 先设计数据库\n  - 再写实体类：用于封装数据\n  - 持久层DAO\n  - 业务逻辑\n  - 控制器\n  - 视图\n![MVC开发模式]($resource/MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F.png)\n\n\n## 五、框架概念\n\n- 框架:软件的半成品.未解决问题制定的一套约束,在提供功能基础上进行扩充。\n- **框架中一些不能被封装的代码(变量),需要使用框架者新建一个xml 文件,在文件中添加变量内容**。\n  - **需要建立特定位置和特定名称的配置文件**。\n  - **需要使用 xml 解析技术和反射技术**。\n\n**常用概念**\n- 类库:提供的类没有封装一定逻辑。\n举例:类库就是名言警句,写作文时引入名言警句\n\n- 框架:区别于类库,里面有一些约束。\n举例:框架是填空题\n\n## 六、MyBatis 简介\n\n- Mybatis 开源免费框架.原名叫 iBatis,2010 在 google  code,2013 年迁移到 github\n\n- 作用: **数据访问层（即是 Dao）框架**.\n  - 底层是对 JDBC 的封装.\n\n- mybatis 优点之一:\n  - **使用 mybatis 时不需要编写实现类,只需要写需要执行的 sql 命令。**\n\n\n## 七、MyBatis 使用\n\n### （一）环境搭建\n\n- 步骤一：导入 jar\n![MyBatis需要导入的Jar包]($resource/MyBatis%E9%9C%80%E8%A6%81%E5%AF%BC%E5%85%A5%E7%9A%84Jar%E5%8C%85.png)\n- 步骤二：**在 src 下新建全局配置文件**(编写 JDBC 四个变量)\n  - 没有名称和地址要求\n  - 在全局配置文件中引入 DTD 或 schema【使用见 Blogs -> DTD】\n    - 如果导入 dtd 后没有提示：Window--> preference --> XML --> XMl catalog --> add 按钮\n  - 全局配置文件内容\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n  PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n  \n<configuration>\n\t<!-- default 为引用 environment 的 id,即当前所使用的环境 -->\n\t<environments default=\"default\">\n\t\t<!-- 声明可以使用的环境 -->\n\t\t<environment id=\"default\">\n\t\t\t<!-- 使用原生JDBC事务 -->\n\t\t\t<transactionManager type=\"JDBC\"></transactionManager>\n\t\t\t<dataSource type=\"POOLED\">\n    \t\t  <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n    \t      <property name=\"url\" value=\"jdbc:mysql://localhost:3306/数据库名\"/>\n    \t\t  <property name=\"username\" value=\"root\"/>\n    \t      <property name=\"password\" value=\"GJXAIOU\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t<mappers>\n\t\t<mapper resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n\t</mappers>\n</configuration>\n```\n\n- 步骤三：新建以 mapper 结尾的包,在包下新建:实体类名+Mapper.xml\n  - 文件作用：编写需要执行的 SQL 命令\n  - 把 xml 文件理解成实现类.\n xml 文件内容为：\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:表示方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect * from flower\n\t</select>\n</mapper>\n```\n\n- 步骤四：测试结果(只有在单独使用 mybatis 时使用,最后 ssm 整合时下面代码不需要编写\n```java\nimport com.bjsxt.pojo.Flower;\n\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n### （二）环境搭建详解\n\n**全局配置文件中内容**\n- <transactionManager/> type 属性可取值\n  - JDBC,事务管理使用 JDBC 原生事务管理方式\n  - MANAGED 把事务管理转交给其他容器.相当于设置原生JDBC 事务setAutoMapping(false);\n- <dataSouce/>type 属性可取值：\n  - POOLED 使用数据库连接池\n  - UNPOOLED 不使用数据库连接池,和直接使用 JDBC 一样\n  - JNDI :是 java 命名目录接口技术.\n\n## 八、数据库连接池【补充知识】\n\n- 在内存中开辟一块空间,存放多个数据库连接对象. \n- JDBC Tomcat Pool,直接由 tomcat 产生数据库连接池. \n- 图示:数据库连接池中有很多连接，他们可能处于 Active 或者 Idle 等等状态；\n  - active 活跃状态:当前连接对象被应用程序使用中\n  - Idle 空闲状态:等待应用程序使用\n- 使用数据库连接池的目的\n  - 在高频率访问数据库时,使用数据库连接池可以降低服务器系统压力,提升程序运行效率.\n    -  小型项目不适用数据库连接池.\n- 实现 JDBC tomcat Pool 的步骤.\n  - 在 web 项目的 META-INF 中存放 context.xml,在 context.xml 编写数据库连接池相关属性\n  - 把项目发布到 tomcat 中,则数据库连接池产生了\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\t<Resource\n\t\tdriverClassName=\"com.mysql.jdbc.Driver\"\n\t\turl=\"jdbc:mysql://localhost:3306/ssm\"\n\t\tusername=\"root\"\n\t\tpassword=\"smallming\"\n\t\tmaxActive=\"50\"\n\t\tmaxIdle=\"20\"\n\t\tname=\"test\"\n\t\tauth=\"Container\"\n\t\tmaxWait=\"10000\"\n\t\ttype=\"javax.sql.DataSource\"\n\t/>\n</Context>\n```\n\n - 可以在 Java 中使用 JNDI 获取数据库连接池中对象\n  - Context:上下文接口.context.xml 文件对象类型；代码见下面\n  - 当关闭连接对象时,把连接对象归还给数据库连接池,把状态改变成 Idle\n```java\n@WebServlet(\"/pool\")\npublic class DemoServlet extends HttpServlet {\n\t@Override\n\tprotected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n  \t  try {\n  \t\tContext cxt = new InitialContext();\n  \t\tDataSource ds = (DataSource) cxt.lookup(\"java:comp/env/test\");\n  \t\tConnection conn = ds.getConnection();\n  \t\tPreparedStatement ps = conn.prepareStatement(\"select * from flower\");\n  \t\tResultSet rs = ps.executeQuery();\n  \t\tres.setContentType(\"text/html;charset=utf-8\");\n  \t\tPrintWriter out = res.getWriter();\n  \t\twhile(rs.next()){\n  \t\t\tout.print(rs.getInt(1)+\"&nbsp;&nbsp;&nbsp;&nbsp;\"+rs.getString(2)+\"<br/>\");\n  \t\t}\n  \t\tout.flush();\n  \t\tout.close();\n  \t\trs.close();\n  \t} catch (NamingException e) {\n  \t\te.printStackTrace();\n  \t} catch (SQLException e) {\n  \t\te.printStackTrace();\n  \t}\n  }\n}\n```\n\n\n## 九、三种查询方式\n\n- `selectList()`  返回值为 `List<resultType  属性控制>`\n适用于查询结果都需要遍历的需求\n\n- `selectOne()` 返回值 `Object`,\n适用于返回结果只是变量或一行数据时\n\n- `selectMap()` 返回值 `Map`\n  - 适用于需要在查询结果中通过某列的值取到这行数据的需求.\n  - `Map<key,resultType  控制>`\n```java\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\t// selectList\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t// selectOne\n\t\tint count = session.selectOne(\"a.b.selById\");\n\t\tSystem.out.println(count);\n\t\t\n\t\t// selectMap\n\t\t//把数据库中哪个列的值当作map的key\n\t\tMap<Object, Object> map = session.selectMap(\"a.b.c\", \"name123\");\n\t\tSystem.out.println(map);\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n对应的 XML 文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t// 这里的 int 相当于 Ingeter\n\t<select id=\"selById\" resultType=\"int\">\n\t\tselect count(*) from flower\n\t</select>\n\t\n\t<select id=\"c\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n</mapper>\n```\n\n\n\n##  十、注解\n\n- 注解存在的意义:简化 xml 文件的开发；\n- 注解在 servlet 3.0 规范之后大力推广的；\n- 注解前面的@XXX,表示引用一个@interface；\n  - @interface 表示注解声明\n- 注解可以有属性,因为注解其实就是一个接口(类)；\n- 每次使用注解都需要导包\n- 注解语法: @XXXX(属性名= 值)\n- 值的分类\n  - 如果值是基本数据类型或字符串: 属性名=值；\n  - 如果值是数组类型: 属性名={值,值}；\n    - 如果只有一个值可以省略大括号；\n  - 如果值是类类型,属性名=@名称\n- 如果注解只需要给一个属性赋值,且这个属性是默认属性,可以省略属性名\n\n\n## 十一、路径\n\n* 编写路径为了告诉编译器如何找到其他资源；\n\n* 路径分类\n  * 2.1 相对路径: 从当前资源出发找到其他资源的过程\n  * 2.2 绝对路径: 从根目录(服务器根目录或项目根目录)出发找到其他资源的过程\n    * 2.2.1 标志: 只要以/开头的都是绝对路径\n- 绝对路径:\n  - 如果是请求转发 / 表示项目根目录(WebContent)\n  - 其他重定向,<img/> <script/>,<style/>,location.href 等/都表示服务器根目录(tomcat/webapps 文件夹)\n- 如果客户端请求的控制器,控制器转发到JSP 后,jsp 中如果使用相对路径,需要按照控制器的路径去找其他资源；\n  - 保险办法:使用绝对路径,可以防止上面的问题；\n\n## 十二、Log4J\n- 由 apache 推出的开源免费日志处理的类库；\n\n- 为什么需要日志:\n  - 在项目中编写 System.out.println();输出到控制台,当项目发布到 tomcat 后,没有控制台(在命令行界面能看见.),不容易观察一些输出结果。\n  - **log4j 作用**：不仅能把内容输出到控制台,还能把内容输出到文件中.便于观察结果。\n\n- **使用步骤**:\n  - 导入 log4j-xxx.jar\n  - 在 src 下新建 log4j.properties(路径和名称都不允许改变)\n    - 在 ConversionPattern 中书写表达式（就是日志输出的格式）；\n    - log4j.appender.LOGFILE.File  日志文件位置及名称(日志文件扩展名.log)\n```java\n// 遇到什么级别才输出：调试信息输出， 输出到控制台，输出到 log 文件\nlog4j.rootCategory=DEBUG, CONSOLE, LOGFILE\n// 向控制台输出相关的配置\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout log4j.appender.CONSOLE.layout.ConversionPattern=%C %d{YYYY-MM-dd hh:mm:ss}%m  %n\n// 向日志文件输出的相关的配置\nlog4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=E:/my.log \nlog4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.Patter nLayout log4j.appender.LOGFILE.layout.ConversionPattern=%C\t%m %L %n\n```\n\n- log4j 输出级别（一共五个级别）\n  - fatal(致命错误) >  error  ( 错误)  >  warn  ( 警告)  >  info(普通信息)  >  debug(调试信息)\n  - 在 log4j.properties 的第一行中控制输出级别，**只有大于等于该级别信息才输出**\n\n- log4j 输出目的地\n  -  在一行控制输出目的地，其中 CONSOLE 表示控制台 ，LOGFILE 表示文件\n\n![log4j输出目的地]($resource/log4j%E8%BE%93%E5%87%BA%E7%9B%AE%E7%9A%84%E5%9C%B0.jpg)\n\n在实际使用：新建一个类，例如：Test类\n- 使用方法一：\n```java\nLogger  logger = Logger.getLogger(Test.class);\n// 这里以 debug 为例，具体的方法看上面输出级别调用不同的方法\nlogger.debug(\"这是调试信息\"); \n```\n- 使用方法二：\n在 catch 中 ： `logger.error(e.getMessage());` 即可，注意在log4j配置文件中加上相关的表达式；\n\n- pattern 中常用几个表达式（区分大小写）\n  - %C 输出包名+类名；\n  - %d{YYYY-MM-dd  HH:mm:ss} 时间；\n  - %L 行号\n  - %m 信息\n  - %n 换行\n上面可以多个一起使用， 中间空格就行\n示例如下：\n\n![pattern示例配置]($resource/pattern%E7%A4%BA%E4%BE%8B%E9%85%8D%E7%BD%AE.png)\n\n\n\n# 十三、<settings>标签\n\n- 在 mybatis 全局配置文件中通过<settings>标签控制 mybatis 全局开关\n- 在 mybatis.xml 中开启 log4j 命令如下：\n  -  必须保证有 log4j.jar\n  -  在 src 下有 log4j.properties\n```java\n<settings>\n    <setting  name=\"logImpl\"  value=\"LOG4J\"/>\n</settings>\n```\n\n-  log4j 中可以输出指定内容的日志(控制某个局部内容的日志级别) ：直接在 log4j.properties 中设置；\n    -  命名级别(包级别): `<mapper>namespace 属性中除了最后一个类名`\n例如 `namespace=”com.bjsxt.mapper.PeopleMapper”` 其中包级别为 `com.bjsxt.mapper` ,需要在 `log4j.propeties` 中做两件事情  \n      - 先在总体级别调成 Error，这样可以不输出无用信息\n      -  在设置某个指定位置级别为 DEBUG\n\n![根据命名空间设置不同优先级]($resource/%E6%A0%B9%E6%8D%AE%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E4%BC%98%E5%85%88%E7%BA%A7.png)\n\n  - 类级别\n    -  namespace 属性值 ,相当于namespace 类名\n  - 方法级别\n    - 使用 namespace 属性值+标签 id 属性值\n\n## 十四、 parameterType 属性（Mybatis 中参数设置）\n\n- 在 XXXMapper.xml  中`<select><delete>`等标签的 `parameterType` 可以控制参数类型（例如可以传入 select 语句的参数，控制输入参数的类型）\n\n- SqlSession 的 selectList()和 selectOne()的第二个参数和 selectMap()的第三个参数都表示方法的参数.\n  - 示例：\n```java\nPeople  p  =  session.selectOne(\"a.b.selById\",1);\nSystem.out.println(p);\n```\n  - 在 实例名Mapper.xml  中可以通过`#{}`获取参数（代码见下）\n    - `parameterType`  控制参数类型\n    - `#{}`  获取参数内容\n      - 使用索引,从 0 开始 `#{0}`表示第一个参数\n      - 也可以使用`#{param1}`第一个参数\n      - 如果**只有一个参数(其参数应该是基本数据类型或 String)**,mybatis 对#{}里面内容没有要求只要写内容即可.\n      - 如果参数是对象`#{属性名}`\n      -  如果参数是 map， 写成`#{key}` ：当需要传递多个参数时候，目前只能使用 map 或者对象\n```java\n<select id=\"selById\"\n  resultType=\"com.bjsxt.pojo.People\"  parameterType=\"int\">\n  select * from people where id=#{0}\n</select>\n```\n\n- #{} 和 ${} 的 区 别\n  - #{} 获取参数的内容,支持索引获取,或者使用param1 获取指定位置参数,并且 SQL 使用?占位符\n  -  `${}` 字符串拼接，不使用?,默认找`${内容}`内容的 get/set 方法,如果写数字,就是一个数字\n配置示例：\nPeopleMapper.xml\n```java\n<select id=\"test\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"com.bjsxt.pojo.People\"> \n  select * from people where id =  ${id}\n</select>\n```\nTest.java\n```java\nPeople peo =new People();\npeo.setId(1);\nPeople p = session.selectOne(\"a.b.selById\",people);\n```\n\n- 如果在 xml 文件中出现 “<” , “>” ,双引号 等特殊字符时可以使用 XML 文件转义标签(XML 自身的)，格式为：`<![CDATA[ 内 容 ]]>`\n\n-  mybatis 中实现 mysql  分页写法\n  -  ?中 不允许在关键字前后进行数学运算,需要在代码中计算完成后传递到 mapper.xml  中；\n\n  Java 中代码为：\n```java\n//显示几个\nint pageSize = 2;\n//第几页\nint pageNumber = 2;\n//如果希望传递多个参数,可以使用对象或map\nMap<String,Object> map = new HashMap<>();\nmap.put(\"pageSize\", pageSize);\nmap.put(\"pageStart\", pageSize*(pageNumber-1));\nList<People> p = session.selectList(\"a.b.page\",map);\n```\nmapper.xml 中代码为：\n```xml\n<select id=\"page\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十五、typeAliases 别名（在mybatis.xml中进行配置，命令如下）\n\n一共有三类：分别是系统内置的别名，给某个类的别名，\n- 系统内置别名: 就是把类型全小写（见文档 ）\n- 给某个类起别名\n    - alias=”自定义”\n    - 同时 mapper.xml  中 peo 引用 People 类\n```java\n<typeAliases>\n    <typeAlias type=\"com.bjsxt.pojo.People\" alias=\"peo\"/>\n</typeAliases>\n```\nmapper.xml 中内容为：  \n```java\n<select id=\"page\" resultType=\"peo\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n- 直接给某个包下所有类起别名,别名为类名,区分大小写\n  - mybatis.xml 中配置\n```java\n<typeAliases>\n    <package name=\"com.bjsxt.pojo\" />\n</typeAliases>\n```\n- mapper.xml  中通过类名引用\n```java\n<select id=\"page\" resultType=\"People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十六、MyBatis 实现新增 \n\n- 概念复习：下面三者本质相同，角度不同；\n  - 功能:从应用程序角度出发,软件具有哪些功能.\n  - 业务:完成功能时的逻辑.对应 Service 中一个方法\n  - 事务:从数据库角度出发,完成业务时需要执行的 SQL 集合,统称一个事务\n    - 事务回滚：如果在一个事务中某个 SQL 执行事务,希望回归到事务的原点,保证数据库数据的完整性.\n\n- 在 mybatis 中默认是关闭了 JDBC 的自动提交功能\n  -  每一个 SqlSession 默认都是不自动提交事务.\n  -  可以使用session.commit()提交事务.\n  - 也可以使用openSession(true);自动提交底层为：.setAutoCommit(true);\n- mybatis 底层是对 JDBC 的封装.\n  - JDBC 中 executeUpdate()执行新增,删除,修改的 SQL.方法的返回值 int,表示受影响的行数.\n  - 应为上面原因，因此 mybatis 中 `<insert> <delete> <update>` 标签没有 resultType 属性，认为返回值都是 int。\n\n- 在 openSession() 时 Mybatis 会创建 SqlSession 时同时创建一个 Transaction(事务对象),同时 autoCommit 都为 false\n  - 如果出现异常,应该 `session.rollback()` 回滚事务.\n\n- 实现新增的步骤\n  - 在 mapper.xml  中提供<insert>标签,标签没有返回值类型\n  - 通过 `session.insert()` 调用新增方法\nmapper.xml 值为；\n```xml\n<insert id=\"ins\" parameterType=\"People\">\ninsert into people values(default,#{name},#{age})\n</insert>\n```\n\n```java\nint index1 = session.insert(\"a.b.ins\", p);\nif(index1>0){\n   System.out.println(\"成功\");\n}else{\n  System.out.println(\"失败\");\n}\n```\n\n\n## 十二、MyBatis 实现修改\n\n- 在 mapper.xml 中提供<update>标签\n```java\n<update id=\"upd\" parameterType=\"People\">\n  update people set name = #{name} where id = #{id}\n</update>\n```\n- 编写代码\n```java\nPeople peo = new People();\npeo.setId(3);\npeo.setName(\"王五\");\nint index = session.update(\"a.b.upd\", peo);\nif(index>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\nsession.commit();\n```\n\n\n##  十三、mybatis 实现删除\n\n- 在 mapper.xml  提供<delete>标签\n```xml\n<delete id=\"del\" parameterType=\"int\">\n    delete from people where id = #{0}\n</delete>\n```\n\n- 编写代码\n```java\n int  del  =  session.delete(\"a.b.del\",3);\n\nif(del>0){\n   System.out.println(\"成功\");\n}else{\n   System.out.println(\"失败\");\n}\n\nsession.commit();\n```\n\n",[[1567384727585,["GJX@GJXAIOU",[[1,5672,"属性"]],[5672,5672],[5674,5674]]],[1567384773256,["GJX@GJXAIOU",[[-1,5820,"a"]],[5821,5821],[5820,5820]]],[1567384775799,["GJX@GJXAIOU",[[1,5821,"a"]],[5821,5821],[5822,5822]]],[1567385161909,["GJX@GJXAIOU",[[1,6395,"shi"]],[6395,6395],[6398,6398]]],[1567385162839,["GJX@GJXAIOU",[[-1,6395,"shi"]],[6398,6398],[6395,6395]]],[1567385165963,["GJX@GJXAIOU",[[1,6395,"尸体了 "]],[6395,6395],[6398,6398]]],[1567385166795,["GJX@GJXAIOU",[[-1,6395,"尸体了"]],[6398,6398],[6395,6395]]],[1567385169286,["GJX@GJXAIOU",[[1,6395,"实体类"]],[6395,6395],[6398,6398]]],[1567385172477,["GJX@GJXAIOU",[[1,6398,"Mapper"]],[6398,6398],[6404,6404]]],[1567385172531,["GJX@GJXAIOU",[[1,6398," "]],[6404,6404],[6405,6405]]],[1567385174018,["GJX@GJXAIOU",[[1,6405,"。"]],[6405,6405],[6406,6406]]],[1567385175408,["GJX@GJXAIOU",[[-1,6405,"。"]],[6406,6406],[6405,6405]]],[1567385176795,["GJX@GJXAIOU",[[1,6405,"."]],[6405,6405],[6406,6406]]],[1567385180470,["GJX@GJXAIOU",[[-1,6407,"XML "]],[6410,6410],[6406,6406]]],[1567385181955,["GJX@GJXAIOU",[[1,6406,"xml"]],[6406,6406],[6409,6409]]],[1567385303740,["GJX@GJXAIOU",[[1,7293,"`"]],[7293,7293],[7294,7294]]],[1567385305115,["GJX@GJXAIOU",[[1,7307,"`"]],[7307,7307],[7308,7308]]],[1567385305870,["GJX@GJXAIOU",[[1,7336,"`"]],[7336,7336],[7337,7337]]],[1567385307226,["GJX@GJXAIOU",[[1,7342,"`"]],[7342,7342],[7343,7343]]],[1567385308947,["GJX@GJXAIOU",[[1,7359,"`"]],[7359,7359],[7360,7360]]],[1567385310848,["GJX@GJXAIOU",[[1,7369,"`"]],[7369,7369],[7370,7370]]],[1567385314029,["GJX@GJXAIOU",[[1,7406,"`"]],[7406,7406],[7407,7407]]],[1567385314988,["GJX@GJXAIOU",[[1,7414,"`"]],[7414,7414],[7415,7415]]],[1567385316856,["GJX@GJXAIOU",[[-1,7405,","]],[7406,7406],[7405,7405]]],[1567385317452,["GJX@GJXAIOU",[[1,7405,":"]],[7405,7405],[7406,7406]]],[1567385319672,["GJX@GJXAIOU",[[-1,7405,":"]],[7406,7406],[7405,7405]]],[1567385320340,["GJX@GJXAIOU",[[1,7405,"："]],[7405,7405],[7406,7406]]],[1567385324796,["GJX@GJXAIOU",[[1,7210," "]],[7210,7210],[7211,7211]]],[1567385390697,["GJX@GJXAIOU",[[1,5769,"\n\t"]],[5767,5767],[5769,5769]]],[1567385391305,["GJX@GJXAIOU",[[1,5769,"// MyBatis 默认不加载配置文件，因此需要先加载配置文件，返回整个配置文件的流对象 // 在数据访问层处理异常和在控制器中处理异常，一般在 service 中只抛出异常；"]],[5769,5769],[5858,5858]]],[1567385398488,["GJX@GJXAIOU",[[1,5815,"   \n\t"]],[5815,5815],[5820,5820]]],[1567385413231,["GJX@GJXAIOU",[[1,5944,"\n\t\t"]],[5941,5941],[5944,5944]]],[1567385413704,["GJX@GJXAIOU",[[1,5944,"// 前面是工厂       实例化工厂对象时使用的是构建者设计模式   它的名称标志:后面有Builder // 构建者设计模式意义: 简化对象实例化过程"]],[5944,5944],[6022,6022]]],[1567385416336,["GJX@GJXAIOU",[[1,5999,"\n\t\t"]],[5999,5999],[6002,6002]]],[1567385418947,["GJX@GJXAIOU",[[1,5944," "]],[5944,5944],[5945,5945]]],[1567385420919,["GJX@GJXAIOU",[[-1,5944," "]],[5945,5945],[5944,5944]]],[1567385432543,["GJX@GJXAIOU",[[1,6117,"\n\t\t"]],[6114,6114],[6117,6117]]],[1567385432976,["GJX@GJXAIOU",[[1,6117,"// 整个 sqlsession 就是 MyBatis 中 API 封装的对象,增删改查都在里面"]],[6117,6117],[6165,6165]]],[1567386012668,["GJX@GJXAIOU",[[1,10546,"·"]],[10546,10546],[10547,10547]]],[1567386014136,["GJX@GJXAIOU",[[-1,10546,"·"]],[10547,10547],[10546,10546]]],[1567386015820,["GJX@GJXAIOU",[[1,10546,"``"]],[10546,10546],[10548,10548]]],[1567386017596,["GJX@GJXAIOU",[[1,10547," "]],[10547,10547],[10548,10548]]],[1567386027035,["GJX@GJXAIOU",[[1,10635,"`"]],[10635,10635],[10636,10636]]],[1567386029973,["GJX@GJXAIOU",[[1,10648,"` "]],[10648,10648],[10650,10650]]],[1567386030964,["GJX@GJXAIOU",[[1,10652,"`"]],[10652,10652],[10653,10653]]],[1567386033203,["GJX@GJXAIOU",[[1,10664,"` "]],[10664,10664],[10666,10666]]],[1567386034955,["GJX@GJXAIOU",[[1,10674,"`"]],[10674,10674],[10675,10675]]],[1567386036508,["GJX@GJXAIOU",[[1,10686,"` "]],[10686,10686],[10688,10688]]],[1567386095723,["GJX@GJXAIOU",[[1,11271,"`"]],[11271,11271],[11272,11272]]],[1567386096780,["GJX@GJXAIOU",[[1,11275,"`"]],[11275,11275],[11276,11276]]],[1567386098332,["GJX@GJXAIOU",[[1,11257,"`"]],[11257,11257],[11258,11258]]],[1567386099556,["GJX@GJXAIOU",[[1,11261,"`"]],[11261,11261],[11262,11262]]],[1567386100661,["GJX@GJXAIOU",[[1,11251,"`"]],[11251,11251],[11252,11252]]],[1567386102068,["GJX@GJXAIOU",[[1,11255,"`"]],[11255,11255],[11256,11256]]],[1567386106708,["GJX@GJXAIOU",[[1,11300," "]],[11300,11300],[11301,11301]]],[1567386136015,["GJX@GJXAIOU",[[1,11805," "]],[11805,11805],[11806,11806]]],[1567386137913,["GJX@GJXAIOU",[[-1,11807," "]],[11808,11808],[11807,11807]]],[1567413535039,["GJX@GJXAIOU",[[-1,42,"3"]],[43,43],[42,42]]],[1567413537783,["GJX@GJXAIOU",[[1,34,"_"],[1,42,"3"]],[34,34],[35,35]]],[1567413538136,["GJX@GJXAIOU",[[1,35,"1"]],[35,35],[36,36]]]],null,"GJX@GJXAIOU"],["4691df3e-efc8-4328-8603-7d9be052953d",1568554467862,"---\nstyle: summer\n---\n# FrameDay01_1 Mybatis3\n\n## 一、前言：数据库 SQL命令\n\n- 创建数据库并指定编码\n`Create database 数据库名 default character set utf8`\n \n - 创建表\n```java\nCreatetable 表名(\n   列名 类型 约束 auto_increament comment \"备注\"\n);\n```\n\n\n## 二、命名规范\n\n* 项目名:没有要求,不起中文\n* 包:公司域名倒写 com.bjsxt\n* 数据访问层:dao, persist, **mapper**\n* 实体:entity, model, bean,javabean, **pojo**\n* 业 务 逻 辑 : **service**，biz \n* 控制器: controller, **servlet**,action,web\n* 过滤器: filter\n* 异常: exception\n* 监听器:listener\n* 注释:\n  * 类上和方法上使用文档注释 `/** */`\n  * 在方法里面使用`/* */` 或`//`\n* 类: 大驼峰\n* 方法,属性:小驼峰\n\n## 四、MVC开发模式\n\n- M: Model 模型；实体类和业务和 dao\n- V: view 视图 ；现在一般 使用. JSP\n- C: Controller 控制器,现在使用servlet\n  - 作用：视图和逻辑分离\n- MVC 适用场景:大型项目开发.\n- **项目实现步骤**：\n  - 先设计数据库\n  - 再写实体类：用于封装数据\n  - 持久层DAO\n  - 业务逻辑\n  - 控制器\n  - 视图\n![MVC开发模式]($resource/MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F.png)\n\n\n## 五、框架概念\n\n- 框架:软件的半成品.未解决问题制定的一套约束,在提供功能基础上进行扩充。\n- **框架中一些不能被封装的代码(变量),需要使用框架者新建一个xml 文件,在文件中添加变量内容**。\n  - **需要建立特定位置和特定名称的配置文件**。\n  - **需要使用 xml 解析技术和反射技术**。\n\n**常用概念**\n- 类库:提供的类没有封装一定逻辑。\n举例:类库就是名言警句,写作文时引入名言警句\n\n- 框架:区别于类库,里面有一些约束。\n举例:框架是填空题\n\n## 六、MyBatis 简介\n\n- Mybatis 开源免费框架.原名叫 iBatis,2010 在 google  code,2013 年迁移到 github\n\n- 作用: **数据访问层（即是 Dao）框架**.\n  - 底层是对 JDBC 的封装.\n\n- mybatis 优点之一:\n  - **使用 mybatis 时不需要编写实现类,只需要写需要执行的 sql 命令。**\n\n\n## 七、MyBatis 使用\n\n### （一）环境搭建\n\n- 步骤一：导入 jar\n![MyBatis需要导入的Jar包]($resource/MyBatis%E9%9C%80%E8%A6%81%E5%AF%BC%E5%85%A5%E7%9A%84Jar%E5%8C%85.png)\n- 步骤二：**在 src 下新建全局配置文件**(编写 JDBC 四个变量)\n  - 没有名称和地址要求\n  - 在全局配置文件中引入 DTD 或 schema【使用见 Blogs -> DTD】\n    - 如果导入 dtd 后没有提示：Window--> preference --> XML --> XMl catalog --> add 按钮\n  - 全局配置文件内容\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n  PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n  \n<configuration>\n\t<!-- default 为引用 environment 的 id,即当前所使用的环境 -->\n\t<environments default=\"default\">\n\t\t<!-- 声明可以使用的环境 -->\n\t\t<environment id=\"default\">\n\t\t\t<!-- 使用原生JDBC事务 -->\n\t\t\t<transactionManager type=\"JDBC\"></transactionManager>\n\t\t\t<dataSource type=\"POOLED\">\n    \t\t  <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n    \t      <property name=\"url\" value=\"jdbc:mysql://localhost:3306/数据库名\"/>\n    \t\t  <property name=\"username\" value=\"root\"/>\n    \t      <property name=\"password\" value=\"GJXAIOU\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t<mappers>\n\t\t<mapper resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n\t</mappers>\n</configuration>\n```\n\n- 步骤三：新建以 mapper 结尾的包,在包下新建:实体类名+Mapper.xml\n  - 文件作用：编写需要执行的 SQL 命令\n  - 把 xml 文件理解成实现类.\n xml 文件内容为：\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:表示方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect * from flower\n\t</select>\n</mapper>\n```\n\n- 步骤四：测试结果(只有在单独使用 mybatis 时使用,最后 ssm 整合时下面代码不需要编写\n```java\nimport com.bjsxt.pojo.Flower;\n\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n### （二）环境搭建详解\n\n**全局配置文件中内容**\n- <transactionManager/> type 属性可取值\n  - JDBC,事务管理使用 JDBC 原生事务管理方式\n  - MANAGED 把事务管理转交给其他容器.相当于设置原生JDBC 事务setAutoMapping(false);\n- <dataSouce/>type 属性可取值：\n  - POOLED 使用数据库连接池\n  - UNPOOLED 不使用数据库连接池,和直接使用 JDBC 一样\n  - JNDI :是 java 命名目录接口技术.\n\n## 八、数据库连接池【补充知识】\n\n- 在内存中开辟一块空间,存放多个数据库连接对象. \n- JDBC Tomcat Pool,直接由 tomcat 产生数据库连接池. \n- 图示:数据库连接池中有很多连接，他们可能处于 Active 或者 Idle 等等状态；\n  - active 活跃状态:当前连接对象被应用程序使用中\n  - Idle 空闲状态:等待应用程序使用\n- 使用数据库连接池的目的\n  - 在高频率访问数据库时,使用数据库连接池可以降低服务器系统压力,提升程序运行效率.\n    -  小型项目不适用数据库连接池.\n- 实现 JDBC tomcat Pool 的步骤.\n  - 在 web 项目的 META-INF 中存放 context.xml,在 context.xml 编写数据库连接池相关属性\n  - 把项目发布到 tomcat 中,则数据库连接池产生了\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\t<Resource\n\t\tdriverClassName=\"com.mysql.jdbc.Driver\"\n\t\turl=\"jdbc:mysql://localhost:3306/ssm\"\n\t\tusername=\"root\"\n\t\tpassword=\"smallming\"\n\t\tmaxActive=\"50\"\n\t\tmaxIdle=\"20\"\n\t\tname=\"test\"\n\t\tauth=\"Container\"\n\t\tmaxWait=\"10000\"\n\t\ttype=\"javax.sql.DataSource\"\n\t/>\n</Context>\n```\n\n - 可以在 Java 中使用 JNDI 获取数据库连接池中对象\n  - Context:上下文接口.context.xml 文件对象类型；代码见下面\n  - 当关闭连接对象时,把连接对象归还给数据库连接池,把状态改变成 Idle\n```java\n@WebServlet(\"/pool\")\npublic class DemoServlet extends HttpServlet {\n\t@Override\n\tprotected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n  \t  try {\n  \t\tContext cxt = new InitialContext();\n  \t\tDataSource ds = (DataSource) cxt.lookup(\"java:comp/env/test\");\n  \t\tConnection conn = ds.getConnection();\n  \t\tPreparedStatement ps = conn.prepareStatement(\"select * from flower\");\n  \t\tResultSet rs = ps.executeQuery();\n  \t\tres.setContentType(\"text/html;charset=utf-8\");\n  \t\tPrintWriter out = res.getWriter();\n  \t\twhile(rs.next()){\n  \t\t\tout.print(rs.getInt(1)+\"&nbsp;&nbsp;&nbsp;&nbsp;\"+rs.getString(2)+\"<br/>\");\n  \t\t}\n  \t\tout.flush();\n  \t\tout.close();\n  \t\trs.close();\n  \t} catch (NamingException e) {\n  \t\te.printStackTrace();\n  \t} catch (SQLException e) {\n  \t\te.printStackTrace();\n  \t}\n  }\n}\n```\n\n\n## 九、三种查询方式\n\n- `selectList()`  返回值为 `List<resultType  属性控制>`\n适用于查询结果都需要遍历的需求\n\n- `selectOne()` 返回值 `Object`,\n适用于返回结果只是变量或一行数据时\n\n- `selectMap()` 返回值 `Map`\n  - 适用于需要在查询结果中通过某列的值取到这行数据的需求.\n  - `Map<key,resultType  属性控制>`\n```java\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t// MyBatis 默认不加载配置文件，因此需要先加载配置文件，返回整个配置文件的流对象    \n\t// 在数据访问层处理异常和在控制器中处理异常，一般在 service 中只抛出异常；\n\t\tInputStream is = Resources.getResourceAsStream(\"mybatis.xml\");\n\t\t//使用工厂设计模式\n\t\t// 前面是工厂       实例化工厂对象时使用的是构建者设计模式   它的名称标志:后面有Builder \n\t\t// 构建者设计模式意义: 简化对象实例化过程\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\t// 整个 sqlsession 就是 MyBatis 中 API 封装的对象,增删改查都在里面\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\t// selectList\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t// selectOne\n\t\tint count = session.selectOne(\"a.b.selById\");\n\t\tSystem.out.println(count);\n\t\t\n\t\t// selectMap\n\t\t//把数据库中哪个列的值当作map的key\n\t\tMap<Object, Object> map = session.selectMap(\"a.b.c\", \"name123\");\n\t\tSystem.out.println(map);\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n对应的 实体类 Mapper.xml 文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list,在resultType中写List的泛型,因为mybatis\n\t\t对jdbc封装,一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t// 这里的 int 相当于 Ingeter\n\t<select id=\"selById\" resultType=\"int\">\n\t\tselect count(*) from flower\n\t</select>\n\t\n\t<select id=\"c\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n</mapper>\n```\n\n\n\n##  十、注解\n\n- 注解存在的意义:简化 xml 文件的开发；\n- 注解在 servlet 3.0 规范之后大力推广的；\n- 注解前面的@XXX,表示引用一个 @interface；\n  - @interface 表示注解声明\n- 注解可以有属性,因为注解其实就是一个接口(类)；\n- 每次使用注解都需要导包\n- 注解语法: `@XXXX(属性名= 值)`\n- 值的分类\n  - 如果值是基本数据类型或字符串: `属性名=值`；\n  - 如果值是数组类型: `属性名={值,值}`；\n    - 如果只有一个值可以省略大括号；\n  - 如果值是类类型：`属性名=@名称`\n- 如果注解只需要给一个属性赋值,且这个属性是默认属性,可以省略属性名\n\n\n## 十一、路径\n\n* 编写路径为了告诉编译器如何找到其他资源；\n\n* 路径分类\n  * 2.1 相对路径: 从当前资源出发找到其他资源的过程\n  * 2.2 绝对路径: 从根目录(服务器根目录或项目根目录)出发找到其他资源的过程\n    * 2.2.1 标志: 只要以/开头的都是绝对路径\n- 绝对路径:\n  - 如果是请求转发 / 表示项目根目录(WebContent)\n  - 其他重定向,<img/> <script/>,<style/>,location.href 等/都表示服务器根目录(tomcat/webapps 文件夹)\n- 如果客户端请求的控制器,控制器转发到JSP 后,jsp 中如果使用相对路径,需要按照控制器的路径去找其他资源；\n  - 保险办法:使用绝对路径,可以防止上面的问题；\n\n## 十二、Log4J\n- 由 apache 推出的开源免费日志处理的类库；\n\n- 为什么需要日志:\n  - 在项目中编写 System.out.println();输出到控制台,当项目发布到 tomcat 后,没有控制台(在命令行界面能看见.),不容易观察一些输出结果。\n  - **log4j 作用**：不仅能把内容输出到控制台,还能把内容输出到文件中.便于观察结果。\n\n- **使用步骤**:\n  - 导入 log4j-xxx.jar\n  - 在 src 下新建 log4j.properties(路径和名称都不允许改变)\n    - 在 ConversionPattern 中书写表达式（就是日志输出的格式）；\n    - log4j.appender.LOGFILE.File  日志文件位置及名称(日志文件扩展名.log)\n```java\n// 遇到什么级别才输出：调试信息输出， 输出到控制台，输出到 log 文件\nlog4j.rootCategory=DEBUG, CONSOLE, LOGFILE\n// 向控制台输出相关的配置\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout log4j.appender.CONSOLE.layout.ConversionPattern=%C %d{YYYY-MM-dd hh:mm:ss}%m  %n\n// 向日志文件输出的相关的配置\nlog4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=E:/my.log \nlog4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.Patter nLayout log4j.appender.LOGFILE.layout.ConversionPattern=%C\t%m %L %n\n```\n\n- log4j 输出级别（一共五个级别）\n  - fatal(致命错误) >  error  ( 错误)  >  warn  ( 警告)  >  info(普通信息)  >  debug(调试信息)\n  - 在 log4j.properties 的第一行中控制输出级别，**只有大于等于该级别信息才输出**\n\n- log4j 输出目的地\n  -  在一行控制输出目的地，其中 CONSOLE 表示控制台 ，LOGFILE 表示文件\n\n![log4j输出目的地]($resource/log4j%E8%BE%93%E5%87%BA%E7%9B%AE%E7%9A%84%E5%9C%B0.jpg)\n\n在实际使用：新建一个类，例如：Test类\n- 使用方法一：\n```java\nLogger  logger = Logger.getLogger(Test.class);\n// 这里以 debug 为例，具体的方法看上面输出级别调用不同的方法\nlogger.debug(\"这是调试信息\"); \n```\n- 使用方法二：\n在 catch 中 ： `logger.error(e.getMessage());` 即可，注意在log4j配置文件中加上相关的表达式；\n\n- pattern 中常用几个表达式（区分大小写）\n  - %C 输出包名+类名；\n  - %d{YYYY-MM-dd  HH:mm:ss} 时间；\n  - %L 行号\n  - %m 信息\n  - %n 换行\n上面可以多个一起使用， 中间空格就行\n示例如下：\n\n![pattern示例配置]($resource/pattern%E7%A4%BA%E4%BE%8B%E9%85%8D%E7%BD%AE.png)\n\n\n\n# 十三、<settings>标签\n\n- 在 mybatis 全局配置文件中通过<settings>标签控制 mybatis 全局开关\n- 在 mybatis.xml 中开启 log4j 命令如下：\n  -  必须保证有 log4j.jar\n  -  在 src 下有 log4j.properties\n```java\n<settings>\n    <setting  name=\"logImpl\"  value=\"LOG4J\"/>\n</settings>\n```\n\n-  log4j 中可以输出指定内容的日志(控制某个局部内容的日志级别) ：直接在 log4j.properties 中设置；\n    -  命名级别(包级别): `<mapper>namespace 属性中除了最后一个类名`\n例如 `namespace=”com.bjsxt.mapper.PeopleMapper”` 其中包级别为 `com.bjsxt.mapper` ,需要在 `log4j.propeties` 中做两件事情  \n      - 先在总体级别调成 Error，这样可以不输出无用信息\n      -  在设置某个指定位置级别为 DEBUG\n\n![根据命名空间设置不同优先级]($resource/%E6%A0%B9%E6%8D%AE%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E4%BC%98%E5%85%88%E7%BA%A7.png)\n\n  - 类级别\n    -  namespace 属性值 ,相当于namespace 类名\n  - 方法级别\n    - 使用 namespace 属性值+标签 id 属性值\n\n## 十四、 parameterType 属性（Mybatis 中参数设置）\n\n- 在 XXXMapper.xml  中`<select>` `<delete>`等标签的 `parameterType` 可以控制参数类型（例如可以传入 select 语句的参数，控制输入参数的类型）\n\n- SqlSession 的 `selectList()` 和 `selectOne()` 的第二个参数和 `selectMap()` 的第三个参数都表示方法的参数.\n  - 示例：\n```java\nPeople  p  =  session.selectOne(\"a.b.selById\",1);\nSystem.out.println(p);\n```\n  - 在 实例名Mapper.xml  中可以通过`#{}`获取参数（代码见下）\n    - `parameterType`  控制参数类型\n    - `#{}`  获取参数内容\n      - 使用索引,从 0 开始 `#{0}`表示第一个参数\n      - 也可以使用`#{param1}`第一个参数\n      - 如果**只有一个参数(其参数应该是基本数据类型或 String)**,mybatis 对#{}里面内容没有要求只要写内容即可.\n      - 如果参数是对象`#{属性名}`\n      -  如果参数是 map， 写成`#{key}` ：当需要传递多个参数时候，目前只能使用 map 或者对象\n```java\n<select id=\"selById\"\n  resultType=\"com.bjsxt.pojo.People\"  parameterType=\"int\">\n  select * from people where id=#{0}\n</select>\n```\n\n- `#{}` 和 `${}` 的 区 别\n  - `#{}` 获取参数的内容,支持索引获取,或者使用 param1 获取指定位置参数,并且 SQL 使用?占位符\n  -  `${}` 字符串拼接，不使用?,默认找`${内容}`内容的 get/set 方法,如果写数字,就是一个数字\n配置示例：\nPeopleMapper.xml\n```java\n<select id=\"test\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"com.bjsxt.pojo.People\"> \n  select * from people where id =  ${id}\n</select>\n```\nTest.java\n```java\nPeople peo =new People();\npeo.setId(1);\nPeople p = session.selectOne(\"a.b.selById\",people);\n```\n\n- 如果在 xml 文件中出现 “<” , “>” ,双引号 等特殊字符时可以使用 XML 文件转义标签(XML 自身的)，格式为：`<![CDATA[ 内 容 ]]>`\n\n-  mybatis 中实现 mysql  分页写法\n  -  ? 中不允许在关键字前后进行数学运算,需要在代码中计算完成后传递到 mapper.xml  中；\n\n  Java 中代码为：\n```java\n//显示几个\nint pageSize = 2;\n//第几页\nint pageNumber = 2;\n//如果希望传递多个参数,可以使用对象或map\nMap<String,Object> map = new HashMap<>();\nmap.put(\"pageSize\", pageSize);\nmap.put(\"pageStart\", pageSize*(pageNumber-1));\nList<People> p = session.selectList(\"a.b.page\",map);\n```\nmapper.xml 中代码为：\n```xml\n<select id=\"page\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十五、typeAliases 别名（在mybatis.xml中进行配置，命令如下）\n\n一共有三类：分别是系统内置的别名，给某个类的别名，\n- 系统内置别名: 就是把类型全小写（见文档 ）\n- 给某个类起别名\n    - alias=”自定义”\n    - 同时 mapper.xml  中 peo 引用 People 类\n```java\n<typeAliases>\n    <typeAlias type=\"com.bjsxt.pojo.People\" alias=\"peo\"/>\n</typeAliases>\n```\nmapper.xml 中内容为：  \n```java\n<select id=\"page\" resultType=\"peo\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n- 直接给某个包下所有类起别名,别名为类名,区分大小写\n  - mybatis.xml 中配置\n```java\n<typeAliases>\n    <package name=\"com.bjsxt.pojo\" />\n</typeAliases>\n```\n- mapper.xml  中通过类名引用\n```java\n<select id=\"page\" resultType=\"People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十六、MyBatis 实现新增 \n\n- 概念复习：下面三者本质相同，角度不同；\n  - 功能:从应用程序角度出发,软件具有哪些功能.\n  - 业务:完成功能时的逻辑.对应 Service 中一个方法\n  - 事务:从数据库角度出发,完成业务时需要执行的 SQL 集合,统称一个事务\n    - 事务回滚：如果在一个事务中某个 SQL 执行事务,希望回归到事务的原点,保证数据库数据的完整性.\n\n- 在 mybatis 中默认是关闭了 JDBC 的自动提交功能\n  -  每一个 SqlSession 默认都是不自动提交事务.\n  -  可以使用session.commit()提交事务.\n  - 也可以使用openSession(true);自动提交底层为：.setAutoCommit(true);\n- mybatis 底层是对 JDBC 的封装.\n  - JDBC 中 executeUpdate()执行新增,删除,修改的 SQL.方法的返回值 int,表示受影响的行数.\n  - 应为上面原因，因此 mybatis 中 `<insert> <delete> <update>` 标签没有 resultType 属性，认为返回值都是 int。\n\n- 在 openSession() 时 Mybatis 会创建 SqlSession 时同时创建一个 Transaction(事务对象),同时 autoCommit 都为 false\n  - 如果出现异常,应该 `session.rollback()` 回滚事务.\n\n- 实现新增的步骤\n  - 在 mapper.xml  中提供<insert>标签,标签没有返回值类型\n  - 通过 `session.insert()` 调用新增方法\nmapper.xml 值为；\n```xml\n<insert id=\"ins\" parameterType=\"People\">\ninsert into people values(default,#{name},#{age})\n</insert>\n```\n\n```java\nint index1 = session.insert(\"a.b.ins\", p);\nif(index1>0){\n   System.out.println(\"成功\");\n}else{\n  System.out.println(\"失败\");\n}\n```\n\n\n## 十二、MyBatis 实现修改\n\n- 在 mapper.xml 中提供<update>标签\n```java\n<update id=\"upd\" parameterType=\"People\">\n  update people set name = #{name} where id = #{id}\n</update>\n```\n- 编写代码\n```java\nPeople peo = new People();\npeo.setId(3);\npeo.setName(\"王五\");\nint index = session.update(\"a.b.upd\", peo);\nif(index>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\nsession.commit();\n```\n\n\n##  十三、mybatis 实现删除\n\n- 在 mapper.xml  提供<delete>标签\n```xml\n<delete id=\"del\" parameterType=\"int\">\n    delete from people where id = #{0}\n</delete>\n```\n\n- 编写代码\n```java\n int  del  =  session.delete(\"a.b.del\",3);\n\nif(del>0){\n   System.out.println(\"成功\");\n}else{\n   System.out.println(\"失败\");\n}\n\nsession.commit();\n```\n\n",[[1568554446838,["GJX@GJXAIOU",[[-1,535,"四"]],[536,536],[535,535]]],[1568554449704,["GJX@GJXAIOU",[[1,535,"san"]],[535,535],[538,538]]],[1568554451014,["GJX@GJXAIOU",[[-1,535,"san"]],[538,538],[535,535]]],[1568554452723,["GJX@GJXAIOU",[[1,535,"三"]],[535,535],[536,536]]],[1568554524744,["GJX@GJXAIOU",[[-1,590," "]],[591,591],[590,590]]],[1568554541551,["GJX@GJXAIOU",[[-1,812,"五"]],[813,813],[812,812]]],[1568554544459,["GJX@GJXAIOU",[[1,812,"四"]],[812,812],[813,813]]],[1568554552591,["GJX@GJXAIOU",[[-1,880,","]],[881,881],[880,880]]],[1568554553378,["GJX@GJXAIOU",[[1,880,"，"]],[880,880],[881,881]]],[1568554556975,["GJX@GJXAIOU",[[-1,898,","]],[899,899],[898,898]]],[1568554557690,["GJX@GJXAIOU",[[1,898,"，"]],[898,898],[899,899]]],[1568554561577,["GJX@GJXAIOU",[[1,892," "]],[892,892],[893,893]]],[1568554578481,["GJX@GJXAIOU",[[-1,1098,","],[1,1099,"，"]],[1098,1099],[1098,1099]]],[1568554580140,["GJX@GJXAIOU",[[-1,1118,","],[1,1119,"，"]],[1118,1119],[1118,1119]]],[1568554581084,["GJX@GJXAIOU",[[-1,1226,","],[1,1227,"，"]],[1226,1227],[1226,1227]]],[1568554582504,["GJX@GJXAIOU",[[-1,1801,","],[1,1802,"，"]],[1801,1802],[1801,1802]]],[1568554583455,["GJX@GJXAIOU",[[-1,2427,","],[1,2428,"，"]],[2427,2428],[2427,2428]]],[1568554584591,["GJX@GJXAIOU",[[-1,2804,","],[1,2805,"，"]],[2804,2805],[2804,2805]]],[1568554585483,["GJX@GJXAIOU",[[-1,2825,","],[1,2826,"，"]],[2825,2826],[2825,2826]]],[1568554586124,["GJX@GJXAIOU",[[-1,2845,","],[1,2846,"，"]],[2845,2846],[2845,2846]]],[1568554586904,["GJX@GJXAIOU",[[-1,2996,","],[1,2997,"，"]],[2996,2997],[2996,2997]]],[1568554588048,["GJX@GJXAIOU",[[-1,3588,","],[1,3589,"，"]],[3588,3589],[3588,3589]]],[1568554588752,["GJX@GJXAIOU",[[-1,3740,","],[1,3741,"，"]],[3740,3741],[3740,3741]]],[1568554589440,["GJX@GJXAIOU",[[-1,3814,","],[1,3815,"，"]],[3814,3815],[3814,3815]]],[1568554590096,["GJX@GJXAIOU",[[-1,3847,","],[1,3848,"，"]],[3847,3848],[3847,3848]]],[1568554590659,["GJX@GJXAIOU",[[-1,3998,","],[1,3999,"，"]],[3998,3999],[3998,3999]]],[1568554591316,["GJX@GJXAIOU",[[-1,4018,","],[1,4019,"，"]],[4018,4019],[4018,4019]]],[1568554591987,["GJX@GJXAIOU",[[-1,4116,","],[1,4117,"，"]],[4116,4117],[4116,4117]]],[1568554593004,["GJX@GJXAIOU",[[-1,4163,","],[1,4164,"，"]],[4163,4164],[4163,4164]]],[1568554594015,["GJX@GJXAIOU",[[-1,4586,","],[1,4587,"，"]],[4586,4587],[4586,4587]]],[1568554594672,["GJX@GJXAIOU",[[-1,4601,","],[1,4602,"，"]],[4601,4602],[4601,4602]]],[1568554599504,["GJX@GJXAIOU",[[-1,5570,","],[1,5571,"，"]],[5570,5571],[5570,5571]]],[1568554600200,["GJX@GJXAIOU",[[-1,5661,","],[1,5662,"，"]],[5661,5662],[5661,5662]]],[1568554601919,["GJX@GJXAIOU",[[-1,6158,","],[1,6159,"，"]],[6158,6159],[6158,6159]]],[1568554605616,["GJX@GJXAIOU",[[-1,6941,","],[1,6942,"，"]],[6941,6942],[6941,6942]]],[1568554606449,["GJX@GJXAIOU",[[-1,6962,","],[1,6963,"，"]],[6962,6963],[6962,6963]]],[1568554607090,["GJX@GJXAIOU",[[-1,6982,","],[1,6983,"，"]],[6982,6983],[6982,6983]]],[1568554614149,["GJX@GJXAIOU",[[-1,7436,","],[1,7437,"，"]],[7436,7437],[7436,7437]]],[1568554615088,["GJX@GJXAIOU",[[-1,7487,","],[1,7488,"，"]],[7487,7488],[7487,7488]]],[1568554616828,["GJX@GJXAIOU",[[-1,7600,","],[1,7601,"，"]],[7600,7601],[7600,7601]]],[1568554617547,["GJX@GJXAIOU",[[-1,7666,","],[1,7667,"，"]],[7666,7667],[7666,7667]]],[1568554618214,["GJX@GJXAIOU",[[-1,7677,","],[1,7678,"，"]],[7677,7678],[7677,7678]]],[1568554619616,["GJX@GJXAIOU",[[-1,7885,","],[1,7886,"，"]],[7885,7886],[7885,7886]]],[1568554620192,["GJX@GJXAIOU",[[-1,7902,","],[1,7903,"，"]],[7902,7903],[7902,7903]]],[1568554620769,["GJX@GJXAIOU",[[-1,7911,","],[1,7912,"，"]],[7911,7912],[7911,7912]]],[1568554621988,["GJX@GJXAIOU",[[-1,7971,","],[1,7972,"，"]],[7971,7972],[7971,7972]]],[1568554622612,["GJX@GJXAIOU",[[-1,7983,","],[1,7984,"，"]],[7983,7984],[7983,7984]]],[1568554623997,["GJX@GJXAIOU",[[-1,7997,","],[1,7998,"，"]],[7997,7998],[7997,7998]]],[1568554624595,["GJX@GJXAIOU",[[-1,8031,","],[1,8032,"，"]],[8031,8032],[8031,8032]]],[1568554625576,["GJX@GJXAIOU",[[-1,8133,","],[1,8134,"，"]],[8133,8134],[8133,8134]]],[1568554626160,["GJX@GJXAIOU",[[-1,8149,","],[1,8150,"，"]],[8149,8150],[8149,8150]]],[1568554626735,["GJX@GJXAIOU",[[-1,8167,","],[1,8168,"，"]],[8167,8168],[8167,8168]]],[1568554627280,["GJX@GJXAIOU",[[-1,8210,","],[1,8211,"，"]],[8210,8211],[8210,8211]]],[1568554632205,["GJX@GJXAIOU",[[-1,10143,","],[1,10144,"，"]],[10143,10144],[10143,10144]]],[1568554633421,["GJX@GJXAIOU",[[-1,10419,","],[1,10420,"，"]],[10419,10420],[10419,10420]]],[1568554635810,["GJX@GJXAIOU",[[-1,10903,","],[1,10904,"，"]],[10903,10904],[10903,10904]]],[1568554636816,["GJX@GJXAIOU",[[-1,10997,","],[1,10998,"，"]],[10997,10998],[10997,10998]]],[1568554638116,["GJX@GJXAIOU",[[-1,11290,","],[1,11291,"，"]],[11290,11291],[11290,11291]]],[1568554638712,["GJX@GJXAIOU",[[-1,11297,","],[1,11298,"，"]],[11297,11298],[11297,11298]]],[1568554639220,["GJX@GJXAIOU",[[-1,11318,","],[1,11319,"，"]],[11318,11319],[11318,11319]]],[1568554639977,["GJX@GJXAIOU",[[-1,11354,","],[1,11355,"，"]],[11354,11355],[11354,11355]]],[1568554640704,["GJX@GJXAIOU",[[-1,11379,","],[1,11380,"，"]],[11379,11380],[11379,11380]]],[1568554641273,["GJX@GJXAIOU",[[-1,11385,","],[1,11386,"，"]],[11385,11386],[11385,11386]]],[1568554648444,["GJX@GJXAIOU",[[-1,11713,","],[1,11714,"，"]],[11713,11714],[11713,11714]]],[1568554651090,["GJX@GJXAIOU",[[-1,11824,","],[1,11825,"，"]],[11824,11825],[11824,11825]]],[1568554652691,["GJX@GJXAIOU",[[-1,11940,","],[1,11941,"，"]],[11940,11941],[11940,11941]]],[1568554659520,["GJX@GJXAIOU",[[-1,12730,","],[1,12731,"，"]],[12730,12731],[12730,12731]]],[1568554660119,["GJX@GJXAIOU",[[-1,12736,","],[1,12737,"，"]],[12736,12737],[12736,12737]]],[1568554664075,["GJX@GJXAIOU",[[-1,13061,","],[1,13062,"，"]],[13061,13062],[13061,13062]]],[1568554665192,["GJX@GJXAIOU",[[-1,13120,","],[1,13121,"，"]],[13120,13121],[13120,13121]]],[1568554665999,["GJX@GJXAIOU",[[-1,13138,","],[1,13139,"，"]],[13138,13139],[13138,13139]]],[1568554667121,["GJX@GJXAIOU",[[-1,13176,","],[1,13177,"，"]],[13176,13177],[13176,13177]]],[1568554667836,["GJX@GJXAIOU",[[-1,13187,","],[1,13188,"，"]],[13187,13188],[13187,13188]]],[1568554668843,["GJX@GJXAIOU",[[-1,13411,","],[1,13412,"，"]],[13411,13412],[13411,13412]]],[1568554669685,["GJX@GJXAIOU",[[-1,13414,","],[1,13415,"，"]],[13414,13415],[13414,13415]]],[1568554671159,["GJX@GJXAIOU",[[-1,13433,","],[1,13434,"，"]],[13433,13434],[13433,13434]]],[1568554672939,["GJX@GJXAIOU",[[-1,13598,","],[1,13599,"，"]],[13598,13599],[13598,13599]]],[1568554674147,["GJX@GJXAIOU",[[-1,13632,","],[1,13633,"，"]],[13632,13633],[13632,13633]]],[1568554674959,["GJX@GJXAIOU",[[-1,13705,","],[1,13706,"，"]],[13705,13706],[13705,13706]]],[1568554682200,["GJX@GJXAIOU",[[-1,233,","],[1,234,"，"]],[233,234],[233,234]]],[1568554683434,["GJX@GJXAIOU",[[-1,271,","],[1,272,"，"]],[271,272],[271,272]]],[1568554683955,["GJX@GJXAIOU",[[-1,280,","],[1,281,"，"]],[280,281],[280,281]]],[1568554684507,["GJX@GJXAIOU",[[-1,304,","],[1,305,"，"]],[304,305],[304,305]]],[1568554684875,["GJX@GJXAIOU",[[-1,311,","],[1,312,"，"]],[311,312],[311,312]]],[1568554685153,["GJX@GJXAIOU",[[-1,317,","],[1,318,"，"]],[317,318],[317,318]]],[1568554685935,["GJX@GJXAIOU",[[-1,326,","],[1,327,"，"]],[326,327],[326,327]]],[1568554686814,["GJX@GJXAIOU",[[-1,383,","],[1,384,"，"]],[383,384],[383,384]]],[1568554687470,["GJX@GJXAIOU",[[-1,396,","],[1,397,"，"]],[396,397],[396,397]]],[1568554688153,["GJX@GJXAIOU",[[-1,403,","],[1,404,"，"]],[403,404],[403,404]]],[1568554689307,["GJX@GJXAIOU",[[-1,523,","],[1,524,"，"]],[523,524],[523,524]]],[1568554693780,["GJX@GJXAIOU",[[-1,617,","],[1,618,"，"]],[617,618],[617,618]]],[1568554694799,["GJX@GJXAIOU",[[-1,844,","],[1,845,"，"]],[844,845],[844,845]]],[1568554695651,["GJX@GJXAIOU",[[-1,1010,","],[1,1011,"，"]],[1010,1011],[1010,1011]]],[1568554696422,["GJX@GJXAIOU",[[-1,1033,","],[1,1034,"，"]],[1033,1034],[1033,1034]]],[1568554777605,["GJX@GJXAIOU",[[-1,1087,"."]],[1088,1088],[1087,1087]]],[1568554778552,["GJX@GJXAIOU",[[1,1087,"。"]],[1087,1087],[1088,1088]]],[1568554846734,["GJX@GJXAIOU",[[1,970,"  - \n"]],[969,969],[974,974]]],[1568554875552,["GJX@GJXAIOU",[[1,974,"是 MySQL Mapper Framework for Java"]],[974,974],[1007,1007]]],[1568555440123,["GJX@GJXAIOU",[[-1,1095,"六"]],[1096,1096],[1095,1095]]],[1568555441745,["GJX@GJXAIOU",[[1,1095,"五"]],[1095,1095],[1096,1096]]],[1568555445653,["GJX@GJXAIOU",[[-1,1290,"七"]],[1291,1291],[1290,1290]]],[1568555447403,["GJX@GJXAIOU",[[1,1290,"六"]],[1290,1290],[1291,1291]]],[1568556086676,["GJX@GJXAIOU",[[1,2343,"\n\t"]],[2341,2341],[2343,2343]]],[1568556120089,["GJX@GJXAIOU",[[1,2356,"\n\t"]],[2354,2354],[2356,2356]]],[1568556123789,["GJX@GJXAIOU",[[1,2356,"    、、"]],[2356,2356],[2362,2362]]],[1568556124451,["GJX@GJXAIOU",[[-1,2360,"、、"]],[2362,2362],[2360,2360]]],[1568556125773,["GJX@GJXAIOU",[[1,2360,"// "]],[2360,2360],[2363,2363]]],[1568556128842,["GJX@GJXAIOU",[[-1,2360,"// "]],[2363,2363],[2360,2360]]],[1568556130397,["GJX@GJXAIOU",[[1,2360,"《》"]],[2360,2360],[2362,2362]]],[1568556131694,["GJX@GJXAIOU",[[-1,2360,"《》"]],[2362,2362],[2360,2360]]],[1568556132474,["GJX@GJXAIOU",[[1,2360,"<>"]],[2360,2360],[2362,2362]]],[1568556137956,["GJX@GJXAIOU",[[1,2361,"!----"]],[2361,2361],[2366,2366]]],[1568556140613,["GJX@GJXAIOU",[[1,2364,"  "]],[2364,2364],[2366,2366]]],[1568556173742,["GJX@GJXAIOU",[[1,2365,"配置实体类Mapper文件"]],[2365,2365],[2378,2378]]],[1568556176102,["GJX@GJXAIOU",[[1,2376," "]],[2376,2376],[2377,2377]]],[1568556177860,["GJX@GJXAIOU",[[1,2370," "]],[2370,2370],[2371,2371]]],[1568556288450,["GJX@GJXAIOU",[[-1,2579,"java"]],[2583,2583],[2579,2579]]],[1568556292709,["GJX@GJXAIOU",[[1,2579,"xml"]],[2579,2579],[2582,2582]]],[1568556297873,["GJX@GJXAIOU",[[1,2548,"**"],[1,2562,"**"]],[2548,2562],[2548,2566]]],[1568556299899,["GJX@GJXAIOU",[[-1,2566,"."]],[2567,2567],[2566,2566]]],[1568556300470,["GJX@GJXAIOU",[[1,2566,";"]],[2566,2566],[2567,2567]]],[1568556301410,["GJX@GJXAIOU",[[-1,2566,";"]],[2567,2567],[2566,2566]]],[1568556301967,["GJX@GJXAIOU",[[1,2566,"；"]],[2566,2566],[2567,2567]]],[1568556315261,["GJX@GJXAIOU",[[-1,1623,"java"]],[1627,1627],[1623,1623]]],[1568556317672,["GJX@GJXAIOU",[[1,1623,"xml"]],[1623,1623],[1626,1626]]],[1568556426908,["GJX@GJXAIOU",[[1,2582,"FlowerMapper."]],[2582,2582],[2595,2595]]],[1568556428900,["GJX@GJXAIOU",[[-1,2594,"."]],[2595,2595],[2594,2594]]],[1568556429859,["GJX@GJXAIOU",[[1,2594,"_"]],[2594,2594],[2595,2595]]],[1568556538948,["GJX@GJXAIOU",[[1,1623,"MyBatsi"]],[1623,1623],[1630,1630]]],[1568556540169,["GJX@GJXAIOU",[[-1,1627,"tsi"]],[1630,1630],[1627,1627]]],[1568556542676,["GJX@GJXAIOU",[[1,1627,"tis_"]],[1627,1627],[1631,1631]]]],null,"GJX@GJXAIOU"],["f7f2871e-473d-49ba-8f10-bc0a0a81d621",1568591365383,"---\nstyle: summer\n---\n# FrameDay01_1 Mybatis3\n\n## 一、前言：数据库 SQL命令\n\n- 创建数据库并指定编码\n`Create database 数据库名 default character set utf8`\n \n - 创建表\n```java\nCreatetable 表名(\n   列名 类型 约束 auto_increament comment \"备注\"\n);\n```\n\n\n## 二、命名规范\n\n* 项目名:没有要求，不起中文\n* 包:公司域名倒写 com.bjsxt\n* 数据访问层:dao， persist， **mapper**\n* 实体:entity， model， bean，javabean， **pojo**\n* 业 务 逻 辑 : **service**，biz \n* 控制器: controller， **servlet**，action，web\n* 过滤器: filter\n* 异常: exception\n* 监听器:listener\n* 注释:\n  * 类上和方法上使用文档注释 `/** */`\n  * 在方法里面使用`/* */` 或`//`\n* 类: 大驼峰\n* 方法，属性:小驼峰\n\n## 三、MVC开发模式\n\n- M: Model 模型；实体类和业务和 dao\n- V: view 视图 ；现在一般使用. JSP\n- C: Controller 控制器，现在使用servlet\n  - 作用：视图和逻辑分离\n- MVC 适用场景:大型项目开发.\n- **项目实现步骤**：\n  - 先设计数据库\n  - 再写实体类：用于封装数据\n  - 持久层DAO\n  - 业务逻辑\n  - 控制器\n  - 视图\n![MVC开发模式]($resource/MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F.png)\n\n\n## 四、框架概念\n\n- 框架:软件的半成品.未解决问题制定的一套约束，在提供功能基础上进行扩充。\n- **框架中一些不能被封装的代码(变量)，需要使用框架者新建一个 xml 文件，在文件中添加变量内容**。\n  - **需要建立特定位置和特定名称的配置文件**。\n  - **需要使用 xml 解析技术和反射技术**。\n  - 是 MySQL Mapper Framework for Java\n\n**常用概念**\n- 类库:提供的类没有封装一定逻辑。\n举例:类库就是名言警句，写作文时引入名言警句\n\n- 框架:区别于类库，里面有一些约束。\n举例:框架是填空题\n\n## 五、MyBatis 简介\n\n- Mybatis 开源免费框架。原名叫 iBatis，2010 在 google  code，2013 年迁移到 github\n\n- 作用: **数据访问层（即是 Dao）框架**.\n  - 底层是对 JDBC 的封装.\n\n- mybatis 优点之一:\n  - **使用 mybatis 时不需要编写实现类，只需要写需要执行的 sql 命令。**\n\n\n## 六、MyBatis 使用\n\n### （一）环境搭建\n\n- 步骤一：导入 jar\n![MyBatis需要导入的Jar包]($resource/MyBatis%E9%9C%80%E8%A6%81%E5%AF%BC%E5%85%A5%E7%9A%84Jar%E5%8C%85.png)\n- 步骤二：**在 src 下新建全局配置文件**(编写 JDBC 四个变量)\n  - 没有名称和地址要求\n  - 在全局配置文件中引入 DTD 或 schema【使用见 Blogs -> DTD】\n    - 如果导入 dtd 后没有提示：Window--> preference --> XML --> XMl catalog --> add 按钮\n  - 全局配置文件内容\n```MyBatis_xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n  PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n  \n<configuration>\n\t<!-- default 为引用 environment 的 id，即当前所使用的环境 -->\n\t<environments default=\"default\">\n\t\t<!-- 声明可以使用的环境 -->\n\t\t<environment id=\"default\">\n\t\t\t<!-- 使用原生JDBC事务 -->\n\t\t\t<transactionManager type=\"JDBC\"></transactionManager>\n\t\t\t<dataSource type=\"POOLED\">\n    \t\t  <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n    \t      <property name=\"url\" value=\"jdbc:mysql://localhost:3306/数据库名\"/>\n    \t\t  <property name=\"username\" value=\"root\"/>\n    \t      <property name=\"password\" value=\"GJXAIOU\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t\n\t<mappers>\n\t    <!-- 配置实体类 Mapper 文件 -->\n\t\t<mapper resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n\t</mappers>\n</configuration>\n```\n\n- 步骤三：新建以 mapper 结尾的包，在包下新建:实体类名+Mapper.xml\n  - 文件作用：编写需要执行的 SQL 命令\n  - **把 xml 文件理解成实现类**；\n xml 文件内容为：\n```FlowerMapper_xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:表示方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list，在resultType中写List的泛型，因为mybatis\n\t\t对jdbc封装，一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect * from flower\n\t</select>\n</mapper>\n```\n\n- 步骤四：测试结果(只有在单独使用 mybatis 时使用，最后 ssm 整合时下面代码不需要编写\n```java\nimport com.bjsxt.pojo.Flower;\n\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n### （二）环境搭建详解\n\n**全局配置文件中内容**\n- <transactionManager/> type 属性可取值\n  - JDBC，事务管理使用 JDBC 原生事务管理方式\n  - MANAGED 把事务管理转交给其他容器.相当于设置原生JDBC 事务setAutoMapping(false);\n- <dataSouce/>type 属性可取值：\n  - POOLED 使用数据库连接池\n  - UNPOOLED 不使用数据库连接池，和直接使用 JDBC 一样\n  - JNDI :是 java 命名目录接口技术.\n\n## 八、数据库连接池【补充知识】\n\n- 在内存中开辟一块空间，存放多个数据库连接对象. \n- JDBC Tomcat Pool，直接由 tomcat 产生数据库连接池. \n- 图示:数据库连接池中有很多连接，他们可能处于 Active 或者 Idle 等等状态；\n  - active 活跃状态:当前连接对象被应用程序使用中\n  - Idle 空闲状态:等待应用程序使用\n- 使用数据库连接池的目的\n  - 在高频率访问数据库时，使用数据库连接池可以降低服务器系统压力，提升程序运行效率.\n    -  小型项目不适用数据库连接池.\n- 实现 JDBC tomcat Pool 的步骤.\n  - 在 web 项目的 META-INF 中存放 context.xml，在 context.xml 编写数据库连接池相关属性\n  - 把项目发布到 tomcat 中，则数据库连接池产生了\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\t<Resource\n\t\tdriverClassName=\"com.mysql.jdbc.Driver\"\n\t\turl=\"jdbc:mysql://localhost:3306/ssm\"\n\t\tusername=\"root\"\n\t\tpassword=\"smallming\"\n\t\tmaxActive=\"50\"\n\t\tmaxIdle=\"20\"\n\t\tname=\"test\"\n\t\tauth=\"Container\"\n\t\tmaxWait=\"10000\"\n\t\ttype=\"javax.sql.DataSource\"\n\t/>\n</Context>\n```\n\n - 可以在 Java 中使用 JNDI 获取数据库连接池中对象\n  - Context:上下文接口.context.xml 文件对象类型；代码见下面\n  - 当关闭连接对象时，把连接对象归还给数据库连接池，把状态改变成 Idle\n```java\n@WebServlet(\"/pool\")\npublic class DemoServlet extends HttpServlet {\n\t@Override\n\tprotected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n  \t  try {\n  \t\tContext cxt = new InitialContext();\n  \t\tDataSource ds = (DataSource) cxt.lookup(\"java:comp/env/test\");\n  \t\tConnection conn = ds.getConnection();\n  \t\tPreparedStatement ps = conn.prepareStatement(\"select * from flower\");\n  \t\tResultSet rs = ps.executeQuery();\n  \t\tres.setContentType(\"text/html;charset=utf-8\");\n  \t\tPrintWriter out = res.getWriter();\n  \t\twhile(rs.next()){\n  \t\t\tout.print(rs.getInt(1)+\"&nbsp;&nbsp;&nbsp;&nbsp;\"+rs.getString(2)+\"<br/>\");\n  \t\t}\n  \t\tout.flush();\n  \t\tout.close();\n  \t\trs.close();\n  \t} catch (NamingException e) {\n  \t\te.printStackTrace();\n  \t} catch (SQLException e) {\n  \t\te.printStackTrace();\n  \t}\n  }\n}\n```\n\n\n## 九、三种查询方式\n\n- `selectList()`  返回值为 `List<resultType  属性控制>`\n适用于查询结果都需要遍历的需求\n\n- `selectOne()` 返回值 `Object`，\n适用于返回结果只是变量或一行数据时\n\n- `selectMap()` 返回值 `Map`\n  - 适用于需要在查询结果中通过某列的值取到这行数据的需求.\n  - `Map<key，resultType  属性控制>`\n```java\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t// MyBatis 默认不加载配置文件，因此需要先加载配置文件，返回整个配置文件的流对象    \n\t// 在数据访问层处理异常和在控制器中处理异常，一般在 service 中只抛出异常；\n\t\tInputStream is = Resources.getResourceAsStream(\"mybatis.xml\");\n\t\t//使用工厂设计模式\n\t\t// 前面是工厂       实例化工厂对象时使用的是构建者设计模式   它的名称标志:后面有Builder \n\t\t// 构建者设计模式意义: 简化对象实例化过程\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\t// 整个 sqlsession 就是 MyBatis 中 API 封装的对象，增删改查都在里面\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\t// selectList\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t// selectOne\n\t\tint count = session.selectOne(\"a.b.selById\");\n\t\tSystem.out.println(count);\n\t\t\n\t\t// selectMap\n\t\t//把数据库中哪个列的值当作map的key\n\t\tMap<Object, Object> map = session.selectMap(\"a.b.c\", \"name123\");\n\t\tSystem.out.println(map);\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n对应的 实体类 Mapper.xml 文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list，在resultType中写List的泛型，因为mybatis\n\t\t对jdbc封装，一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t// 这里的 int 相当于 Ingeter\n\t<select id=\"selById\" resultType=\"int\">\n\t\tselect count(*) from flower\n\t</select>\n\t\n\t<select id=\"c\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n</mapper>\n```\n\n\n\n##  十、注解\n\n- 注解存在的意义:简化 xml 文件的开发；\n- 注解在 servlet 3.0 规范之后大力推广的；\n- 注解前面的@XXX，表示引用一个 @interface；\n  - @interface 表示注解声明\n- 注解可以有属性，因为注解其实就是一个接口(类)；\n- 每次使用注解都需要导包\n- 注解语法: `@XXXX(属性名= 值)`\n- 值的分类\n  - 如果值是基本数据类型或字符串: `属性名=值`；\n  - 如果值是数组类型: `属性名={值，值}`；\n    - 如果只有一个值可以省略大括号；\n  - 如果值是类类型：`属性名=@名称`\n- 如果注解只需要给一个属性赋值，且这个属性是默认属性，可以省略属性名\n\n\n## 十一、路径\n\n* 编写路径为了告诉编译器如何找到其他资源；\n\n* 路径分类\n  * 2.1 相对路径: 从当前资源出发找到其他资源的过程\n  * 2.2 绝对路径: 从根目录(服务器根目录或项目根目录)出发找到其他资源的过程\n    * 2.2.1 标志: 只要以/开头的都是绝对路径\n- 绝对路径:\n  - 如果是请求转发 / 表示项目根目录(WebContent)\n  - 其他重定向，<img/> <script/>，<style/>，location.href 等/都表示服务器根目录(tomcat/webapps 文件夹)\n- 如果客户端请求的控制器，控制器转发到JSP 后，jsp 中如果使用相对路径，需要按照控制器的路径去找其他资源；\n  - 保险办法:使用绝对路径，可以防止上面的问题；\n\n## 十二、Log4J\n- 由 apache 推出的开源免费日志处理的类库；\n\n- 为什么需要日志:\n  - 在项目中编写 System.out.println();输出到控制台，当项目发布到 tomcat 后，没有控制台(在命令行界面能看见.)，不容易观察一些输出结果。\n  - **log4j 作用**：不仅能把内容输出到控制台，还能把内容输出到文件中.便于观察结果。\n\n- **使用步骤**:\n  - 导入 log4j-xxx.jar\n  - 在 src 下新建 log4j.properties(路径和名称都不允许改变)\n    - 在 ConversionPattern 中书写表达式（就是日志输出的格式）；\n    - log4j.appender.LOGFILE.File  日志文件位置及名称(日志文件扩展名.log)\n```java\n// 遇到什么级别才输出：调试信息输出， 输出到控制台，输出到 log 文件\nlog4j.rootCategory=DEBUG, CONSOLE, LOGFILE\n// 向控制台输出相关的配置\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout log4j.appender.CONSOLE.layout.ConversionPattern=%C %d{YYYY-MM-dd hh:mm:ss}%m  %n\n// 向日志文件输出的相关的配置\nlog4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=E:/my.log \nlog4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.Patter nLayout log4j.appender.LOGFILE.layout.ConversionPattern=%C\t%m %L %n\n```\n\n- log4j 输出级别（一共五个级别）\n  - fatal(致命错误) >  error  ( 错误)  >  warn  ( 警告)  >  info(普通信息)  >  debug(调试信息)\n  - 在 log4j.properties 的第一行中控制输出级别，**只有大于等于该级别信息才输出**\n\n- log4j 输出目的地\n  -  在一行控制输出目的地，其中 CONSOLE 表示控制台 ，LOGFILE 表示文件\n\n![log4j输出目的地]($resource/log4j%E8%BE%93%E5%87%BA%E7%9B%AE%E7%9A%84%E5%9C%B0.jpg)\n\n在实际使用：新建一个类，例如：Test类\n- 使用方法一：\n```java\nLogger  logger = Logger.getLogger(Test.class);\n// 这里以 debug 为例，具体的方法看上面输出级别调用不同的方法\nlogger.debug(\"这是调试信息\"); \n```\n- 使用方法二：\n在 catch 中 ： `logger.error(e.getMessage());` 即可，注意在log4j配置文件中加上相关的表达式；\n\n- pattern 中常用几个表达式（区分大小写）\n  - %C 输出包名+类名；\n  - %d{YYYY-MM-dd  HH:mm:ss} 时间；\n  - %L 行号\n  - %m 信息\n  - %n 换行\n上面可以多个一起使用， 中间空格就行\n示例如下：\n\n![pattern示例配置]($resource/pattern%E7%A4%BA%E4%BE%8B%E9%85%8D%E7%BD%AE.png)\n\n\n\n# 十三、<settings>标签\n\n- 在 mybatis 全局配置文件中通过<settings>标签控制 mybatis 全局开关\n- 在 mybatis.xml 中开启 log4j 命令如下：\n  -  必须保证有 log4j.jar\n  -  在 src 下有 log4j.properties\n```java\n<settings>\n    <setting  name=\"logImpl\"  value=\"LOG4J\"/>\n</settings>\n```\n\n-  log4j 中可以输出指定内容的日志(控制某个局部内容的日志级别) ：直接在 log4j.properties 中设置；\n    -  命名级别(包级别): `<mapper>namespace 属性中除了最后一个类名`\n例如 `namespace=”com.bjsxt.mapper.PeopleMapper”` 其中包级别为 `com.bjsxt.mapper` ，需要在 `log4j.propeties` 中做两件事情  \n      - 先在总体级别调成 Error，这样可以不输出无用信息\n      -  在设置某个指定位置级别为 DEBUG\n\n![根据命名空间设置不同优先级]($resource/%E6%A0%B9%E6%8D%AE%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E4%BC%98%E5%85%88%E7%BA%A7.png)\n\n  - 类级别\n    -  namespace 属性值 ，相当于namespace 类名\n  - 方法级别\n    - 使用 namespace 属性值+标签 id 属性值\n\n## 十四、 parameterType 属性（Mybatis 中参数设置）\n\n- 在 XXXMapper.xml  中`<select>` `<delete>`等标签的 `parameterType` 可以控制参数类型（例如可以传入 select 语句的参数，控制输入参数的类型）\n\n- SqlSession 的 `selectList()` 和 `selectOne()` 的第二个参数和 `selectMap()` 的第三个参数都表示方法的参数.\n  - 示例：\n```java\nPeople  p  =  session.selectOne(\"a.b.selById\",1);\nSystem.out.println(p);\n```\n  - 在 实例名Mapper.xml  中可以通过`#{}`获取参数（代码见下）\n    - `parameterType`  控制参数类型\n    - `#{}`  获取参数内容\n      - 使用索引，从 0 开始 `#{0}`表示第一个参数\n      - 也可以使用`#{param1}`第一个参数\n      - 如果**只有一个参数(其参数应该是基本数据类型或 String)**，mybatis 对#{}里面内容没有要求只要写内容即可.\n      - 如果参数是对象`#{属性名}`\n      -  如果参数是 map， 写成`#{key}` ：当需要传递多个参数时候，目前只能使用 map 或者对象\n```java\n<select id=\"selById\"\n  resultType=\"com.bjsxt.pojo.People\"  parameterType=\"int\">\n  select * from people where id=#{0}\n</select>\n```\n\n- `#{}` 和 `${}` 的 区 别\n  - `#{}` 获取参数的内容，支持索引获取，或者使用 param1 获取指定位置参数，并且 SQL 使用?占位符\n  -  `${}` 字符串拼接，不使用?，默认找`${内容}`内容的 get/set 方法，如果写数字，就是一个数字\n配置示例：\nPeopleMapper.xml\n```java\n<select id=\"test\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"com.bjsxt.pojo.People\"> \n  select * from people where id =  ${id}\n</select>\n```\nTest.java\n```java\nPeople peo =new People();\npeo.setId(1);\nPeople p = session.selectOne(\"a.b.selById\",people);\n```\n\n- 如果在 xml 文件中出现 “<” , “>” ，双引号 等特殊字符时可以使用 XML 文件转义标签(XML 自身的)，格式为：`<![CDATA[ 内 容 ]]>`\n\n-  mybatis 中实现 mysql  分页写法\n  -  ? 中不允许在关键字前后进行数学运算，需要在代码中计算完成后传递到 mapper.xml  中；\n\n  Java 中代码为：\n```java\n//显示几个\nint pageSize = 2;\n//第几页\nint pageNumber = 2;\n//如果希望传递多个参数，可以使用对象或map\nMap<String,Object> map = new HashMap<>();\nmap.put(\"pageSize\", pageSize);\nmap.put(\"pageStart\", pageSize*(pageNumber-1));\nList<People> p = session.selectList(\"a.b.page\",map);\n```\nmapper.xml 中代码为：\n```xml\n<select id=\"page\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十五、typeAliases 别名（在mybatis.xml中进行配置，命令如下）\n\n一共有三类：分别是系统内置的别名，给某个类的别名，\n- 系统内置别名: 就是把类型全小写（见文档 ）\n- 给某个类起别名\n    - alias=”自定义”\n    - 同时 mapper.xml  中 peo 引用 People 类\n```java\n<typeAliases>\n    <typeAlias type=\"com.bjsxt.pojo.People\" alias=\"peo\"/>\n</typeAliases>\n```\nmapper.xml 中内容为：  \n```java\n<select id=\"page\" resultType=\"peo\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n- 直接给某个包下所有类起别名，别名为类名，区分大小写\n  - mybatis.xml 中配置\n```java\n<typeAliases>\n    <package name=\"com.bjsxt.pojo\" />\n</typeAliases>\n```\n- mapper.xml  中通过类名引用\n```java\n<select id=\"page\" resultType=\"People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十六、MyBatis 实现新增 \n\n- 概念复习：下面三者本质相同，角度不同；\n  - 功能:从应用程序角度出发，软件具有哪些功能.\n  - 业务:完成功能时的逻辑.对应 Service 中一个方法\n  - 事务:从数据库角度出发，完成业务时需要执行的 SQL 集合，统称一个事务\n    - 事务回滚：如果在一个事务中某个 SQL 执行事务，希望回归到事务的原点，保证数据库数据的完整性.\n\n- 在 mybatis 中默认是关闭了 JDBC 的自动提交功能\n  -  每一个 SqlSession 默认都是不自动提交事务.\n  -  可以使用session.commit()提交事务.\n  - 也可以使用openSession(true);自动提交底层为：.setAutoCommit(true);\n- mybatis 底层是对 JDBC 的封装.\n  - JDBC 中 executeUpdate()执行新增，删除，修改的 SQL.方法的返回值 int，表示受影响的行数.\n  - 应为上面原因，因此 mybatis 中 `<insert> <delete> <update>` 标签没有 resultType 属性，认为返回值都是 int。\n\n- 在 openSession() 时 Mybatis 会创建 SqlSession 时同时创建一个 Transaction(事务对象)，同时 autoCommit 都为 false\n  - 如果出现异常，应该 `session.rollback()` 回滚事务.\n\n- 实现新增的步骤\n  - 在 mapper.xml  中提供<insert>标签，标签没有返回值类型\n  - 通过 `session.insert()` 调用新增方法\nmapper.xml 值为；\n```xml\n<insert id=\"ins\" parameterType=\"People\">\ninsert into people values(default,#{name},#{age})\n</insert>\n```\n\n```java\nint index1 = session.insert(\"a.b.ins\", p);\nif(index1>0){\n   System.out.println(\"成功\");\n}else{\n  System.out.println(\"失败\");\n}\n```\n\n\n## 十二、MyBatis 实现修改\n\n- 在 mapper.xml 中提供<update>标签\n```java\n<update id=\"upd\" parameterType=\"People\">\n  update people set name = #{name} where id = #{id}\n</update>\n```\n- 编写代码\n```java\nPeople peo = new People();\npeo.setId(3);\npeo.setName(\"王五\");\nint index = session.update(\"a.b.upd\", peo);\nif(index>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\nsession.commit();\n```\n\n\n##  十三、mybatis 实现删除\n\n- 在 mapper.xml  提供<delete>标签\n```xml\n<delete id=\"del\" parameterType=\"int\">\n    delete from people where id = #{0}\n</delete>\n```\n\n- 编写代码\n```java\n int  del  =  session.delete(\"a.b.del\",3);\n\nif(del>0){\n   System.out.println(\"成功\");\n}else{\n   System.out.println(\"失败\");\n}\n\nsession.commit();\n```\n\n",[[1568591364007,["GJX@GJXAIOU",[[1,1957," "]],[1957,1957],[1958,1958]]],[1568591366071,["GJX@GJXAIOU",[[1,1962," "]],[1962,1962],[1963,1963]]]],null,"GJX@GJXAIOU"],["b5202319-c1e9-42fe-950f-6f1cdccc3f6f",1569115888810,"---\nstyle: summer\n---\n# FrameDay01_1 Mybatis3\n\n## 一、前言：数据库 SQL命令\n\n- 创建数据库并指定编码\n`Create database 数据库名 default character set utf8`\n \n - 创建表\n```java\nCreatetable 表名(\n   列名 类型 约束 auto_increament comment \"备注\"\n);\n```\n\n\n## 二、命名规范\n\n* 项目名:没有要求，不起中文\n* 包:公司域名倒写 com.bjsxt\n* 数据访问层:dao， persist， **mapper**\n* 实体:entity， model， bean，javabean， **pojo**\n* 业 务 逻 辑 : **service**，biz \n* 控制器: controller， **servlet**，action，web\n* 过滤器: filter\n* 异常: exception\n* 监听器:listener\n* 注释:\n  * 类上和方法上使用文档注释 `/** */`\n  * 在方法里面使用`/* */` 或`//`\n* 类: 大驼峰\n* 方法，属性:小驼峰\n\n## 三、MVC开发模式\n\n- M: Model 模型；实体类和业务和 dao\n- V: view 视图 ；现在一般使用. JSP\n- C: Controller 控制器，现在使用servlet\n  - 作用：视图和逻辑分离\n- MVC 适用场景:大型项目开发.\n- **项目实现步骤**：\n  - 先设计数据库\n  - 再写实体类：用于封装数据\n  - 持久层DAO\n  - 业务逻辑\n  - 控制器\n  - 视图\n![MVC开发模式]($resource/MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F.png)\n\n\n## 四、框架概念\n\n- 框架:软件的半成品.未解决问题制定的一套约束，在提供功能基础上进行扩充。\n- **框架中一些不能被封装的代码(变量)，需要使用框架者新建一个 xml 文件，在文件中添加变量内容**。\n  - **需要建立特定位置和特定名称的配置文件**。\n  - **需要使用 xml 解析技术和反射技术**。\n  - 是 MySQL Mapper Framework for Java\n\n**常用概念**\n- 类库:提供的类没有封装一定逻辑。\n举例:类库就是名言警句，写作文时引入名言警句\n\n- 框架:区别于类库，里面有一些约束。\n举例:框架是填空题\n\n## 五、MyBatis 简介\n\n- Mybatis 开源免费框架。原名叫 iBatis，2010 在 google  code，2013 年迁移到 github\n\n- 作用: **数据访问层（即是 Dao）框架**.\n  - 底层是对 JDBC 的封装.\n\n- mybatis 优点之一:\n  - **使用 mybatis 时不需要编写实现类，只需要写需要执行的 sql 命令。**\n\n\n## 六、MyBatis 使用\n\n### （一）环境搭建\n\n- 步骤一：导入 jar\n![MyBatis需要导入的Jar包]($resource/MyBatis%E9%9C%80%E8%A6%81%E5%AF%BC%E5%85%A5%E7%9A%84Jar%E5%8C%85.png)\n- 步骤二：**在 src 下新建全局配置文件**(编写 JDBC 四个变量)\n  - 没有名称和地址要求\n  - 在全局配置文件中引入 DTD 或 schema【使用见 Blogs -> DTD】\n    - 如果导入 dtd 后没有提示：Window--> preference --> XML --> XMl catalog --> add 按钮\n  - 全局配置文件内容\n```MyBatis_xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\n  PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n  \n<configuration>\n\t<!-- default 为引用 environment 的 id，即当前所使用的环境 -->\n\t<environments default=\"default\">\n\t\t<!-- 声明可以使用的环境 -->\n\t\t<environment id=\"default\">\n\t\t\t<!-- 使用原生 JDBC 事务 -->\n\t\t\t<transactionManager type=\"JDBC\"></transactionManager>\n\t\t\t<dataSource type=\"POOLED\">\n    \t\t  <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n    \t      <property name=\"url\" value=\"jdbc:mysql://localhost:3306/数据库名\"/>\n    \t\t  <property name=\"username\" value=\"root\"/>\n    \t      <property name=\"password\" value=\"GJXAIOU\"/>\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n\t\n\t<mappers>\n\t    <!-- 配置实体类 Mapper 文件 -->\n\t\t<mapper resource=\"com/bjsxt/mapper/FlowerMapper.xml\"/>\n\t</mappers>\n</configuration>\n```\n\n- 步骤三：新建以 mapper 结尾的包，在包下新建:实体类名+Mapper.xml\n  - 文件作用：编写需要执行的 SQL 命令\n  - **把 xml 文件理解成实现类**；\n xml 文件内容为：\n```FlowerMapper_xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:表示方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list，在resultType中写List的泛型，因为mybatis\n\t\t对jdbc封装，一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect * from flower\n\t</select>\n</mapper>\n```\n\n- 步骤四：测试结果(只有在单独使用 mybatis 时使用，最后 ssm 整合时下面代码不需要编写\n```java\nimport com.bjsxt.pojo.Flower;\n\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"myabtis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n### （二）环境搭建详解\n\n**全局配置文件中内容**\n- <transactionManager/> type 属性可取值\n  - JDBC，事务管理使用 JDBC 原生事务管理方式\n  - MANAGED 把事务管理转交给其他容器.相当于设置原生JDBC 事务setAutoMapping(false);\n- <dataSouce/>type 属性可取值：\n  - POOLED 使用数据库连接池\n  - UNPOOLED 不使用数据库连接池，和直接使用 JDBC 一样\n  - JNDI :是 java 命名目录接口技术.\n\n## 八、数据库连接池【补充知识】\n\n- 在内存中开辟一块空间，存放多个数据库连接对象. \n- JDBC Tomcat Pool，直接由 tomcat 产生数据库连接池. \n- 图示:数据库连接池中有很多连接，他们可能处于 Active 或者 Idle 等等状态；\n  - active 活跃状态:当前连接对象被应用程序使用中\n  - Idle 空闲状态:等待应用程序使用\n- 使用数据库连接池的目的\n  - 在高频率访问数据库时，使用数据库连接池可以降低服务器系统压力，提升程序运行效率.\n    -  小型项目不适用数据库连接池.\n- 实现 JDBC tomcat Pool 的步骤.\n  - 在 web 项目的 META-INF 中存放 context.xml，在 context.xml 编写数据库连接池相关属性\n  - 把项目发布到 tomcat 中，则数据库连接池产生了\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\t<Resource\n\t\tdriverClassName=\"com.mysql.jdbc.Driver\"\n\t\turl=\"jdbc:mysql://localhost:3306/ssm\"\n\t\tusername=\"root\"\n\t\tpassword=\"smallming\"\n\t\tmaxActive=\"50\"\n\t\tmaxIdle=\"20\"\n\t\tname=\"test\"\n\t\tauth=\"Container\"\n\t\tmaxWait=\"10000\"\n\t\ttype=\"javax.sql.DataSource\"\n\t/>\n</Context>\n```\n\n - 可以在 Java 中使用 JNDI 获取数据库连接池中对象\n  - Context:上下文接口.context.xml 文件对象类型；代码见下面\n  - 当关闭连接对象时，把连接对象归还给数据库连接池，把状态改变成 Idle\n```java\n@WebServlet(\"/pool\")\npublic class DemoServlet extends HttpServlet {\n\t@Override\n\tprotected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n  \t  try {\n  \t\tContext cxt = new InitialContext();\n  \t\tDataSource ds = (DataSource) cxt.lookup(\"java:comp/env/test\");\n  \t\tConnection conn = ds.getConnection();\n  \t\tPreparedStatement ps = conn.prepareStatement(\"select * from flower\");\n  \t\tResultSet rs = ps.executeQuery();\n  \t\tres.setContentType(\"text/html;charset=utf-8\");\n  \t\tPrintWriter out = res.getWriter();\n  \t\twhile(rs.next()){\n  \t\t\tout.print(rs.getInt(1)+\"&nbsp;&nbsp;&nbsp;&nbsp;\"+rs.getString(2)+\"<br/>\");\n  \t\t}\n  \t\tout.flush();\n  \t\tout.close();\n  \t\trs.close();\n  \t} catch (NamingException e) {\n  \t\te.printStackTrace();\n  \t} catch (SQLException e) {\n  \t\te.printStackTrace();\n  \t}\n  }\n}\n```\n\n\n## 九、三种查询方式\n\n- `selectList()`  返回值为 `List<resultType  属性控制>`\n适用于查询结果都需要遍历的需求\n\n- `selectOne()` 返回值 `Object`，\n适用于返回结果只是变量或一行数据时\n\n- `selectMap()` 返回值 `Map`\n  - 适用于需要在查询结果中通过某列的值取到这行数据的需求.\n  - `Map<key，resultType  属性控制>`\n```java\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t// MyBatis 默认不加载配置文件，因此需要先加载配置文件，返回整个配置文件的流对象    \n\t// 在数据访问层处理异常和在控制器中处理异常，一般在 service 中只抛出异常；\n\t\tInputStream is = Resources.getResourceAsStream(\"mybatis.xml\");\n\t\t//使用工厂设计模式\n\t\t// 前面是工厂       实例化工厂对象时使用的是构建者设计模式   它的名称标志:后面有Builder \n\t\t// 构建者设计模式意义: 简化对象实例化过程\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\t// 整个 sqlsession 就是 MyBatis 中 API 封装的对象，增删改查都在里面\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\t// selectList\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t// selectOne\n\t\tint count = session.selectOne(\"a.b.selById\");\n\t\tSystem.out.println(count);\n\t\t\n\t\t// selectMap\n\t\t//把数据库中哪个列的值当作map的key\n\t\tMap<Object, Object> map = session.selectMap(\"a.b.c\", \"name123\");\n\t\tSystem.out.println(map);\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n对应的 实体类 Mapper.xml 文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namesapce:理解成实现类的全路径(包名+类名) -->\n<mapper namespace=\"a.b\" >\n\t<!-- id:方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list，在resultType中写List的泛型，因为mybatis\n\t\t对jdbc封装，一行一行读取数据\n\t-->\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t// 这里的 int 相当于 Ingeter\n\t<select id=\"selById\" resultType=\"int\">\n\t\tselect count(*) from flower\n\t</select>\n\t\n\t<select id=\"c\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n</mapper>\n```\n\n\n\n##  十、注解\n\n- 注解存在的意义:简化 xml 文件的开发；\n- 注解在 servlet 3.0 规范之后大力推广的；\n- 注解前面的@XXX，表示引用一个 @interface；\n  - @interface 表示注解声明\n- 注解可以有属性，因为注解其实就是一个接口(类)；\n- 每次使用注解都需要导包\n- 注解语法: `@XXXX(属性名= 值)`\n- 值的分类\n  - 如果值是基本数据类型或字符串: `属性名=值`；\n  - 如果值是数组类型: `属性名={值，值}`；\n    - 如果只有一个值可以省略大括号；\n  - 如果值是类类型：`属性名=@名称`\n- 如果注解只需要给一个属性赋值，且这个属性是默认属性，可以省略属性名\n\n\n## 十一、路径\n\n* 编写路径为了告诉编译器如何找到其他资源；\n\n* 路径分类\n  * 2.1 相对路径: 从当前资源出发找到其他资源的过程\n  * 2.2 绝对路径: 从根目录(服务器根目录或项目根目录)出发找到其他资源的过程\n    * 2.2.1 标志: 只要以/开头的都是绝对路径\n- 绝对路径:\n  - 如果是请求转发 / 表示项目根目录(WebContent)\n  - 其他重定向，<img/> <script/>，<style/>，location.href 等/都表示服务器根目录(tomcat/webapps 文件夹)\n- 如果客户端请求的控制器，控制器转发到JSP 后，jsp 中如果使用相对路径，需要按照控制器的路径去找其他资源；\n  - 保险办法:使用绝对路径，可以防止上面的问题；\n\n## 十二、Log4J\n- 由 apache 推出的开源免费日志处理的类库；\n\n- 为什么需要日志:\n  - 在项目中编写 System.out.println();输出到控制台，当项目发布到 tomcat 后，没有控制台(在命令行界面能看见.)，不容易观察一些输出结果。\n  - **log4j 作用**：不仅能把内容输出到控制台，还能把内容输出到文件中.便于观察结果。\n\n- **使用步骤**:\n  - 导入 log4j-xxx.jar\n  - 在 src 下新建 log4j.properties(路径和名称都不允许改变)\n    - 在 ConversionPattern 中书写表达式（就是日志输出的格式）；\n    - log4j.appender.LOGFILE.File  日志文件位置及名称(日志文件扩展名.log)\n```java\n// 遇到什么级别才输出：调试信息输出， 输出到控制台，输出到 log 文件\nlog4j.rootCategory=DEBUG, CONSOLE, LOGFILE\n// 向控制台输出相关的配置\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout log4j.appender.CONSOLE.layout.ConversionPattern=%C %d{YYYY-MM-dd hh:mm:ss}%m  %n\n// 向日志文件输出的相关的配置\nlog4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=E:/my.log \nlog4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.Patter nLayout log4j.appender.LOGFILE.layout.ConversionPattern=%C\t%m %L %n\n```\n\n- log4j 输出级别（一共五个级别）\n  - fatal(致命错误) >  error  ( 错误)  >  warn  ( 警告)  >  info(普通信息)  >  debug(调试信息)\n  - 在 log4j.properties 的第一行中控制输出级别，**只有大于等于该级别信息才输出**\n\n- log4j 输出目的地\n  -  在一行控制输出目的地，其中 CONSOLE 表示控制台 ，LOGFILE 表示文件\n\n![log4j输出目的地]($resource/log4j%E8%BE%93%E5%87%BA%E7%9B%AE%E7%9A%84%E5%9C%B0.jpg)\n\n在实际使用：新建一个类，例如：Test类\n- 使用方法一：\n```java\nLogger  logger = Logger.getLogger(Test.class);\n// 这里以 debug 为例，具体的方法看上面输出级别调用不同的方法\nlogger.debug(\"这是调试信息\"); \n```\n- 使用方法二：\n在 catch 中 ： `logger.error(e.getMessage());` 即可，注意在log4j配置文件中加上相关的表达式；\n\n- pattern 中常用几个表达式（区分大小写）\n  - %C 输出包名+类名；\n  - %d{YYYY-MM-dd  HH:mm:ss} 时间；\n  - %L 行号\n  - %m 信息\n  - %n 换行\n上面可以多个一起使用， 中间空格就行\n示例如下：\n\n![pattern示例配置]($resource/pattern%E7%A4%BA%E4%BE%8B%E9%85%8D%E7%BD%AE.png)\n\n\n\n# 十三、<settings>标签\n\n- 在 mybatis 全局配置文件中通过<settings>标签控制 mybatis 全局开关\n- 在 mybatis.xml 中开启 log4j 命令如下：\n  -  必须保证有 log4j.jar\n  -  在 src 下有 log4j.properties\n```java\n<settings>\n    <setting  name=\"logImpl\"  value=\"LOG4J\"/>\n</settings>\n```\n\n-  log4j 中可以输出指定内容的日志(控制某个局部内容的日志级别) ：直接在 log4j.properties 中设置；\n    -  命名级别(包级别): `<mapper>namespace 属性中除了最后一个类名`\n例如 `namespace=”com.bjsxt.mapper.PeopleMapper”` 其中包级别为 `com.bjsxt.mapper` ，需要在 `log4j.propeties` 中做两件事情  \n      - 先在总体级别调成 Error，这样可以不输出无用信息\n      -  在设置某个指定位置级别为 DEBUG\n\n![根据命名空间设置不同优先级]($resource/%E6%A0%B9%E6%8D%AE%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E4%BC%98%E5%85%88%E7%BA%A7.png)\n\n  - 类级别\n    -  namespace 属性值 ，相当于namespace 类名\n  - 方法级别\n    - 使用 namespace 属性值+标签 id 属性值\n\n## 十四、 parameterType 属性（Mybatis 中参数设置）\n\n- 在 XXXMapper.xml  中`<select>` `<delete>`等标签的 `parameterType` 可以控制参数类型（例如可以传入 select 语句的参数，控制输入参数的类型）\n\n- SqlSession 的 `selectList()` 和 `selectOne()` 的第二个参数和 `selectMap()` 的第三个参数都表示方法的参数.\n  - 示例：\n```java\nPeople  p  =  session.selectOne(\"a.b.selById\",1);\nSystem.out.println(p);\n```\n  - 在 实例名Mapper.xml  中可以通过`#{}`获取参数（代码见下）\n    - `parameterType`  控制参数类型\n    - `#{}`  获取参数内容\n      - 使用索引，从 0 开始 `#{0}`表示第一个参数\n      - 也可以使用`#{param1}`第一个参数\n      - 如果**只有一个参数(其参数应该是基本数据类型或 String)**，mybatis 对#{}里面内容没有要求只要写内容即可.\n      - 如果参数是对象`#{属性名}`\n      -  如果参数是 map， 写成`#{key}` ：当需要传递多个参数时候，目前只能使用 map 或者对象\n```java\n<select id=\"selById\"\n  resultType=\"com.bjsxt.pojo.People\"  parameterType=\"int\">\n  select * from people where id=#{0}\n</select>\n```\n\n- `#{}` 和 `${}` 的 区 别\n  - `#{}` 获取参数的内容，支持索引获取，或者使用 param1 获取指定位置参数，并且 SQL 使用?占位符\n  -  `${}` 字符串拼接，不使用?，默认找`${内容}`内容的 get/set 方法，如果写数字，就是一个数字\n配置示例：\nPeopleMapper.xml\n```java\n<select id=\"test\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"com.bjsxt.pojo.People\"> \n  select * from people where id =  ${id}\n</select>\n```\nTest.java\n```java\nPeople peo =new People();\npeo.setId(1);\nPeople p = session.selectOne(\"a.b.selById\",people);\n```\n\n- 如果在 xml 文件中出现 “<” , “>” ，双引号 等特殊字符时可以使用 XML 文件转义标签(XML 自身的)，格式为：`<![CDATA[ 内 容 ]]>`\n\n-  mybatis 中实现 mysql  分页写法\n  -  ? 中不允许在关键字前后进行数学运算，需要在代码中计算完成后传递到 mapper.xml  中；\n\n  Java 中代码为：\n```java\n//显示几个\nint pageSize = 2;\n//第几页\nint pageNumber = 2;\n//如果希望传递多个参数，可以使用对象或map\nMap<String,Object> map = new HashMap<>();\nmap.put(\"pageSize\", pageSize);\nmap.put(\"pageStart\", pageSize*(pageNumber-1));\nList<People> p = session.selectList(\"a.b.page\",map);\n```\nmapper.xml 中代码为：\n```xml\n<select id=\"page\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十五、typeAliases 别名（在mybatis.xml中进行配置，命令如下）\n\n一共有三类：分别是系统内置的别名，给某个类的别名，\n- 系统内置别名: 就是把类型全小写（见文档 ）\n- 给某个类起别名\n    - alias=”自定义”\n    - 同时 mapper.xml  中 peo 引用 People 类\n```java\n<typeAliases>\n    <typeAlias type=\"com.bjsxt.pojo.People\" alias=\"peo\"/>\n</typeAliases>\n```\nmapper.xml 中内容为：  \n```java\n<select id=\"page\" resultType=\"peo\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n- 直接给某个包下所有类起别名，别名为类名，区分大小写\n  - mybatis.xml 中配置\n```java\n<typeAliases>\n    <package name=\"com.bjsxt.pojo\" />\n</typeAliases>\n```\n- mapper.xml  中通过类名引用\n```java\n<select id=\"page\" resultType=\"People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十六、MyBatis 实现新增 \n\n- 概念复习：下面三者本质相同，角度不同；\n  - 功能:从应用程序角度出发，软件具有哪些功能.\n  - 业务:完成功能时的逻辑.对应 Service 中一个方法\n  - 事务:从数据库角度出发，完成业务时需要执行的 SQL 集合，统称一个事务\n    - 事务回滚：如果在一个事务中某个 SQL 执行事务，希望回归到事务的原点，保证数据库数据的完整性.\n\n- 在 mybatis 中默认是关闭了 JDBC 的自动提交功能\n  -  每一个 SqlSession 默认都是不自动提交事务.\n  -  可以使用session.commit()提交事务.\n  - 也可以使用openSession(true);自动提交底层为：.setAutoCommit(true);\n- mybatis 底层是对 JDBC 的封装.\n  - JDBC 中 executeUpdate()执行新增，删除，修改的 SQL.方法的返回值 int，表示受影响的行数.\n  - 应为上面原因，因此 mybatis 中 `<insert> <delete> <update>` 标签没有 resultType 属性，认为返回值都是 int。\n\n- 在 openSession() 时 Mybatis 会创建 SqlSession 时同时创建一个 Transaction(事务对象)，同时 autoCommit 都为 false\n  - 如果出现异常，应该 `session.rollback()` 回滚事务.\n\n- 实现新增的步骤\n  - 在 mapper.xml  中提供<insert>标签，标签没有返回值类型\n  - 通过 `session.insert()` 调用新增方法\nmapper.xml 值为；\n```xml\n<insert id=\"ins\" parameterType=\"People\">\ninsert into people values(default,#{name},#{age})\n</insert>\n```\n\n```java\nint index1 = session.insert(\"a.b.ins\", p);\nif(index1>0){\n   System.out.println(\"成功\");\n}else{\n  System.out.println(\"失败\");\n}\n```\n\n\n## 十二、MyBatis 实现修改\n\n- 在 mapper.xml 中提供<update>标签\n```java\n<update id=\"upd\" parameterType=\"People\">\n  update people set name = #{name} where id = #{id}\n</update>\n```\n- 编写代码\n```java\nPeople peo = new People();\npeo.setId(3);\npeo.setName(\"王五\");\nint index = session.update(\"a.b.upd\", peo);\nif(index>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\nsession.commit();\n```\n\n\n##  十三、mybatis 实现删除\n\n- 在 mapper.xml  提供<delete>标签\n```xml\n<delete id=\"del\" parameterType=\"int\">\n    delete from people where id = #{0}\n</delete>\n```\n\n- 编写代码\n```java\n int  del  =  session.delete(\"a.b.del\",3);\n\nif(del>0){\n   System.out.println(\"成功\");\n}else{\n   System.out.println(\"失败\");\n}\n\nsession.commit();\n```\n\n",[[1569115877406,["GJX@GJXAIOU",[[1,1330,"\n"]],[1330,1330],[1331,1331]]],[1569115908957,["GJX@GJXAIOU",[[1,1330,"包名 | 作用"]],[1330,1330],[1337,1337]]],[1569115909670,["GJX@GJXAIOU",[[1,1338,"\n"]],[1337,1337],[1338,1338]]],[1569115913152,["GJX@GJXAIOU",[[1,1338,"---|---"]],[1338,1338],[1345,1345]]],[1569115914653,["GJX@GJXAIOU",[[1,1346,"   |   \n"]],[1345,1345],[1346,1349]]],[1569115917637,["GJX@GJXAIOU",[[1,1330,"\n"]],[1330,1330],[1331,1331]]],[1569115941597,["GJX@GJXAIOU",[[1,1347,"mybatis.jar"]],[1347,1347],[1358,1358]]],[1569115945237,["GJX@GJXAIOU",[[-1,1362,"   "],[1,1365,"M"]],[1362,1365],[1363,1363]]],[1569115948549,["GJX@GJXAIOU",[[1,1363,"yBatids"]],[1363,1363],[1370,1370]]],[1569115949561,["GJX@GJXAIOU",[[-1,1368,"ds"]],[1370,1370],[1368,1368]]],[1569115950535,["GJX@GJXAIOU",[[1,1368,"s."]],[1368,1368],[1370,1370]]],[1569115951110,["GJX@GJXAIOU",[[-1,1369,"."]],[1370,1370],[1369,1369]]],[1569115953544,["GJX@GJXAIOU",[[1,1369," 的是"]],[1369,1369],[1372,1372]]],[1569115954636,["GJX@GJXAIOU",[[-1,1371,"是"]],[1372,1372],[1371,1371]]],[1569115957128,["GJX@GJXAIOU",[[1,1371,"核心包"]],[1371,1371],[1374,1374]]],[1569115957787,["GJX@GJXAIOU",[[1,1375,"   |   \n"]],[1374,1374],[1375,1378]]],[1569115975702,["GJX@GJXAIOU",[[-1,1375,"   "],[1,1378,"m"]],[1375,1378],[1376,1376]]],[1569115977596,["GJX@GJXAIOU",[[1,1376,"ybati"]],[1376,1376],[1381,1381]]],[1569115978609,["GJX@GJXAIOU",[[-1,1377,"bati"]],[1381,1381],[1377,1377]]],[1569115990462,["GJX@GJXAIOU",[[1,1377,"sql-connector-java.jar "]],[1377,1377],[1400,1400]]],[1569115992984,["GJX@GJXAIOU",[[-1,1402,"  "]],[1401,1404],[1402,1402]]],[1569115994375,["GJX@GJXAIOU",[[1,1402,"qu"]],[1402,1402],[1404,1404]]],[1569115994938,["GJX@GJXAIOU",[[-1,1402,"qu"]],[1404,1404],[1402,1402]]],[1569116005114,["GJX@GJXAIOU",[[1,1402,"MySQL 驱动包"]],[1402,1402],[1411,1411]]],[1569116005523,["GJX@GJXAIOU",[[1,1412,"   |   \n"]],[1411,1411],[1412,1415]]],[1569116156829,["GJX@GJXAIOU",[[1,1412,"cglib.jar"]],[1412,1412],[1421,1421]]],[1569116161612,["GJX@GJXAIOU",[[-1,1425,"   "],[1,1428,"d"]],[1425,1428],[1426,1426]]],[1569116162096,["GJX@GJXAIOU",[[1,1426,"on"]],[1426,1426],[1428,1428]]],[1569116163001,["GJX@GJXAIOU",[[-1,1425,"don"]],[1428,1428],[1425,1425]]],[1569116172894,["GJX@GJXAIOU",[[1,1425," 动态代理包"]],[1425,1425],[1431,1431]]],[1569116173739,["GJX@GJXAIOU",[[1,1432,"   |   \n"]],[1431,1431],[1432,1435]]],[1569116188485,["GJX@GJXAIOU",[[-1,1432,"   "],[1,1435,"a"]],[1432,1435],[1433,1433]]],[1569116189609,["GJX@GJXAIOU",[[-1,1432,"a"]],[1433,1433],[1432,1432]]],[1569116189965,["GJX@GJXAIOU",[[1,1432,"s"]],[1432,1432],[1433,1433]]],[1569116190749,["GJX@GJXAIOU",[[-1,1432,"s"]],[1433,1433],[1432,1432]]],[1569116194645,["GJX@GJXAIOU",[[1,1432,"asm.jar"]],[1432,1432],[1439,1439]]],[1569116198344,["GJX@GJXAIOU",[[-1,1440,"   "],[1,1443,"c"]],[1440,1443],[1441,1441]]],[1569116199215,["GJX@GJXAIOU",[[1,1441,"gi"]],[1441,1441],[1443,1443]]],[1569116200066,["GJX@GJXAIOU",[[-1,1442,"i"]],[1443,1443],[1442,1442]]],[1569116204222,["GJX@GJXAIOU",[[1,1442,"lib 依赖包"]],[1442,1442],[1449,1449]]],[1569116204595,["GJX@GJXAIOU",[[1,1450,"   |   \n"]],[1449,1449],[1450,1453]]],[1569116207423,["GJX@GJXAIOU",[[-1,1450,"   "],[1,1453,"j"]],[1450,1453],[1451,1451]]],[1569116208813,["GJX@GJXAIOU",[[1,1451,"avas"]],[1451,1451],[1455,1455]]],[1569116210346,["GJX@GJXAIOU",[[-1,1454,"s"]],[1455,1455],[1454,1454]]],[1569116214930,["GJX@GJXAIOU",[[1,1454,"ssist.jatr"]],[1454,1454],[1464,1464]]],[1569116218796,["GJX@GJXAIOU",[[-1,1459,".jatr"]],[1464,1464],[1459,1459]]],[1569116223108,["GJX@GJXAIOU",[[1,1459,"-GA.jar"]],[1459,1459],[1466,1466]]],[1569116229940,["GJX@GJXAIOU",[[-1,1467,"   "],[1,1470,"c"]],[1467,1470],[1468,1468]]],[1569116235792,["GJX@GJXAIOU",[[1,1468,"glib 依赖包（）"]],[1468,1468],[1478,1478]]],[1569116243081,["GJX@GJXAIOU",[[1,1477,"负责字节码"]],[1477,1477],[1482,1482]]],[1569116258016,["GJX@GJXAIOU",[[1,1482,"解析的包"]],[1482,1482],[1486,1486]]],[1569116262427,["GJX@GJXAIOU",[[1,1488,"   |   \n"]],[1487,1487],[1488,1491]]],[1569116272871,["GJX@GJXAIOU",[[-1,1488,"   "],[1,1491,"c"]],[1488,1491],[1489,1489]]],[1569116275837,["GJX@GJXAIOU",[[1,1489,"ommond"]],[1489,1489],[1495,1495]]],[1569116276698,["GJX@GJXAIOU",[[-1,1494,"d"]],[1495,1495],[1494,1494]]],[1569116282444,["GJX@GJXAIOU",[[1,1494,"s-logging.jar"]],[1494,1494],[1507,1507]]],[1569116285407,["GJX@GJXAIOU",[[-1,1508,"   "],[1,1511,"d"]],[1508,1511],[1509,1509]]],[1569116285845,["GJX@GJXAIOU",[[-1,1508,"d"]],[1509,1509],[1508,1508]]],[1569116287710,["GJX@GJXAIOU",[[1,1508,"日直播啊"]],[1508,1508],[1512,1512]]],[1569116288770,["GJX@GJXAIOU",[[-1,1508,"日直播啊"]],[1512,1512],[1508,1508]]],[1569116290920,["GJX@GJXAIOU",[[1,1508,"日志包"]],[1508,1508],[1511,1511]]],[1569116291782,["GJX@GJXAIOU",[[1,1512,"   |   \n"]],[1511,1511],[1512,1515]]],[1569116319890,["GJX@GJXAIOU",[[-1,1512,"   "],[1,1515,"log"]],[1512,1515],[1515,1515]]],[1569116324174,["GJX@GJXAIOU",[[1,1515,"4j.jat"]],[1515,1515],[1521,1521]]],[1569116324652,["GJX@GJXAIOU",[[-1,1520,"t"]],[1521,1521],[1520,1520]]],[1569116324795,["GJX@GJXAIOU",[[1,1520,"r"]],[1520,1520],[1521,1521]]],[1569116327020,["GJX@GJXAIOU",[[-1,1522,"   "],[1,1525,"r"]],[1522,1525],[1523,1523]]],[1569116327560,["GJX@GJXAIOU",[[1,1523,"izhi"]],[1523,1523],[1527,1527]]],[1569116328625,["GJX@GJXAIOU",[[-1,1522,"rizhi"]],[1527,1527],[1522,1522]]],[1569116332797,["GJX@GJXAIOU",[[1,1522," 日至报"]],[1522,1522],[1526,1526]]],[1569116333689,["GJX@GJXAIOU",[[-1,1523,"日至报"]],[1526,1526],[1523,1523]]],[1569116336254,["GJX@GJXAIOU",[[1,1523,"日志包"]],[1523,1523],[1526,1526]]],[1569116336539,["GJX@GJXAIOU",[[1,1527,"   |   \n"]],[1526,1526],[1527,1530]]],[1569116337549,["GJX@GJXAIOU",[[-1,1527,"   "],[1,1530,"l"]],[1527,1530],[1528,1528]]],[1569116342966,["GJX@GJXAIOU",[[1,1528,"og4j- pai"]],[1528,1528],[1537,1537]]],[1569116343939,["GJX@GJXAIOU",[[-1,1532,"- pai"]],[1537,1537],[1532,1532]]],[1569116347511,["GJX@GJXAIOU",[[1,1532,"-api.jar"]],[1532,1532],[1540,1540]]],[1569116352865,["GJX@GJXAIOU",[[-1,1542,"  "]],[1541,1544],[1542,1542]]],[1569116357000,["GJX@GJXAIOU",[[1,1542,"日字包"]],[1542,1542],[1545,1545]]],[1569116358194,["GJX@GJXAIOU",[[-1,1541," 日字包"]],[1545,1545],[1541,1541]]],[1569116365925,["GJX@GJXAIOU",[[1,1541," 日志包"]],[1541,1541],[1545,1545]]],[1569116366907,["GJX@GJXAIOU",[[1,1546,"   |   \n"]],[1545,1545],[1546,1549]]],[1569116368262,["GJX@GJXAIOU",[[-1,1546,"   "],[1,1549,"l"]],[1546,1549],[1547,1547]]],[1569116368446,["GJX@GJXAIOU",[[1,1547,"o"]],[1547,1547],[1548,1548]]],[1569116368915,["GJX@GJXAIOU",[[1,1548,"a"]],[1548,1548],[1549,1549]]],[1569116369948,["GJX@GJXAIOU",[[-1,1548,"a"]],[1549,1549],[1548,1548]]],[1569116377302,["GJX@GJXAIOU",[[1,1548,"g4j-core.jat"]],[1548,1548],[1560,1560]]],[1569116378618,["GJX@GJXAIOU",[[-1,1559,"t"]],[1560,1560],[1559,1559]]],[1569116378877,["GJX@GJXAIOU",[[1,1559,"r"]],[1559,1559],[1560,1560]]],[1569116381832,["GJX@GJXAIOU",[[1,1564," "]],[1561,1561],[1562,1562]]],[1569116383800,["GJX@GJXAIOU",[[1,1562,"日志包"]],[1562,1562],[1565,1565]]],[1569116384548,["GJX@GJXAIOU",[[1,1565,"\n"]],[1565,1565],[1566,1566]]],[1569116395266,["GJX@GJXAIOU",[[1,1569,"|   \n   "]],[1565,1565],[1566,1569]]],[1569116399471,["GJX@GJXAIOU",[[-1,1566,"   "],[1,1569,"s"]],[1566,1569],[1567,1567]]],[1569116405660,["GJX@GJXAIOU",[[1,1567,"lf4j-api.jat"]],[1567,1567],[1579,1579]]],[1569116406484,["GJX@GJXAIOU",[[-1,1578,"t"]],[1579,1579],[1578,1578]]],[1569116407020,["GJX@GJXAIOU",[[1,1578,"r"]],[1578,1578],[1579,1579]]],[1569116408677,["GJX@GJXAIOU",[[-1,1581,"  "]],[1580,1583],[1581,1581]]],[1569116409424,["GJX@GJXAIOU",[[1,1581,"ri"]],[1581,1581],[1583,1583]]],[1569116409895,["GJX@GJXAIOU",[[-1,1581,"ri"]],[1583,1583],[1581,1581]]],[1569116411895,["GJX@GJXAIOU",[[1,1581,"日志包"]],[1581,1581],[1584,1584]]],[1569116412233,["GJX@GJXAIOU",[[1,1588,"|   \n   "]],[1584,1584],[1585,1588]]],[1569116415549,["GJX@GJXAIOU",[[-1,1585,"   "],[1,1588,"slf"]],[1585,1588],[1588,1588]]],[1569116419157,["GJX@GJXAIOU",[[1,1588,"4k"]],[1588,1588],[1590,1590]]],[1569116419570,["GJX@GJXAIOU",[[-1,1589,"k"]],[1590,1590],[1589,1589]]],[1569116427070,["GJX@GJXAIOU",[[1,1589,"j-log4j.jat"]],[1589,1589],[1600,1600]]],[1569116427937,["GJX@GJXAIOU",[[-1,1599,"t"]],[1600,1600],[1599,1599]]],[1569116428175,["GJX@GJXAIOU",[[1,1599,"r"]],[1599,1599],[1600,1600]]],[1569116430150,["GJX@GJXAIOU",[[-1,1602,"  "]],[1601,1604],[1602,1602]]],[1569116433364,["GJX@GJXAIOU",[[1,1602,"日志包"]],[1602,1602],[1605,1605]]],[1569116453388,["GJX@GJXAIOU",[[-1,1610,"![MyBatis需要导入的Jar包]($resource/MyBatis%E9%9C%80%E8%A6%81%E5%AF%BC%E5%85%A5%E7%9A%84Jar%E5%8C%85.png)"]],[1610,1709],[1610,1610]]],[1569116454356,["GJX@GJXAIOU",[[-1,1610,"\n"]],[1610,1610],[1609,1609]]],[1569116504359,["GJX@GJXAIOU",[[1,2312,"    "]],[2312,2312],[2316,2316]]],[1569116509934,["GJX@GJXAIOU",[[1,2440,"    "]],[2439,2439],[2443,2443]]],[1569116523050,["GJX@GJXAIOU",[[1,2241,"  "],[1,2301,"  "],[1,2384,"  "],[1,2429,"  "]],[2245,2487],[2247,2495]]],[1569116523796,["GJX@GJXAIOU",[[1,2243,"  "],[1,2303,"  "],[1,2390,"  "],[1,2435,"  "]],[2247,2495],[2249,2503]]],[1569116524922,["GJX@GJXAIOU",[[1,2245,"  "],[1,2305,"  "],[1,2396,"  "],[1,2441,"  "]],[2249,2503],[2251,2511]]],[1569116525210,["GJX@GJXAIOU",[[1,2247,"  "],[1,2307,"  "],[1,2402,"  "],[1,2447,"  "]],[2251,2511],[2253,2519]]],[1569116542948,["GJX@GJXAIOU",[[-1,1992,"\t"],[-1,2041,"\t"],[-1,2075,"\t"],[-1,2097,"\t"],[-1,2127,"\t"],[-1,2150,"\t"],[-1,2209,"\t"],[-1,2237,"  "],[-1,2319,"  "],[-1,2396," "],[-1,2407," "],[-1,2453,"  "],[-1,2522,"\t"],[-1,2537,"\t"],[-1,2554,"\t"],[-1,2571,"\t"],[-1,2573,"\t"],[-1,2584,"\t"],[-1,2614,"\t"],[-1,2671,"\t"]],[1993,2682],[1992,2659]]],[1569116544261,["GJX@GJXAIOU",[[1,1992,"  "],[1,2040,"  "],[1,2073,"  "],[1,2093,"  "],[1,2121,"  "],[1,2145,"  "],[1,2201,"  "],[1,2230," "],[1,2240," "],[1,2300,"  "],[1,2385," "],[1,2395," "],[1,2440,"  "],[1,2505,"  "],[1,2521,"  "],[1,2537,"  "],[1,2553,"  "],[1,2554,"  "],[1,2564,"  "],[1,2593,"  "],[1,2649,"  "]],[1992,2659],[1992,2697]]],[1569116615906,["GJX@GJXAIOU",[[-1,2652,"bjsxt"]],[2657,2657],[2652,2652]]],[1569116618608,["GJX@GJXAIOU",[[1,2652,"gjxaiou"]],[2652,2652],[2659,2659]]],[1569116724131,["GJX@GJXAIOU",[[-1,2254,"  "],[-1,2316,"  "],[-1,2413,"  "],[-1,2460,"  "]],[2260,2526],[2258,2518]]],[1569116726689,["GJX@GJXAIOU",[[-1,2252,"  "],[-1,2314,"  "],[-1,2407,"  "],[-1,2454,"  "]],[2258,2518],[2256,2510]]],[1569116728044,["GJX@GJXAIOU",[[-1,2250,"  "],[-1,2312,"  "],[-1,2401,"  "],[-1,2448,"  "]],[2256,2510],[2254,2502]]],[1569116766164,["GJX@GJXAIOU",[[1,1799,"["]],[1799,1799],[1800,1800]]],[1569116767258,["GJX@GJXAIOU",[[-1,1799,"["]],[1800,1800],[1799,1799]]],[1569116769332,["GJX@GJXAIOU",[[1,1799,"【】"]],[1799,1799],[1801,1801]]],[1569116771783,["GJX@GJXAIOU",[[1,1800,"my"]],[1800,1800],[1802,1802]]],[1569116774905,["GJX@GJXAIOU",[[-1,1800,"my"]],[1802,1802],[1800,1800]]],[1569116780528,["GJX@GJXAIOU",[[1,1800,"MaBatis.xml"]],[1800,1800],[1811,1811]]],[1569116783732,["GJX@GJXAIOU",[[-1,1801,"a"]],[1802,1802],[1801,1801]]],[1569116784199,["GJX@GJXAIOU",[[1,1801,"y"]],[1801,1801],[1802,1802]]],[1569116878985,["GJX@GJXAIOU",[[-1,2738,":"]],[2739,2739],[2738,2738]]],[1569116879877,["GJX@GJXAIOU",[[1,2738,":"]],[2738,2738],[2739,2739]]],[1569116881392,["GJX@GJXAIOU",[[-1,2738,":"]],[2739,2739],[2738,2738]]],[1569116886133,["GJX@GJXAIOU",[[1,2738,"：`"]],[2738,2738],[2740,2740]]],[1569116891783,["GJX@GJXAIOU",[[1,2755,"`"]],[2755,2755],[2756,2756]]],[1569117532873,["GJX@GJXAIOU",[[-1,3044,"a.b"]],[3047,3047],[3044,3044]]],[1569117535439,["GJX@GJXAIOU",[[1,3044,"xom"]],[3044,3044],[3047,3047]]],[1569117536280,["GJX@GJXAIOU",[[-1,3044,"xom"]],[3047,3047],[3044,3044]]],[1569117556862,["GJX@GJXAIOU",[[1,3044,"com.gjxaiou.mapper.FlowerMp"]],[3044,3044],[3071,3071]]],[1569117557602,["GJX@GJXAIOU",[[-1,3070,"p"]],[3071,3071],[3070,3070]]],[1569117559173,["GJX@GJXAIOU",[[1,3070,"apper"]],[3070,3070],[3075,3075]]],[1569117805316,["GJX@GJXAIOU",[[1,3020,","]],[3020,3020],[3021,3021]]],[1569117806273,["GJX@GJXAIOU",[[-1,3020,","]],[3021,3021],[3020,3020]]],[1569117814543,["GJX@GJXAIOU",[[1,3020,"，用于绑定D奥"]],[3020,3020],[3027,3027]]],[1569117815328,["GJX@GJXAIOU",[[-1,3026,"奥"]],[3027,3027],[3026,3026]]],[1569117816799,["GJX@GJXAIOU",[[1,3026,"ao"]],[3026,3026],[3028,3028]]],[1569117817636,["GJX@GJXAIOU",[[1,3029," "]],[3028,3028],[3029,3029]]],[1569117818740,["GJX@GJXAIOU",[[1,3029,"接口"]],[3029,3029],[3031,3031]]],[1569117820773,["GJX@GJXAIOU",[[1,3025," "]],[3025,3025],[3026,3026]]],[1569117822419,["GJX@GJXAIOU",[[-1,3029," "]],[3030,3030],[3029,3029]]],[1569117823190,["GJX@GJXAIOU",[[1,3029," "]],[3029,3029],[3030,3030]]],[1569117827222,["GJX@GJXAIOU",[[1,3032,"（）"]],[3032,3032],[3034,3034]]],[1569117834310,["GJX@GJXAIOU",[[1,3033,"即面向接口编程"]],[3033,3033],[3040,3040]]],[1569117839999,["GJX@GJXAIOU",[[1,3041,"，使用"]],[3041,3041],[3044,3044]]],[1569117841325,["GJX@GJXAIOU",[[1,3045," "]],[3044,3044],[3045,3045]]],[1569117846644,["GJX@GJXAIOU",[[1,3045,"namespace在"]],[3045,3045],[3055,3055]]],[1569117847451,["GJX@GJXAIOU",[[-1,3054,"在"]],[3055,3055],[3054,3054]]],[1569117847918,["GJX@GJXAIOU",[[1,3055," "]],[3054,3054],[3055,3055]]],[1569117848821,["GJX@GJXAIOU",[[1,3055,"之后"]],[3055,3055],[3057,3057]]],[1569117853392,["GJX@GJXAIOU",[[-1,2998,"a"]],[2999,2999],[2998,2998]]],[1569117854662,["GJX@GJXAIOU",[[1,2999,"s"]],[2999,2999],[3000,3000]]],[1569117855488,["GJX@GJXAIOU",[[-1,2999,"s"]],[3000,3000],[2999,2999]]],[1569117855627,["GJX@GJXAIOU",[[1,2999,"a"]],[2999,2999],[3000,3000]]],[1569117861364,["GJX@GJXAIOU",[[1,3057,"就不用使用"]],[3057,3057],[3062,3062]]],[1569117862809,["GJX@GJXAIOU",[[-1,3060,"使用"]],[3062,3062],[3060,3060]]],[1569117874767,["GJX@GJXAIOU",[[1,3060,"写实现类，业务逻辑"]],[3060,3060],[3069,3069]]],[1569117895397,["GJX@GJXAIOU",[[1,3069,"会直接通过这个绑定寻找到对应点的SQL语句"]],[3069,3069],[3090,3090]]],[1569117897719,["GJX@GJXAIOU",[[1,3085," "]],[3085,3085],[3086,3086]]],[1569117898574,["GJX@GJXAIOU",[[1,3089," "]],[3089,3089],[3090,3090]]],[1569117909268,["GJX@GJXAIOU",[[1,3092,"进行对应的数据处理"]],[3092,3092],[3101,3101]]],[1569118047815,["GJX@GJXAIOU",[[1,3974,":"]],[3974,3974],[3975,3975]]],[1569118049016,["GJX@GJXAIOU",[[-1,3974,":"]],[3975,3975],[3974,3974]]],[1569118049782,["GJX@GJXAIOU",[[1,3974,":"]],[3974,3974],[3975,3975]]],[1569118050715,["GJX@GJXAIOU",[[-1,3974,":"]],[3975,3975],[3974,3974]]],[1569118074140,["GJX@GJXAIOU",[[-1,4066,"."]],[4067,4067],[4066,4066]]],[1569118074935,["GJX@GJXAIOU",[[1,4066,","]],[4066,4066],[4067,4067]]],[1569118077075,["GJX@GJXAIOU",[[-1,4066,","]],[4067,4067],[4066,4066]]],[1569118077891,["GJX@GJXAIOU",[[1,4066,"，"]],[4066,4066],[4067,4067]]],[1569118085950,["GJX@GJXAIOU",[[1,4149,"；"]],[4149,4149],[4150,4150]]],[1569118091108,["GJX@GJXAIOU",[[1,4187,"；"]],[4187,4187],[4188,4188]]],[1569118093140,["GJX@GJXAIOU",[[-1,4214,"."]],[4215,4215],[4214,4214]]],[1569118095205,["GJX@GJXAIOU",[[1,4214,"；"]],[4214,4214],[4215,4215]]],[1569118099816,["GJX@GJXAIOU",[[-1,4197," :"]],[4199,4199],[4197,4197]]],[1569118100971,["GJX@GJXAIOU",[[1,4197,"："]],[4197,4197],[4198,4198]]],[1569118104045,["GJX@GJXAIOU",[[1,4163,"："]],[4163,4163],[4164,4164]]],[1569118105280,["GJX@GJXAIOU",[[-1,4164," "]],[4165,4165],[4164,4164]]],[1569118107499,["GJX@GJXAIOU",[[-1,4140," "]],[4141,4141],[4140,4140]]],[1569118108131,["GJX@GJXAIOU",[[1,4140,"："]],[4140,4140],[4141,4141]]],[1569118115623,["GJX@GJXAIOU",[[1,4128,"如下"]],[4128,4128],[4130,4130]]],[1569118119948,["GJX@GJXAIOU",[[1,4011,"如下："]],[4011,4011],[4014,4014]]],[1569120411485,["GJX@GJXAIOU",[[1,2816,"【注意抬头中的信息不同】"]],[2816,2816],[2828,2828]]],[1569121215442,["GJX@GJXAIOU",[[1,2827,"，将上面台套"]],[2827,2827],[2833,2833]]],[1569121216221,["GJX@GJXAIOU",[[-1,2831,"台套"]],[2833,2833],[2831,2831]]],[1569121232875,["GJX@GJXAIOU",[[1,2831,"抬头中的 config 全部换为 mapper"]],[2831,2831],[2854,2854]]],[1569121447528,["GJX@GJXAIOU",[[-1,4796,"ssm"]],[4799,4799],[4796,4796]]],[1569121448880,["GJX@GJXAIOU",[[1,4796,"lianxi"]],[4796,4796],[4802,4802]]],[1569132286894,["GJX@GJXAIOU",[[-1,3176,"mapper.FlowerMapper"]],[3195,3195],[3176,3176]]],[1569132295178,["GJX@GJXAIOU",[[1,3176,"pojo.Flower"]],[3176,3176],[3187,3187]]],[1569132311846,["GJX@GJXAIOU",[[-1,3360,"bjsxt"]],[3365,3365],[3360,3360]]],[1569132313714,["GJX@GJXAIOU",[[1,3360,"gjxaiou"]],[3360,3360],[3367,3367]]],[1569136796883,["GJX@GJXAIOU",[[-1,8207,"2.1 "]],[8211,8211],[8207,8207]]],[1569136799379,["GJX@GJXAIOU",[[-1,8234,"2.2"]],[8237,8237],[8234,8234]]],[1569136802830,["GJX@GJXAIOU",[[-1,8277,"2.2.1"]],[8282,8282],[8277,8277]]],[1569137521834,["GJX@GJXAIOU",[[1,9818,"\""]],[9818,9818],[9819,9819]]],[1569137525823,["GJX@GJXAIOU",[[1,9829,"\""]],[9829,9829],[9830,9830]]],[1569138079771,["GJX@GJXAIOU",[[-1,9818,"\""]],[9819,9819],[9818,9818]]],[1569138080942,["GJX@GJXAIOU",[[-1,9828,"\""]],[9829,9829],[9828,9828]]],[1569142766261,["GJX@GJXAIOU",[[1,7594,"\n\t"]],[7592,7592],[7594,7594]]],[1569144422321,["GJX@GJXAIOU",[[-1,3164,"com.gjx"],[-1,3172,"iou.pojo.Flower"]],[3164,3187],[3165,3165]]],[1569144423056,["GJX@GJXAIOU",[[1,3165,".b"]],[3165,3165],[3167,3167]]],[1569150698489,["GJX@GJXAIOU",[[1,12787,"=="]],[12787,12787],[12789,12789]]],[1569150699940,["GJX@GJXAIOU",[[-1,12788,"="]],[12789,12789],[12788,12788]]],[1569150701177,["GJX@GJXAIOU",[[1,12788,"==="]],[12788,12788],[12791,12791]]],[1569150704164,["GJX@GJXAIOU",[[1,12787,"\n"]],[12787,12787],[12788,12788]]],[1569150706608,["GJX@GJXAIOU",[[1,12790,"p"]],[12790,12790],[12791,12791]]],[1569150707157,["GJX@GJXAIOU",[[-1,12790,"p"]],[12791,12791],[12790,12790]]],[1569150711922,["GJX@GJXAIOU",[[1,12790,"别名撇子"]],[12790,12790],[12794,12794]]],[1569150712569,["GJX@GJXAIOU",[[-1,12792,"撇子"]],[12794,12794],[12792,12792]]],[1569150720258,["GJX@GJXAIOU",[[1,12792,"配置必须在 《》"]],[12792,12792],[12800,12800]]],[1569150721582,["GJX@GJXAIOU",[[-1,12798,"《》"]],[12800,12800],[12798,12798]]],[1569150723486,["GJX@GJXAIOU",[[1,12798,"<>"]],[12798,12798],[12800,12800]]],[1569150729415,["GJX@GJXAIOU",[[1,12799,"configuration"]],[12799,12799],[12812,12812]]],[1569150742824,["GJX@GJXAIOU",[[-1,12799,"configuration"]],[12812,12812],[12799,12799]]],[1569150749147,["GJX@GJXAIOU",[[1,12799,"environments"]],[12799,12799],[12811,12811]]],[1569150754792,["GJX@GJXAIOU",[[1,12812,"前面"]],[12812,12812],[12814,12814]]],[1569150787637,["GJX@GJXAIOU",[[1,10185,"\n"]],[10184,10184],[10185,10185]]],[1569150788401,["GJX@GJXAIOU",[[1,10185,"===="]],[10185,10185],[10187,10187]]],[1569150792428,["GJX@GJXAIOU",[[1,10187,"该标签也是"]],[10187,10187],[10192,10192]]],[1569150845193,["GJX@GJXAIOU",[[1,10192,"必须配置在 《》"]],[10192,10192],[10200,10200]]],[1569150846611,["GJX@GJXAIOU",[[-1,10198,"《》"]],[10200,10200],[10198,10198]]],[1569150847812,["GJX@GJXAIOU",[[1,10198,"<>"]],[10198,10198],[10200,10200]]],[1569150853215,["GJX@GJXAIOU",[[1,10199,"environments"]],[10199,10199],[10211,10211]]],[1569150855698,["GJX@GJXAIOU",[[1,10184,"zhi"]],[10184,10184],[10187,10187]]],[1569150856410,["GJX@GJXAIOU",[[-1,10184,"zhi"]],[10187,10187],[10184,10184]]],[1569150863035,["GJX@GJXAIOU",[[1,10212," 之前"]],[10212,10212],[10215,10215]]],[1569150875422,["GJX@GJXAIOU",[[-1,13593,"."]],[13594,13594],[13593,13593]]],[1569150875882,["GJX@GJXAIOU",[[1,13593,"；"]],[13593,13593],[13594,13594]]],[1569150885705,["GJX@GJXAIOU",[[1,13840,"·"]],[13840,13840],[13841,13841]]],[1569150887005,["GJX@GJXAIOU",[[-1,13840,"·"]],[13841,13841],[13840,13840]]],[1569150887481,["GJX@GJXAIOU",[[1,13840,"`"]],[13840,13840],[13841,13841]]],[1569150889082,["GJX@GJXAIOU",[[1,13862,"`"]],[13862,13862],[13863,13863]]],[1569151322237,["GJX@GJXAIOU",[[1,13615,"**"],[1,13651,"**"]],[13615,13651],[13615,13655]]],[1569151327199,["GJX@GJXAIOU",[[-1,13662,"事务回滚：如果在一个事务中某个 SQL 执行事务，希望回归到事务的原点，保证数据库数据的完整性"],[1,13709,"<settings>\n    <setting  name=\"logImpl\"  value=\"LOG4J\"/>\n</settings>"]],[13662,13709],[13730,13730]]],[1569151329128,["GJX@GJXAIOU",[[1,13662,"事务回滚：如果在一个事务中某个 SQL 执行事务，希望回归到事务的原点，保证数据库数据的完整性"],[-1,13662,"<settings>\n    <setting  name=\"logImpl\"  value=\"LOG4J\"/>\n</settings>"]],[13730,13730],[13662,13709]]],[1569151330556,["GJX@GJXAIOU",[[1,13662,"**"],[1,13709,"**"]],[13662,13709],[13662,13713]]],[1569151332323,["GJX@GJXAIOU",[[-1,13713,"."]],[13714,13714],[13713,13713]]],[1569151333023,["GJX@GJXAIOU",[[1,13713,"."]],[13713,13713],[13714,13714]]],[1569151334211,["GJX@GJXAIOU",[[-1,13713,"."]],[13714,13714],[13713,13713]]],[1569151334881,["GJX@GJXAIOU",[[1,13713,"。"]],[13713,13713],[13714,13714]]],[1569151592003,["GJX@GJXAIOU",[[1,13718,"**"],[1,13748,"**"]],[13718,13748],[13718,13752]]],[1569151595576,["GJX@GJXAIOU",[[1,13795," `"]],[13795,13795],[13797,13797]]],[1569151597802,["GJX@GJXAIOU",[[1,13813,"` "]],[13813,13813],[13815,13815]]],[1569151600866,["GJX@GJXAIOU",[[1,13830,"`"]],[13830,13830],[13831,13831]]],[1569151602351,["GJX@GJXAIOU",[[1,13830," "]],[13830,13830],[13831,13831]]],[1569151604586,["GJX@GJXAIOU",[[1,13850,"` "]],[13850,13850],[13852,13852]]],[1569151616517,["GJX@GJXAIOU",[[-1,13950,"."]],[13951,13951],[13950,13950]]],[1569151617146,["GJX@GJXAIOU",[[1,13950,","]],[13950,13950],[13951,13951]]],[1569151617603,["GJX@GJXAIOU",[[-1,13950,","]],[13951,13951],[13950,13950]]],[1569151620118,["GJX@GJXAIOU",[[1,13950,"，"]],[13950,13950],[13951,13951]]],[1569151631066,["GJX@GJXAIOU",[[1,13983,"**"],[1,14055,"**"]],[13983,14055],[13983,14059]]],[1569151841003,["GJX@GJXAIOU",[[-1,10197," <environments> 之"]],[10214,10214],[10197,10197]]],[1569151842594,["GJX@GJXAIOU",[[1,10197,"最"]],[10197,10197],[10198,10198]]],[1569151844577,["GJX@GJXAIOU",[[1,10199,"面"]],[10199,10199],[10200,10200]]],[1569154810034,["GJX@GJXAIOU",[[1,2711,"\n"]],[2709,2709],[2710,2710]]],[1569154810214,["GJX@GJXAIOU",[[1,2712,"\n"]],[2710,2710],[2711,2711]]],[1569154810697,["GJX@GJXAIOU",[[1,2711,"1. mybatis.xml 中的 <mappers>中配置的 resource 是整个项目中的所有其他 `实体类Mapper.xml` 文件；\n配置方式\n\nmappers 标签下有许多 mapper 标签，每一个 mapper 标签中配置的都是一个独立的映射配置文件的路径，配置方式有以下几种。\n\n第一种：使用相对路径进行配置。示例代码如下：\n\n```\n<mappers>\n    <mapper resource=\"org/mybatis/mappers/UserMapper.xml\"/>\n    <mapper resource=\"org/mybatis/mappers/ProductMapper.xml\"/>\n    <mapper resource=\"org/mybatis/mappers/ManagerMapper.xml\"/>\n</mappers>\n```\n\n第二种：使用绝对路径进行配置。示例代码如下：\n\n```\n<mappers>\n    <mapper url=\"file:///var/mappers/UserMapper.xml\"/>\n    <mapper url=\"file:///var/mappers/ProductMapper.xml\"/>\n    <mapper url=\"file:///var/mappers/ManagerMapper.xml\"/>\n</mappers>\n```\n\n第三种：使用接口信息进行配置。示例代码如下：\n\n```\n<mappers>\n    <mapper class=\"org.mybatis.mappers.UserMapper\"/>\n    <mapper class=\"org.mybatis.mappers.ProductMapper\"/>\n    <mapper class=\"org.mybatis.mappers.ManagerMapper\"/>\n</mappers>\n```\n\n第四种：使用接口所在包进行配置。示例如下：\n\n```\n<mappers>\n    <package name=\"org.mybatis.mappers\"/>\n</mappers>\n```"]],[2711,2711],[3638,3638]]],[1569154813633,["GJX@GJXAIOU",[[-1,2711,"1. "]],[2711,2714],[2711,2711]]],[1569154816630,["GJX@GJXAIOU",[[1,2711,"****"]],[2711,2711],[2713,2713]]],[1569154818099,["GJX@GJXAIOU",[[1,2713,"注："]],[2713,2713],[2715,2715]]],[1569154822895,["GJX@GJXAIOU",[[1,2787,"所有的"]],[2787,2787],[2790,2790]]],[1569154827185,["GJX@GJXAIOU",[[-1,2795,"\n"]],[2795,2795],[2794,2794]]],[1569154834830,["GJX@GJXAIOU",[[1,2717," "]],[2717,2717],[2718,2718]]],[1569199359610,["GJX@GJXAIOU",[[1,1668,"**"],[1,1691,"**"]],[1668,1691],[1668,1695]]],[1569199381281,["GJX@GJXAIOU",[[1,1871,"\n"]],[1870,1870],[1871,1871]]],[1569199383676,["GJX@GJXAIOU",[[1,1871,"《》"]],[1871,1871],[1873,1873]]],[1569199384947,["GJX@GJXAIOU",[[-1,1871,"《》"]],[1873,1873],[1871,1871]]],[1569199385607,["GJX@GJXAIOU",[[1,1871,"<>"]],[1871,1871],[1873,1873]]],[1569199389130,["GJX@GJXAIOU",[[1,1872,"!-----"]],[1872,1872],[1878,1878]]],[1569199390959,["GJX@GJXAIOU",[[-1,1877,"-"]],[1876,1876],[1875,1875]]],[1569199405517,["GJX@GJXAIOU",[[1,1875,"注意这里是 configuration ，下面为 mybatis"]],[1875,1875],[1907,1907]]],[1569199406338,["GJX@GJXAIOU",[[1,1909,"-"]],[1907,1907],[1908,1908]]],[1569199406788,["GJX@GJXAIOU",[[1,1908,"3"]],[1908,1908],[1909,1909]]],[1569199408020,["GJX@GJXAIOU",[[1,1911,"-"]],[1909,1909],[1910,1910]]],[1569199409758,["GJX@GJXAIOU",[[1,1910,"config "]],[1910,1910],[1917,1917]]],[1569199502971,["GJX@GJXAIOU",[[1,2362,"c"]],[2362,2362],[2363,2363]]],[1569199503411,["GJX@GJXAIOU",[[1,2364,"j"]],[2363,2363],[2364,2364]]],[1569199504459,["GJX@GJXAIOU",[[1,2364,"."]],[2364,2364],[2365,2365]]],[1569199539114,["GJX@GJXAIOU",[[1,2668,",yiban"]],[2668,2668],[2674,2674]]],[1569199540543,["GJX@GJXAIOU",[[-1,2669,"yiban"]],[2674,2674],[2669,2669]]],[1569199542506,["GJX@GJXAIOU",[[1,2669,"议案使用"]],[2669,2669],[2673,2673]]],[1569199545263,["GJX@GJXAIOU",[[-1,2666,"文件,议案使用"]],[2673,2673],[2666,2666]]],[1569199550554,["GJX@GJXAIOU",[[1,2666,"文件，一般使用"]],[2666,2666],[2673,2673]]],[1569199554132,["GJX@GJXAIOU",[[1,2674," "]],[2673,2673],[2674,2674]]],[1569199556332,["GJX@GJXAIOU",[[1,2674,"package"]],[2674,2674],[2681,2681]]],[1569199605063,["GJX@GJXAIOU",[[-1,2858,"所有的配置方式"]],[2858,2865],[2858,2858]]],[1569199620598,["GJX@GJXAIOU",[[-1,2953,"\n"]],[2953,2953],[2952,2952]]],[1569199640791,["GJX@GJXAIOU",[[-1,3417,"\n"]],[3417,3417],[3416,3416]]],[1569199643968,["GJX@GJXAIOU",[[-1,3192,"\n"]],[3192,3192],[3191,3191]]],[1569199650182,["GJX@GJXAIOU",[[-1,3633,"\n"]],[3633,3633],[3632,3632]]],[1569199678081,["GJX@GJXAIOU",[[1,3811,"**"],[1,3848,"**"]],[3811,3848],[3811,3852]]],[1569199872627,["GJX@GJXAIOU",[[1,4302,"\n\t"]],[4300,4300],[4302,4302]]],[1569199877251,["GJX@GJXAIOU",[[1,4302,"《》"]],[4302,4302],[4304,4304]]],[1569199878281,["GJX@GJXAIOU",[[-1,4302,"《》"]],[4304,4304],[4302,4302]]],[1569199879754,["GJX@GJXAIOU",[[1,4302,"<>"]],[4302,4302],[4304,4304]]],[1569199883210,["GJX@GJXAIOU",[[1,4303,"!----"]],[4303,4303],[4308,4308]]],[1569199885306,["GJX@GJXAIOU",[[1,4306," "]],[4306,4306],[4307,4307]]],[1569199890038,["GJX@GJXAIOU",[[-1,4175,"id:表示方法名"]],[4175,4183],[4175,4175]]],[1569199896337,["GJX@GJXAIOU",[[1,4298,"id:表示方法名;"]],[4298,4298],[4307,4307]]],[1569199897428,["GJX@GJXAIOU",[[1,4308," "]],[4307,4307],[4308,4308]]],[1569199904909,["GJX@GJXAIOU",[[1,4308,"parameterType:定义参数类型;resultType:返回值类型"]],[4308,4308],[4345,4345]]],[1569199908975,["GJX@GJXAIOU",[[-1,4177,"\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型."]],[4177,4219],[4177,4177]]],[1569199911478,["GJX@GJXAIOU",[[-1,4177,"\n"]],[4178,4178],[4177,4177]]],[1569199914430,["GJX@GJXAIOU",[[-1,4176,"\n"]],[4177,4177],[4176,4176]]],[1569199918287,["GJX@GJXAIOU",[[-1,4179,"\t\t"]],[4179,4181],[4179,4179]]],[1569199918726,["GJX@GJXAIOU",[[-1,4178,"\n"]],[4179,4179],[4178,4178]]],[1569199920782,["GJX@GJXAIOU",[[-1,4175," \t\t"]],[4178,4178],[4175,4175]]],[1569199924591,["GJX@GJXAIOU",[[-1,4238,"\t"]],[4238,4239],[4238,4238]]],[1569199925022,["GJX@GJXAIOU",[[-1,4237,"\n"]],[4238,4238],[4237,4237]]],[1569199955226,["GJX@GJXAIOU",[[1,3800,"F;p"]],[3800,3800],[3803,3803]]],[1569199956645,["GJX@GJXAIOU",[[-1,3801,";p"]],[3803,3803],[3801,3801]]],[1569199958084,["GJX@GJXAIOU",[[1,3801,";pwer"]],[3801,3801],[3806,3806]]],[1569199959185,["GJX@GJXAIOU",[[-1,3801,";pwer"]],[3806,3806],[3801,3801]]],[1569199967446,["GJX@GJXAIOU",[[1,3801,"lowerMapper."]],[3801,3801],[3813,3813]]],[1569199997470,["GJX@GJXAIOU",[[-1,4489,"bjsxt"]],[4494,4494],[4489,4489]]],[1569199999690,["GJX@GJXAIOU",[[1,4489,"GJXAIOU"]],[4489,4489],[4496,4496]]],[1569200002377,["GJX@GJXAIOU",[[-1,4489,"GJXAIOU"]],[4496,4496],[4489,4489]]],[1569200008239,["GJX@GJXAIOU",[[1,4489,"gjxaiou"]],[4489,4489],[4496,4496]]],[1569200012270,["GJX@GJXAIOU",[[-1,4644,"ab"]],[4646,4646],[4644,4644]]],[1569200012790,["GJX@GJXAIOU",[[1,4644,"ba"]],[4644,4644],[4646,4646]]],[1569200013009,["GJX@GJXAIOU",[[1,4647,"t"]],[4646,4646],[4647,4647]]],[1569200013455,["GJX@GJXAIOU",[[-1,4647,"t"]],[4647,4647],[4646,4646]]],[1569200088037,["GJX@GJXAIOU",[[1,5067,";"]],[5067,5067],[5068,5068]]],[1569200089247,["GJX@GJXAIOU",[[-1,5067,";"]],[5068,5068],[5067,5067]]],[1569200089945,["GJX@GJXAIOU",[[1,5067,"；"]],[5067,5067],[5068,5068]]],[1569200092511,["GJX@GJXAIOU",[[-1,5129,";"]],[5130,5130],[5129,5129]]],[1569200092977,["GJX@GJXAIOU",[[1,5129,"；"]],[5129,5129],[5130,5130]]],[1569200096397,["GJX@GJXAIOU",[[1,5108,"·"]],[5108,5108],[5109,5109]]],[1569200097689,["GJX@GJXAIOU",[[-1,5108,"·"]],[5109,5109],[5108,5108]]],[1569200098258,["GJX@GJXAIOU",[[1,5108,"`"]],[5108,5108],[5109,5109]]],[1569200099922,["GJX@GJXAIOU",[[1,5130,"`"]],[5130,5130],[5131,5131]]],[1569200101930,["GJX@GJXAIOU",[[1,5101," "]],[5101,5101],[5102,5102]]],[1569200119206,["GJX@GJXAIOU",[[-1,5292," "]],[5293,5293],[5292,5292]]],[1569200119914,["GJX@GJXAIOU",[[1,5292,"."]],[5292,5292],[5293,5293]]],[1569200120734,["GJX@GJXAIOU",[[-1,5291,".."]],[5293,5293],[5291,5291]]],[1569200121436,["GJX@GJXAIOU",[[1,5291,"。"]],[5291,5291],[5292,5292]]],[1569200123647,["GJX@GJXAIOU",[[-1,5331,"."]],[5332,5332],[5331,5331]]],[1569200124473,["GJX@GJXAIOU",[[1,5331,"。"]],[5331,5331],[5332,5332]]],[1569200125678,["GJX@GJXAIOU",[[-1,5331,"。"]],[5332,5332],[5331,5331]]],[1569200126285,["GJX@GJXAIOU",[[1,5331,"；"]],[5331,5331],[5332,5332]]],[1569200127365,["GJX@GJXAIOU",[[-1,5291,"。"]],[5292,5292],[5291,5291]]],[1569200128460,["GJX@GJXAIOU",[[1,5291,"’"]],[5291,5291],[5292,5292]]],[1569200129206,["GJX@GJXAIOU",[[-1,5291,"’"]],[5292,5292],[5291,5291]]],[1569200129761,["GJX@GJXAIOU",[[1,5291,"；"]],[5291,5291],[5292,5292]]],[1569200141969,["GJX@GJXAIOU",[[-1,5338,":"]],[5339,5339],[5338,5338]]],[1569200142649,["GJX@GJXAIOU",[[1,5338,"："]],[5338,5338],[5339,5339]]],[1569200148543,["GJX@GJXAIOU",[[-1,5395,":"]],[5396,5396],[5395,5395]]],[1569200149299,["GJX@GJXAIOU",[[1,5395,"："]],[5395,5395],[5396,5396]]],[1569200151672,["GJX@GJXAIOU",[[-1,5424,":"]],[5425,5425],[5424,5424]]],[1569200152266,["GJX@GJXAIOU",[[1,5424,"："]],[5424,5424],[5425,5425]]],[1569200177408,["GJX@GJXAIOU",[[-1,5491,"."]],[5492,5492],[5491,5491]]],[1569200177912,["GJX@GJXAIOU",[[1,5491,"；"]],[5491,5491],[5492,5492]]],[1569200179462,["GJX@GJXAIOU",[[-1,5513,"."]],[5514,5514],[5513,5513]]],[1569200179972,["GJX@GJXAIOU",[[1,5513,"；"]],[5513,5513],[5514,5514]]],[1569200183344,["GJX@GJXAIOU",[[-1,5540,"."]],[5541,5541],[5540,5540]]],[1569200183945,["GJX@GJXAIOU",[[1,5540,"："]],[5540,5540],[5541,5541]]],[1569200239768,["GJX@GJXAIOU",[[1,5517,"**"],[1,5540,"**"]],[5517,5540],[5517,5544]]],[1569200257106,["GJX@GJXAIOU",[[-1,5825,"smallming"]],[5834,5834],[5825,5825]]],[1569200260013,["GJX@GJXAIOU",[[1,5825,"gjxaiou"]],[5825,5825],[5832,5832]]],[1569200412984,["GJX@GJXAIOU",[[1,7084,"<key，resultType  属性控制>"]],[7081,7084],[7106,7106]]],[1569200415312,["GJX@GJXAIOU",[[-1,7140,"  - `Map<key，resultType  属性控制>`"]],[7140,7171],[7140,7140]]],[1569200415678,["GJX@GJXAIOU",[[-1,7140,"\n"]],[7140,7140],[7139,7139]]],[1569200418543,["GJX@GJXAIOU",[[-1,7110,"- "]],[7112,7112],[7110,7110]]],[1569200422471,["GJX@GJXAIOU",[[-1,7136,"."]],[7137,7137],[7136,7136]]],[1569200446361,["GJX@GJXAIOU",[[-1,7039,"，"]],[7040,7040],[7039,7039]]],[1569200459567,["GJX@GJXAIOU",[[-1,7411,"     "]],[7416,7416],[7411,7411]]],[1569200479942,["GJX@GJXAIOU",[[-1,7276,"\t// "]],[7276,7280],[7276,7276]]],[1569200483166,["GJX@GJXAIOU",[[-1,7225,"\t// "]],[7225,7229],[7225,7225]]],[1569200490083,["GJX@GJXAIOU",[[1,7225,"        、"]],[7225,7225],[7234,7234]]],[1569200490703,["GJX@GJXAIOU",[[-1,7233,"、"]],[7234,7234],[7233,7233]]],[1569200492626,["GJX@GJXAIOU",[[1,7233,"/**"]],[7233,7233],[7236,7236]]],[1569200496478,["GJX@GJXAIOU",[[-1,7282,"\n"]],[7283,7283],[7282,7282]]],[1569200502597,["GJX@GJXAIOU",[[-1,7276,"对象    "]],[7282,7282],[7276,7276]]],[1569200503519,["GJX@GJXAIOU",[[1,7276,"duix"]],[7276,7276],[7280,7280]]],[1569200504409,["GJX@GJXAIOU",[[-1,7276,"duix"]],[7280,7280],[7276,7276]]],[1569200506976,["GJX@GJXAIOU",[[1,7276,"对象，"]],[7276,7276],[7279,7279]]],[1569200515081,["GJX@GJXAIOU",[[-1,7278,"，"]],[7279,7279],[7278,7278]]],[1569200521801,["GJX@GJXAIOU",[[1,7278,"；\n        *"]],[7278,7278],[7289,7289]]],[1569200680583,["GJX@GJXAIOU",[[1,7330,"        \n"]],[7329,7329],[7338,7338]]],[1569200682098,["GJX@GJXAIOU",[[1,7338,"*、"]],[7338,7338],[7340,7340]]],[1569200682909,["GJX@GJXAIOU",[[-1,7339,"、"]],[7340,7340],[7339,7339]]],[1569200683465,["GJX@GJXAIOU",[[1,7339,"/"]],[7339,7339],[7340,7340]]],[1569200685124,["GJX@GJXAIOU",[[1,7289," "]],[7289,7289],[7290,7290]]],[1569200687100,["GJX@GJXAIOU",[[1,7236," "]],[7236,7236],[7237,7237]]],[1569200731070,["GJX@GJXAIOU",[[-1,7589,"\t\t//"]],[7589,7593],[7589,7589]]],[1569200731456,["GJX@GJXAIOU",[[-1,7588,"\n"]],[7589,7589],[7588,7588]]],[1569200732771,["GJX@GJXAIOU",[[1,7588,","]],[7588,7588],[7589,7589]]],[1569200736138,["GJX@GJXAIOU",[[1,7578," "]],[7578,7578],[7579,7579]]],[1569200736764,["GJX@GJXAIOU",[[1,7576," "]],[7576,7576],[7577,7577]]],[1569200738300,["GJX@GJXAIOU",[[1,7412," "]],[7412,7412],[7413,7413]]],[1569200744472,["GJX@GJXAIOU",[[1,7837,"\n\t\t"]],[7834,7834],[7837,7837]]],[1569200749301,["GJX@GJXAIOU",[[1,7952," "]],[7952,7952],[7953,7953]]],[1569200750537,["GJX@GJXAIOU",[[1,7965," "]],[7965,7965],[7966,7966]]],[1569200751585,["GJX@GJXAIOU",[[1,7969," "]],[7969,7969],[7970,7970]]],[1569200753059,["GJX@GJXAIOU",[[1,7971," "]],[7971,7971],[7972,7972]]],[1569200779261,["GJX@GJXAIOU",[[-1,8345,"\t<!-- id:方法名 \n\t\tparameterType:定义参数类型\n\t\tresultType:返回值类型.\n\t\t\n\t\t如果方法返回值是list，在resultType中写List的泛型，因为mybatis\n\t\t对jdbc封装，一行一行读取数据\n\t-->"]],[8345,8474],[8345,8345]]],[1569200780214,["GJX@GJXAIOU",[[-1,8345,"\n"]],[8345,8345],[8344,8344]]],[1569200794016,["GJX@GJXAIOU",[[-1,8282,"<!-- namesapce:理解成实现类的全路径(包名+类名) -->"]],[8282,8318],[8282,8282]]],[1569200794720,["GJX@GJXAIOU",[[-1,8282,"\n"]],[8282,8282],[8281,8281]]],[1569200797696,["GJX@GJXAIOU",[[1,8282,"  \n"]],[8281,8281],[8284,8284]]],[1569200964758,["GJX@GJXAIOU",[[-1,9526,"."]],[9527,9527],[9526,9526]]],[1569200966341,["GJX@GJXAIOU",[[1,9526,", "]],[9526,9526],[9528,9528]]],[1569200967643,["GJX@GJXAIOU",[[-1,9526,", "]],[9528,9528],[9526,9526]]],[1569200968811,["GJX@GJXAIOU",[[1,9526,"，"]],[9526,9526],[9527,9527]]],[1569201053365,["GJX@GJXAIOU",[[1,9736,"以及输出位置"]],[9736,9736],[9742,9742]]],[1569201095277,["GJX@GJXAIOU",[[-1,10513,"![log4j输出目的地]($resource/log4j%E8%BE%93%E5%87%BA%E7%9B%AE%E7%9A%84%E5%9C%B0.jpg)"]],[10513,10592],[10513,10513]]],[1569201095815,["GJX@GJXAIOU",[[-1,10514,"\n"]],[10513,10513],[10512,10512]]],[1569201096501,["GJX@GJXAIOU",[[-1,10513,"\n"]],[10512,10512],[10511,10511]]],[1569201262458,["GJX@GJXAIOU",[[-1,10975,"也是"]],[10977,10977],[10975,10975]]],[1569201389052,["GJX@GJXAIOU",[[-1,11949,"."]],[11950,11950],[11949,11949]]],[1569201389698,["GJX@GJXAIOU",[[1,11949,"。"]],[11949,11949],[11950,11950]]],[1569201394629,["GJX@GJXAIOU",[[1,11869,"**"],[1,11949,"**"]],[11869,11949],[11869,11953]]],[1569201400011,["GJX@GJXAIOU",[[1,11953," "]],[11953,11953],[11954,11954]]],[1569201442960,["GJX@GJXAIOU",[[1,12174,"（）"]],[12174,12174],[12176,12176]]],[1569201451352,["GJX@GJXAIOU",[[1,12175,"尽量不使用这个方法"]],[12175,12175],[12184,12184]]],[1569201497413,["GJX@GJXAIOU",[[1,12210,"，百世"]],[12210,12210],[12213,12213]]],[1569201497973,["GJX@GJXAIOU",[[-1,12211,"百世"]],[12213,12213],[12211,12211]]],[1569201501589,["GJX@GJXAIOU",[[1,12211,"表示"]],[12211,12211],[12213,12213]]],[1569201513546,["GJX@GJXAIOU",[[1,12271," ·"]],[12271,12271],[12273,12273]]],[1569201514822,["GJX@GJXAIOU",[[-1,12272,"·"]],[12273,12273],[12272,12272]]],[1569201515219,["GJX@GJXAIOU",[[1,12272,"`"]],[12272,12272],[12273,12273]]],[1569201516789,["GJX@GJXAIOU",[[1,12276,"` "]],[12276,12276],[12278,12278]]],[1569201519065,["GJX@GJXAIOU",[[-1,12293,"."]],[12294,12294],[12293,12293]]],[1569201519882,["GJX@GJXAIOU",[[1,12293,"."]],[12293,12293],[12294,12294]]],[1569201520605,["GJX@GJXAIOU",[[-1,12293,"."]],[12294,12294],[12293,12293]]],[1569201521201,["GJX@GJXAIOU",[[1,12293,"。"]],[12293,12293],[12294,12294]]],[1569201563054,["GJX@GJXAIOU",[[1,11764,"\n"]],[11763,11763],[11764,11764]]],[1569201563182,["GJX@GJXAIOU",[[1,11765,"\n"]],[11764,11764],[11765,11765]]],[1569201565124,["GJX@GJXAIOU",[[1,11764,"****"]],[11764,11764],[11766,11766]]],[1569201574726,["GJX@GJXAIOU",[[1,11766,"传递多个参数时候，可以使用对象或者"]],[11766,11766],[11783,11783]]],[1569201576399,["GJX@GJXAIOU",[[1,11783,"MAP"]],[11783,11783],[11786,11786]]],[1569201576458,["GJX@GJXAIOU",[[1,11783," "]],[11786,11786],[11787,11787]]],[1569201579023,["GJX@GJXAIOU",[[-1,11784,"MAP"]],[11787,11787],[11784,11784]]],[1569201582178,["GJX@GJXAIOU",[[1,11784,"map,"]],[11784,11784],[11788,11788]]],[1569201582877,["GJX@GJXAIOU",[[-1,11787,","]],[11788,11788],[11787,11787]]],[1569201597228,["GJX@GJXAIOU",[[1,11787,"，和第二部分的 "]],[11787,11787],[11795,11795]]],[1569201617922,["GJX@GJXAIOU",[[1,11794,"多参数实现方法；"]],[11794,11794],[11802,11802]]],[1569201620751,["GJX@GJXAIOU",[[-1,11801,"；"]],[11802,11802],[11801,11801]]],[1569201623291,["GJX@GJXAIOU",[[1,11804,"；"]],[11804,11804],[11805,11805]]],[1569201625036,["GJX@GJXAIOU",[[-1,11801," "]],[11802,11802],[11801,11801]]],[1569201663143,["GJX@GJXAIOU",[[1,14056,"**"],[1,14081,"**"]],[14056,14081],[14056,14085]]]],null,"GJX@GJXAIOU"],["84abbf49-fa83-4d31-8066-a36b9a7628b8",1572259951210,"---\nstyle: summer\n---\n# FrameDay01_1 Mybatis3\n\n## 一、前言：数据库 SQL命令\n\n- 创建数据库并指定编码\n`Create database 数据库名 default character set utf8`\n \n - 创建表\n```java\nCreatetable 表名(\n   列名 类型 约束 auto_increament comment \"备注\"\n);\n```\n\n\n## 二、命名规范\n\n* 项目名:没有要求，不起中文\n* 包:公司域名倒写 com.bjsxt\n* 数据访问层:dao， persist， **mapper**\n* 实体:entity， model， bean，javabean， **pojo**\n* 业 务 逻 辑 : **service**，biz \n* 控制器: controller， **servlet**，action，web\n* 过滤器: filter\n* 异常: exception\n* 监听器:listener\n* 注释:\n  * 类上和方法上使用文档注释 `/** */`\n  * 在方法里面使用`/* */` 或`//`\n* 类: 大驼峰\n* 方法，属性:小驼峰\n\n## 三、MVC开发模式\n\n- M: Model 模型；实体类和业务和 dao\n- V: view 视图 ；现在一般使用. JSP\n- C: Controller 控制器，现在使用servlet\n  - 作用：视图和逻辑分离\n- MVC 适用场景:大型项目开发.\n- **项目实现步骤**：\n  - 先设计数据库\n  - 再写实体类：用于封装数据\n  - 持久层DAO\n  - 业务逻辑\n  - 控制器\n  - 视图\n![MVC开发模式]($resource/MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F.png)\n\n\n## 四、框架概念\n\n- 框架:软件的半成品.未解决问题制定的一套约束，在提供功能基础上进行扩充。\n- **框架中一些不能被封装的代码(变量)，需要使用框架者新建一个 xml 文件，在文件中添加变量内容**。\n  - **需要建立特定位置和特定名称的配置文件**。\n  - **需要使用 xml 解析技术和反射技术**。\n  - 是 MySQL Mapper Framework for Java\n\n**常用概念**\n- 类库:提供的类没有封装一定逻辑。\n举例:类库就是名言警句，写作文时引入名言警句\n\n- 框架:区别于类库，里面有一些约束。\n举例:框架是填空题\n\n## 五、MyBatis 简介\n\n- Mybatis 开源免费框架。原名叫 iBatis，2010 在 google  code，2013 年迁移到 github\n\n- 作用: **数据访问层（即是 Dao）框架**.\n  - 底层是对 JDBC 的封装.\n\n- mybatis 优点之一:\n  - **使用 mybatis 时不需要编写实现类，只需要写需要执行的 sql 命令。**\n\n\n## 六、MyBatis 使用\n\n### （一）环境搭建\n\n- 步骤一：导入 jar\n\n包名 | 作用\n---|---\nmybatis.jar   |MyBatis 的核心包\nmysql-connector-java.jar | MySQL 驱动包\ncglib.jar   | 动态代理包\nasm.jar|cglib 依赖包\njavassist-GA.jar|cglib 依赖包（负责字节码解析的包）\ncommons-logging.jar|日志包\nlog4j.jar| 日志包\nlog4j-api.jar| 日志包\nlog4j-core.jar| 日志包\nslf4j-api.jar| 日志包\nslf4j-log4j.jar| 日志包\n   \n- 步骤二：**在 src 下新建全局配置文件**(编写 JDBC 四个变量)\n  - 没有名称和地址要求\n  - **在全局配置文件中引入 DTD 或 schema**【使用见 Blogs -> DTD】\n    - 如果导入 dtd 后没有提示：Window--> preference --> XML --> XMl catalog --> add 按钮\n  - 全局配置文件内容【MyBatis.xml】\n```MyBatis_xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--注意这里是 configuration ，下面为 mybatis-3-config -->\n<!DOCTYPE configuration\n  PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n  \n<configuration>\n  <!-- default 为引用 environment 的 id，即当前所使用的环境 -->\n  <environments default=\"default\">\n  \t<!-- 声明可以使用的环境 -->\n  \t<environment id=\"default\">\n  \t\t<!-- 使用原生 JDBC 事务 -->\n  \t\t<transactionManager type=\"JDBC\"></transactionManager>\n  \t\t<dataSource type=\"POOLED\">\n      \t\t  <property name=\"driver\" value=\"com.mysql.cj.jdbc.Driver\"/>\n      \t          <property name=\"url\" value=\"jdbc:mysql://localhost:3306/数据库名\"/>\n      \t\t  <property name=\"username\" value=\"root\"/>\n      \t          <property name=\"password\" value=\"GJXAIOU\"/>\n  \t\t</dataSource>\n  \t</environment>\n  </environments>\n  \n  <mappers>\n      <!-- 配置实体类 Mapper 文件，一般使用 package -->\n  \t<mapper resource=\"com/gjxaiou/mapper/FlowerMapper.xml\"/>\n  </mappers>\n</configuration>\n```\n\n**注：** mybatis.xml 中的 <mappers>中配置的 resource 是整个项目中的所有其他 `实体类Mapper.xml` 文件；\n\nmappers 标签下有许多 mapper 标签，每一个 mapper 标签中配置的都是一个独立的映射配置文件的路径，配置方式有以下几种。\n\n第一种：使用相对路径进行配置。示例代码如下：\n```\n<mappers>\n    <mapper resource=\"org/mybatis/mappers/UserMapper.xml\"/>\n    <mapper resource=\"org/mybatis/mappers/ProductMapper.xml\"/>\n    <mapper resource=\"org/mybatis/mappers/ManagerMapper.xml\"/>\n</mappers>\n```\n\n第二种：使用绝对路径进行配置。示例代码如下：\n```\n<mappers>\n    <mapper url=\"file:///var/mappers/UserMapper.xml\"/>\n    <mapper url=\"file:///var/mappers/ProductMapper.xml\"/>\n    <mapper url=\"file:///var/mappers/ManagerMapper.xml\"/>\n</mappers>\n```\n\n第三种：使用接口信息进行配置。示例代码如下：\n```\n<mappers>\n    <mapper class=\"org.mybatis.mappers.UserMapper\"/>\n    <mapper class=\"org.mybatis.mappers.ProductMapper\"/>\n    <mapper class=\"org.mybatis.mappers.ManagerMapper\"/>\n</mappers>\n```\n\n第四种：使用接口所在包进行配置。示例如下：\n```\n<mappers>\n    <package name=\"org.mybatis.mappers\"/>\n</mappers>\n```\n\n- 步骤三：新建以 mapper 结尾的包，在包下新建：`实体类名+Mapper.xml`\n  - 文件作用：编写需要执行的 SQL 命令\n  - **把 xml 文件理解成实现类**；\n FlowerMapper.xml 文件内容为：【**注意抬头中的信息不同，将上面抬头中的 config 全部换为 mapper**】\n```FlowerMapper_xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<!-- namespace:理解成实现类的全路径(包名+类名)，用于绑定 Dao 接口（即面向接口编程），使用 namespace 之后就不用写实现类，业务逻辑会直接通过这个绑定寻找到对应点的 SQL 语句进行对应的数据处理 -->\n<mapper namespace=\"a.b\" >\n\t<!-- 如果方法返回值是list，在resultType中写List的泛型，因为mybatis\n\t\t对jdbc封装，一行一行读取数据-->\n\t<!--id:表示方法名; parameterType:定义参数类型;resultType:返回值类型 -->\n\t<select id=\"selAll\" resultType=\"com.gjxaiou.pojo.Flower\">\n\t\tselect * from flower\n\t</select>\n</mapper>\n```\n\n- 步骤四：测试结果(只有在单独使用 mybatis 时使用，最后 ssm 整合时下面代码不需要编写\n```java\nimport com.gjxaiou.pojo.Flower;\n\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream is = Resources.getResourceAsStream(\"mybatis.xml\");\n\t\t//使用工厂设计模式\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t//生产SqlSession\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n### （二）环境搭建详解\n\n**全局配置文件中内容**\n- <transactionManager/> type 属性可取值如下：\n  - JDBC，事务管理使用 JDBC 原生事务管理方式；\n  - MANAGED 把事务管理转交给其他容器，相当于设置原生 JDBC 事务`setAutoMapping(false)`；\n- <dataSouce/>type 属性可取值如下：\n  - POOLED：使用数据库连接池；\n  - UNPOOLED：不使用数据库连接池，和直接使用 JDBC 一样；\n  - JNDI：是 java 命名目录接口技术；\n\n## 八、数据库连接池【补充知识】\n\n- 在内存中开辟一块空间，存放多个数据库连接对象；\n- JDBC Tomcat Pool，直接由 tomcat 产生数据库连接池； \n- 图示：数据库连接池中有很多连接，他们可能处于 Active 或者 Idle 等等状态；\n  - active 活跃状态：当前连接对象被应用程序使用中\n  - Idle 空闲状态：等待应用程序使用\n- 使用数据库连接池的目的\n  - 在高频率访问数据库时，使用数据库连接池可以降低服务器系统压力，提升程序运行效率；\n    -  小型项目不适用数据库连接池；\n- **实现 JDBC tomcat Pool 的步骤**：\n  - 在 web 项目的 META-INF 中存放 context.xml，在 context.xml 编写数据库连接池相关属性\n  - 把项目发布到 tomcat 中，则数据库连接池产生了\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n\t<Resource\n\t\tdriverClassName=\"com.mysql.jdbc.Driver\"\n\t\turl=\"jdbc:mysql://localhost:3306/lianxi\"\n\t\tusername=\"root\"\n\t\tpassword=\"gjxaiou\"\n\t\tmaxActive=\"50\"\n\t\tmaxIdle=\"20\"\n\t\tname=\"test\"\n\t\tauth=\"Container\"\n\t\tmaxWait=\"10000\"\n\t\ttype=\"javax.sql.DataSource\"\n\t/>\n</Context>\n```\n\n - 可以在 Java 中使用 JNDI 获取数据库连接池中对象\n  - Context:上下文接口.context.xml 文件对象类型；代码见下面\n  - 当关闭连接对象时，把连接对象归还给数据库连接池，把状态改变成 Idle\n```java\n@WebServlet(\"/pool\")\npublic class DemoServlet extends HttpServlet {\n\t@Override\n\tprotected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n  \t  try {\n  \t\tContext cxt = new InitialContext();\n  \t\tDataSource ds = (DataSource) cxt.lookup(\"java:comp/env/test\");\n  \t\tConnection conn = ds.getConnection();\n  \t\tPreparedStatement ps = conn.prepareStatement(\"select * from flower\");\n  \t\tResultSet rs = ps.executeQuery();\n  \t\tres.setContentType(\"text/html;charset=utf-8\");\n  \t\tPrintWriter out = res.getWriter();\n  \t\twhile(rs.next()){\n  \t\t\tout.print(rs.getInt(1)+\"&nbsp;&nbsp;&nbsp;&nbsp;\"+rs.getString(2)+\"<br/>\");\n  \t\t}\n  \t\tout.flush();\n  \t\tout.close();\n  \t\trs.close();\n  \t} catch (NamingException e) {\n  \t\te.printStackTrace();\n  \t} catch (SQLException e) {\n  \t\te.printStackTrace();\n  \t}\n  }\n}\n```\n\n\n## 九、三种查询方式\n\n- `selectList()`  返回值为 `List<resultType  属性控制>`\n适用于查询结果都需要遍历的需求\n\n- `selectOne()` 返回值 `Object`\n适用于返回结果只是变量或一行数据时\n\n- `selectMap()` 返回值 `Map<key，resultType  属性控制>`\n  适用于需要在查询结果中通过某列的值取到这行数据的需求\n```java\npublic class Test {\n\tpublic static void main(String[] args) throws IOException {\n        /** MyBatis 默认不加载配置文件，因此需要先加载配置文件，返回整个配置文件的流对象；\n        * 在数据访问层处理异常和在控制器中处理异常，一般在 service 中只抛出异常；\n        */\n\t\tInputStream is = Resources.getResourceAsStream(\"mybatis.xml\");\n\t\t// 使用工厂设计模式\n\t\t// 前面是工厂  实例化工厂对象时使用的是构建者设计模式   它的名称标志:后面有Builder \n\t\t// 构建者设计模式意义: 简化对象实例化过程\n\t\tSqlSessionFactory factory = new SqlSessionFactoryBuilder().build(is);\n\t\t// 生产 SqlSession, 整个 sqlsession 就是 MyBatis 中 API 封装的对象，增删改查都在里面\n\t\tSqlSession session=factory.openSession();\n\t\t\n\t\t// selectList\n\t\tList<Flower> list = session.selectList(\"a.b.selAll\");\n\t\tfor (Flower flower : list) {\n\t\t\tSystem.out.println(flower.toString());\n\t\t}\n\t\t\n\t\t// selectOne\n\t\tint count = session.selectOne(\"a.b.selById\");\n\t\tSystem.out.println(count);\n\t\t\n\t\t// selectMap\n\t\t// 把数据库中哪个列的值当作 map 的 key\n\t\tMap<Object, Object> map = session.selectMap(\"a.b.c\", \"name123\");\n\t\tSystem.out.println(map);\n\t\t\n\t\tsession.close();\n\t}\n}\n```\n\n对应的 实体类 Mapper.xml 文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n  PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n  \n<mapper namespace=\"a.b\" >\n\t<select id=\"selAll\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n\t// 这里的 int 相当于 Ingeter\n\t<select id=\"selById\" resultType=\"int\">\n\t\tselect count(*) from flower\n\t</select>\n\t\n\t<select id=\"c\" resultType=\"com.bjsxt.pojo.Flower\">\n\t\tselect id,name name123,price,production from flower\n\t</select>\n\t\n</mapper>\n```\n\n\n\n##  十、注解\n\n- 注解存在的意义:简化 xml 文件的开发；\n- 注解在 servlet 3.0 规范之后大力推广的；\n- 注解前面的@XXX，表示引用一个 @interface；\n  - @interface 表示注解声明\n- 注解可以有属性，因为注解其实就是一个接口(类)；\n- 每次使用注解都需要导包\n- 注解语法: `@XXXX(属性名= 值)`\n- 值的分类\n  - 如果值是基本数据类型或字符串: `属性名=值`；\n  - 如果值是数组类型: `属性名={值，值}`；\n    - 如果只有一个值可以省略大括号；\n  - 如果值是类类型：`属性名=@名称`\n- 如果注解只需要给一个属性赋值，且这个属性是默认属性，可以省略属性名\n\n\n## 十一、路径\n\n* 编写路径为了告诉编译器如何找到其他资源；\n\n* 路径分类\n  * 相对路径: 从当前资源出发找到其他资源的过程\n  *  绝对路径: 从根目录(服务器根目录或项目根目录)出发找到其他资源的过程\n    *  标志: 只要以/开头的都是绝对路径\n- 绝对路径:\n  - 如果是请求转发 / 表示项目根目录(WebContent)\n  - 其他重定向，<img/> <script/>，<style/>，location.href 等/都表示服务器根目录(tomcat/webapps 文件夹)\n- 如果客户端请求的控制器，控制器转发到JSP 后，jsp 中如果使用相对路径，需要按照控制器的路径去找其他资源；\n  - 保险办法:使用绝对路径，可以防止上面的问题；\n\n## 十二、Log4J\n- 由 apache 推出的开源免费日志处理的类库；\n\n- 为什么需要日志:\n  - 在项目中编写 System.out.println();输出到控制台，当项目发布到 tomcat 后，没有控制台(在命令行界面能看见.)，不容易观察一些输出结果。\n  - **log4j 作用**：不仅能把内容输出到控制台，还能把内容输出到文件中，便于观察结果。\n\n- **使用步骤**:\n  - 导入 log4j-xxx.jar\n  - 在 src 下新建 log4j.properties(路径和名称都不允许改变)\n    - 在 ConversionPattern 中书写表达式（就是日志输出的格式）；\n    - log4j.appender.LOGFILE.File  日志文件位置及名称(日志文件扩展名.log)\n```java\n// 遇到什么级别才输出以及输出位置：调试信息输出， 输出到控制台，输出到 log 文件\nlog4j.rootCategory=DEBUG, CONSOLE, LOGFILE\n// 向控制台输出相关的配置\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout log4j.appender.CONSOLE.layout.ConversionPattern=%C %d{YYYY-MM-dd hh:mm:ss}%m  %n\n// 向日志文件输出的相关的配置\nlog4j.appender.LOGFILE=org.apache.log4j.FileAppender log4j.appender.LOGFILE.File=E:/my.log \nlog4j.appender.LOGFILE.Append=true log4j.appender.LOGFILE.layout=org.apache.log4j.Patter nLayout log4j.appender.LOGFILE.layout.ConversionPattern=%C\t%m %L %n\n```\n\n- log4j 输出级别（一共五个级别）\n  - fatal(致命错误) >  error  ( 错误)  >  warn  ( 警告)  >  info(普通信息)  >  debug(调试信息)\n  - 在 log4j.properties 的第一行中控制输出级别，**只有大于等于该级别信息才输出**\n\n- log4j 输出目的地\n  -  在一行控制输出目的地，其中 CONSOLE 表示控制台 ，LOGFILE 表示文件\n\n在实际使用：新建一个类，例如：Test类\n- 使用方法一：\n```java\nLogger  logger = Logger.getLogger(Test.class);\n// 这里以 debug 为例，具体的方法看上面输出级别调用不同的方法\nlogger.debug(\"这是调试信息\"); \n```\n- 使用方法二：\n在 catch 中 ： `logger.error(e.getMessage());` 即可，注意在log4j配置文件中加上相关的表达式；\n\n- pattern 中常用几个表达式（区分大小写）\n  - %C 输出包名+类名；\n  - %d{YYYY-MM-dd  HH:mm:ss} 时间；\n  - %L 行号\n  - %m 信息\n  - %n 换行\n上面可以多个一起使用， 中间空格就行\n示例如下：\n\n![pattern示例配置]($resource/pattern%E7%A4%BA%E4%BE%8B%E9%85%8D%E7%BD%AE.png)\n\n\n\n# 十三、<settings>标签\n\n==该标签必须配置在最前面==\n- 在 mybatis 全局配置文件中通过<settings>标签控制 mybatis 全局开关\n- 在 mybatis.xml 中开启 log4j 命令如下：\n  -  必须保证有 log4j.jar\n  -  在 src 下有 log4j.properties\n```java\n<settings>\n    <setting  name=\"logImpl\"  value=\"LOG4J\"/>\n</settings>\n```\n\n-  log4j 中可以输出指定内容的日志(控制某个局部内容的日志级别) ：直接在 log4j.properties 中设置；\n    -  命名级别(包级别): `<mapper>namespace 属性中除了最后一个类名`\n例如 `namespace=”com.bjsxt.mapper.PeopleMapper”` 其中包级别为 `com.bjsxt.mapper` ，需要在 `log4j.propeties` 中做两件事情  \n      - 先在总体级别调成 Error，这样可以不输出无用信息\n      -  在设置某个指定位置级别为 DEBUG\n\n![根据命名空间设置不同优先级]($resource/%E6%A0%B9%E6%8D%AE%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E4%BC%98%E5%85%88%E7%BA%A7.png)\n\n  - 类级别\n    -  namespace 属性值 ，相当于namespace 类名\n  - 方法级别\n    - 使用 namespace 属性值+标签 id 属性值\n\n## 十四、 parameterType 属性（Mybatis 中参数设置）\n\n**传递多个参数时候，可以使用对象或者 map，和第二部分的多参数实现方法**；\n\n- 在 XXXMapper.xml  中`<select>` `<delete>`等标签的 `parameterType` 可以控制参数类型（例如可以传入 select 语句的参数，控制输入参数的类型）\n\n- **SqlSession 的 `selectList()` 和 `selectOne()` 的第二个参数和 `selectMap()` 的第三个参数都表示方法的参数** 。\n  - 示例：\n```java\nPeople  p  =  session.selectOne(\"a.b.selById\",1);\nSystem.out.println(p);\n```\n  - 在 实例名Mapper.xml  中可以通过`#{}`获取参数（代码见下）\n    - `parameterType`  控制参数类型\n    - `#{}`  获取参数内容\n      - 使用索引，从 0 开始 `#{0}`表示第一个参数（尽量不使用这个方法）\n      - 也可以使用`#{param1}`，表示第一个参数\n      - 如果**只有一个参数(其参数应该是基本数据类型或 String)**，mybatis 对 `#{}` 里面内容没有要求只要写内容即可。\n      - 如果参数是对象`#{属性名}`\n      -  如果参数是 map， 写成`#{key}` ：当需要传递多个参数时候，目前只能使用 map 或者对象\n```java\n<select id=\"selById\"\n  resultType=\"com.bjsxt.pojo.People\"  parameterType=\"int\">\n  select * from people where id=#{0}\n</select>\n```\n\n- `#{}` 和 `${}` 的 区 别\n  - `#{}` 获取参数的内容，支持索引获取，或者使用 param1 获取指定位置参数，并且 SQL 使用?占位符\n  -  `${}` 字符串拼接，不使用?，默认找`${内容}`内容的 get/set 方法，如果写数字，就是一个数字\n配置示例：\nPeopleMapper.xml\n```java\n<select id=\"test\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"com.bjsxt.pojo.People\"> \n  select * from people where id =  ${id}\n</select>\n```\nTest.java\n```java\nPeople peo =new People();\npeo.setId(1);\nPeople p = session.selectOne(\"a.b.selById\",people);\n```\n\n- 如果在 xml 文件中出现 “<” , “>” ，双引号 等特殊字符时可以使用 XML 文件转义标签(XML 自身的)，格式为：`<![CDATA[ 内 容 ]]>`\n\n-  mybatis 中实现 mysql  分页写法\n  -  ? 中不允许在关键字前后进行数学运算，需要在代码中计算完成后传递到 mapper.xml  中；\n\n  Java 中代码为：\n```java\n//显示几个\nint pageSize = 2;\n//第几页\nint pageNumber = 2;\n//如果希望传递多个参数，可以使用对象或map\nMap<String,Object> map = new HashMap<>();\nmap.put(\"pageSize\", pageSize);\nmap.put(\"pageStart\", pageSize*(pageNumber-1));\nList<People> p = session.selectList(\"a.b.page\",map);\n```\nmapper.xml 中代码为：\n```xml\n<select id=\"page\" resultType=\"com.bjsxt.pojo.People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十五、typeAliases 别名（在mybatis.xml中进行配置，命令如下）\n\n==别名配置必须在 <environments>前面==\n一共有三类：分别是系统内置的别名，给某个类的别名，\n- 系统内置别名: 就是把类型全小写（见文档 ）\n- 给某个类起别名\n    - alias=”自定义”\n    - 同时 mapper.xml  中 peo 引用 People 类\n```java\n<typeAliases>\n    <typeAlias type=\"com.bjsxt.pojo.People\" alias=\"peo\"/>\n</typeAliases>\n```\nmapper.xml 中内容为：  \n```java\n<select id=\"page\" resultType=\"peo\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n- **直接给某个包下所有类起别名，别名为类名，区分大小写**\n  - mybatis.xml 中配置\n```java\n<typeAliases>\n    <package name=\"com.bjsxt.pojo\" />\n</typeAliases>\n```\n- mapper.xml  中通过类名引用\n```java\n<select id=\"page\" resultType=\"People\" parameterType=\"map\">\n    select * from people limit #{pageStart},#{pageSize}\n</select>\n```\n\n## 十六、MyBatis 实现新增 \n\n- 概念复习：下面三者本质相同，角度不同；\n  - 功能:从应用程序角度出发，软件具有哪些功能.\n  - 业务:完成功能时的逻辑；对应 Service 中一个方法\n  - **事务:从数据库角度出发，完成业务时需要执行的 SQL 集合，统称一个事务**\n    - **事务回滚：如果在一个事务中某个 SQL 执行事务，希望回归到事务的原点，保证数据库数据的完整性**。\n\n- **在 mybatis 中默认是关闭了 JDBC 的自动提交功能**\n  -  每一个 SqlSession 默认都是不自动提交事务.\n  -  可以使用 `session.commit()` 提交事务.\n  - 也可以使用 `openSession(true);` 自动提交底层为：`.setAutoCommit(true);`\n- mybatis 底层是对 JDBC 的封装.\n  - JDBC 中 executeUpdate()执行新增，删除，修改的 SQL，方法的返回值 int，表示受影响的行数.\n  - 应为上面原因，**因此 mybatis 中 `<insert> <delete> <update>` 标签没有 resultType 属性，认为返回值都是 int**。\n\n- 在 openSession() 时 Mybatis 会创建 SqlSession 时同时创建一个 Transaction(事务对象)，同时 autoCommit 都为 false\n  - 如果出现异常，应该 `session.rollback()` 回滚事务.\n\n- 实现新增的步骤\n  - 在 mapper.xml  中提供<insert>标签，标签没有返回值类型\n  - 通过 `session.insert()` 调用新增方法\nmapper.xml 值为；\n```xml\n<insert id=\"ins\" parameterType=\"People\">\ninsert into people values(default,#{name},#{age})\n</insert>\n```\n\n```java\nint index1 = session.insert(\"a.b.ins\", p);\nif(index1>0){\n   System.out.println(\"成功\");\n}else{\n  System.out.println(\"失败\");\n}\n```\n\n\n## 十二、MyBatis 实现修改\n\n- 在 mapper.xml 中提供<update>标签\n```java\n<update id=\"upd\" parameterType=\"People\">\n  update people set name = #{name} where id = #{id}\n</update>\n```\n- 编写代码\n```java\nPeople peo = new People();\npeo.setId(3);\npeo.setName(\"王五\");\nint index = session.update(\"a.b.upd\", peo);\nif(index>0){\nSystem.out.println(\"成功\");\n}else{\nSystem.out.println(\"失败\");\n}\nsession.commit();\n```\n\n\n##  十三、mybatis 实现删除\n\n- 在 mapper.xml  提供<delete>标签\n```xml\n<delete id=\"del\" parameterType=\"int\">\n    delete from people where id = #{0}\n</delete>\n```\n\n- 编写代码\n```java\n int  del  =  session.delete(\"a.b.del\",3);\n\nif(del>0){\n   System.out.println(\"成功\");\n}else{\n   System.out.println(\"失败\");\n}\n\nsession.commit();\n```\n\n",[[1572259941792,["GJX@GJXAIOU",[[-1,254,"bjsxt"],[1,259,"gjxaiou"]],[254,259],[254,261]]],[1572259943144,["GJX@GJXAIOU",[[-1,8350,"bjsxt"],[1,8355,"gjxaiou"]],[8350,8355],[8350,8357]]],[1572259943357,["GJX@GJXAIOU",[[-1,8578,"bjsxt"],[1,8583,"gjxaiou"]],[8578,8583],[8578,8585]]],[1572259943597,["GJX@GJXAIOU",[[-1,11340,"bjsxt"],[1,11345,"gjxaiou"]],[11340,11345],[11340,11347]]],[1572259943745,["GJX@GJXAIOU",[[-1,11382,"bjsxt"],[1,11387,"gjxaiou"]],[11382,11387],[11382,11389]]],[1572259943947,["GJX@GJXAIOU",[[-1,12478,"bjsxt"],[1,12483,"gjxaiou"]],[12478,12483],[12478,12485]]],[1572259944245,["GJX@GJXAIOU",[[-1,12780,"bjsxt"],[1,12785,"gjxaiou"]],[12780,12785],[12780,12787]]],[1572259944551,["GJX@GJXAIOU",[[-1,12820,"bjsxt"],[1,12825,"gjxaiou"]],[12820,12825],[12820,12827]]],[1572259944673,["GJX@GJXAIOU",[[-1,13513,"bjsxt"],[1,13518,"gjxaiou"]],[13513,13518],[13513,13520]]],[1572259945028,["GJX@GJXAIOU",[[-1,13866,"bjsxt"],[1,13871,"gjxaiou"]],[13866,13871],[13866,13873]]],[1572259945157,["GJX@GJXAIOU",[[-1,14171,"bjsxt"],[1,14176,"gjxaiou"]],[14171,14176],[14171,14178]]]],null,"GJX@GJXAIOU"]]}