{"compress":true,"commitItems":[["05c58880-b546-4b06-acc3-fcdecf6381c7",1556156524746,"## 循环\n    程序的三大运行结构:\n        顺序结构，分支结构，循环结构\n    \n    循环结构的三种方式：\n        while (循环条件 true/false) {\n            循环体;\n            (循环条件变更)\n        }\n        \n        执行流程：\n            当程序运行到while循环，首先判断循环条件，是否为true，如果为true 执行循环体(循环条件变更),\n            然后回到循环条件判断，直到循环条件为假false的时候，循环终止。\n            \n        [注意]\n            如果出现了死循环，Ctrl + C 停止程序\n            \n        do {\n            循环体;\n            (循环条件变更)\n        } while (循环条件 true/false);;;;;;;;;;;;;;;;;;;;;\n        \n        执行流程：\n            当程序运行到do - while循环，首先不管3721执行一次循环体(循环条件变更)，然后再来判断while之后\n            循环条件是否为true，如果为true，进行执行循环，如果为false，终止循环。\n        \n        一般情况下能使用while 循环的，就不要使用do - while循环\n        \n        因为在执行do-while循环的时候，第一次执行的循环体是不受到任何的约束的，而这种不受到任何约束\n        的运行时存在隐患的。\n        \n        程序猿生存法则：\n            【已知】  【可控】\n        \n        【重点！！！！】\n        for (循环条件初始化; 循环判断条件; 循环条件变更) {\n            //循环体\n        }   \n        \n        运行流程：\n            当程序运行到for循环，首先执行循环条件初始化，然后进行循环条件判断，如果判断结果为true，执行\n            循环体，再执行循环条件变更，之后继续进行循环条件判断，直到条件为false，跳出循环\n            \n        \n        1.\t如何判断一个字符是不是大写英文字母?\n        2.\t如果判断一个字符是不是英文字母? A < z\n        3.\t用户输入一个字符，如果是小写字母，变成大写，如果是大写，变成小写！！！\n        4.\t展示100以内的所有偶数！\n        5.\t逢7过，100以内跳过所有和7有关的数 \n        6.\t\n        *****\n        *****\n        *****\n        *****\n        *****\n        \n        *\n        **\n        ***\n        ****\n        *****\n        \n            *\n           **\n          ***\n         ****\n        *****\n        \n        *\n        ***\n        *****\n        *******\n        *********\n        \n            * \n           ***\n          *****\n         *******\n        *********\n        \n            * \n           ***\n          *****\n         *******\n        *********\n         *******\n          *****\n           ***\n            *\n            \n        A\n        AB\n        ABC\n        ABCD\n        ABCDE\n        \n        A\n        ABC\n        ABCDE\n        ABCDEFG\n        ABCDEFGHI\n            \n            A\n           ABA\n          ABCBA\n         ABCDCBA\n        ABCDEDCBA\n         ABCDCBA\n          ABCBA\n           ABA\n            A \n           \n        ##*##\n        #*#*#\n        *###*\n        #*#*#\n        ##*##\n       ",[[1556156476913,["GJX@GJXAIOU",[[-1,161,"  "],[-1,169,"  "],[-1,245,"  "],[-1,291,"  "],[-1,294,"  "],[-1,307,"  "]],[162,341],[160,329]]],[1556156477353,["GJX@GJXAIOU",[[-1,159,"  "],[-1,167,"  "],[-1,239,"  "],[-1,283,"  "],[-1,286,"  "],[-1,297,"  "]],[160,329],[158,317]]],[1556156478071,["GJX@GJXAIOU",[[-1,157,"  "],[-1,165,"  "],[-1,233,"  "],[-1,275,"  "],[-1,278,"  "],[-1,287,"  "]],[158,317],[156,305]]],[1556156478789,["GJX@GJXAIOU",[[-1,155,"  "],[-1,163,"  "],[-1,227,"  "],[-1,267,"  "],[-1,270,"  "],[-1,277,"  "]],[156,305],[155,293]]],[1556156482325,["GJX@GJXAIOU",[[-1,218,"\n    "]],[218,223],[218,218]]],[1556156487765,["GJX@GJXAIOU",[[-1,51,"  "],[-1,64,"  "],[-1,98," "],[-1,109," "],[-1,115,"  "],[-1,136,"  "]],[49,145],[49,135]]],[1556156488173,["GJX@GJXAIOU",[[-1,49,"  "],[-1,62,"  "],[-1,94," "],[-1,103," "],[-1,109,"  "],[-1,128,"  "]],[49,135],[49,125]]],[1556156491025,["GJX@GJXAIOU",[[1,60,"\n"]],[59,59],[60,60]]],[1556156491854,["GJX@GJXAIOU",[[1,60,"```"]],[60,60],[63,63]]],[1556156491881,["GJX@GJXAIOU",[[1,63,"language\n```\n"]],[63,63],[63,71]]],[1556156493679,["GJX@GJXAIOU",[[-1,63,"language"],[1,71,"J"]],[63,71],[64,64]]],[1556156494089,["GJX@GJXAIOU",[[1,64,"AVA"]],[64,64],[67,67]]],[1556156494274,["GJX@GJXAIOU",[[1,68,"\n"]],[67,67],[68,68]]],[1556156497573,["GJX@GJXAIOU",[[-1,78,"while (循环条件 true/false) {\n        循环体;\n        (循环条件变更)\n    }"]],[78,139],[78,78]]],[1556156499073,["GJX@GJXAIOU",[[1,68,"while (循环条件 true/false) {\n        循环体;\n        (循环条件变更)\n    }"]],[68,68],[129,129]]],[1556156503193,["GJX@GJXAIOU",[[-1,144,"    "]],[144,144],[140,140]]],[1556156503489,["GJX@GJXAIOU",[[-1,139,"\n"]],[140,140],[139,139]]],[1556156504303,["GJX@GJXAIOU",[[-1,139,"    "]],[139,139],[135,135]]],[1556156504519,["GJX@GJXAIOU",[[-1,134,"\n"]],[135,135],[134,134]]],[1556156504817,["GJX@GJXAIOU",[[-1,133,"\n"]],[134,134],[133,133]]],[1556156506359,["GJX@GJXAIOU",[[1,137," "]],[133,133],[134,134]]],[1556156508738,["GJX@GJXAIOU",[[-1,137," "]],[134,134],[133,133]]],[1556156509833,["GJX@GJXAIOU",[[1,133,"\n"]],[133,133],[134,134]]],[1556157043526,["GJX@GJXAIOU",[[-1,370,";;;;;;;;;;;;;;;;;;;;;"]],[371,391],[370,370]]],[1556157048226,["GJX@GJXAIOU",[[1,273,"```"]],[273,273],[276,276]]],[1556157048251,["GJX@GJXAIOU",[[1,276,"language\n```\n"]],[276,276],[276,284]]],[1556157049779,["GJX@GJXAIOU",[[-1,276,"language"],[1,284,"j"]],[276,284],[277,277]]],[1556157050160,["GJX@GJXAIOU",[[1,277,"ava"]],[277,277],[280,280]]],[1556157050662,["GJX@GJXAIOU",[[1,281,"\n"]],[280,280],[281,281]]],[1556157055350,["GJX@GJXAIOU",[[-1,305,"  "],[-1,312,"  "],[-1,339,"  "],[-1,350,"  "]],[299,383],[299,375]]],[1556157055751,["GJX@GJXAIOU",[[-1,303,"  "],[-1,310,"  "],[-1,333,"  "],[-1,344,"  "]],[299,375],[299,367]]],[1556157056366,["GJX@GJXAIOU",[[-1,301,"  "],[-1,308,"  "],[-1,327,"  "],[-1,338,"  "]],[299,367],[299,359]]],[1556157057414,["GJX@GJXAIOU",[[-1,299,"  do {\n      循环体;\n      (循环条件变更)\n  } while (循环条件 true/false)"]],[299,359],[299,299]]],[1556157059114,["GJX@GJXAIOU",[[1,281,"  do {\n      循环体;\n      (循环条件变更)\n  } while (循环条件 true/false)"]],[281,281],[341,341]]],[1556157068136,["GJX@GJXAIOU",[[-1,375,"  "],[-1,383,"  "],[-1,462,"  "],[-1,506," "],[-1,513," "],[-1,515,"  "],[-1,565,"  "],[-1,568," "],[-1,575," "],[-1,632,"  "],[-1,651,"  "],[-1,654,"  "],[-1,681,"  "],[-1,700,"  "],[-1,703,"  "],[-1,726,"  "],[-1,770,"  "],[-1,784,"  "],[-1,791," "],[-1,798," "],[-1,800,"  "],[-1,814,"  "],[-1,876," "],[-1,887," "],[-1,941,"  "],[-1,944,"  "],[-1,953,"  "],[-1,989,"  "],[-1,1017,"  "],[-1,1064,"  "],[-1,1095,"  "],[-1,1127,"  "],[-1,1133,"  "],[-1,1147," "],[-1,1154," "],[-1,1161,"  "],[-1,1181,"  "],[-1,1189," "],[-1,1196," "],[-1,1209,"  "],[-1,1212," "],[-1,1219," "],[-1,1222,"  "],[-1,1239,"  "],[-1,1245,"  "],[-1,1258,"  "],[-1,1278,"  "],[-1,1281,"  "],[-1,1304,"  "],[-1,1309," "],[-1,1318," "],[-1,1323,"  "],[-1,1343,"  "],[-1,1351," "],[-1,1358," "],[-1,1360,"  "],[-1,1376,"  "],[-1,1382,"  "],[-1,1402,"  "],[-1,1412,"  "],[-1,1430,"  "]],[377,1438],[375,1334]]],[1556157068608,["GJX@GJXAIOU",[[-1,373,"  "],[-1,381,"  "],[-1,456,"  "],[-1,500," "],[-1,505," "],[-1,507,"  "],[-1,553,"  "],[-1,556," "],[-1,561," "],[-1,616,"  "],[-1,633,"  "],[-1,636,"  "],[-1,659,"  "],[-1,676,"  "],[-1,679,"  "],[-1,698,"  "],[-1,740,"  "],[-1,752,"  "],[-1,759," "],[-1,764," "],[-1,766,"  "],[-1,778,"  "],[-1,838," "],[-1,847," "],[-1,899,"  "],[-1,902," "],[-1,907," "],[-1,909,"  "],[-1,941,"  "],[-1,969,"  "],[-1,1014,"  "],[-1,1041,"  "],[-1,1071,"  "],[-1,1077,"  "],[-1,1089," "],[-1,1094," "],[-1,1101,"  "],[-1,1117,"  "],[-1,1125," "],[-1,1130," "],[-1,1141,"  "],[-1,1144," "],[-1,1149," "],[-1,1152,"  "],[-1,1165,"  "],[-1,1171," "],[-1,1176," "],[-1,1182,"  "],[-1,1198,"  "],[-1,1201,"  "],[-1,1220,"  "],[-1,1225," "],[-1,1232," "],[-1,1237,"  "],[-1,1253,"  "],[-1,1261," "],[-1,1266," "],[-1,1268,"  "],[-1,1276," "],[-1,1281," "],[-1,1286,"  "],[-1,1302,"  "],[-1,1312,"  "],[-1,1328,"  "]],[375,1334],[373,1230]]],[1556157069492,["GJX@GJXAIOU",[[-1,371,"  "],[-1,379,"  "],[-1,450,"  "],[-1,494," "],[-1,497," "],[-1,499,"  "],[-1,541,"  "],[-1,544," "],[-1,547," "],[-1,600,"  "],[-1,615,"  "],[-1,618,"  "],[-1,637,"  "],[-1,652,"  "],[-1,655,"  "],[-1,670,"  "],[-1,710,"  "],[-1,718," "],[-1,721," "],[-1,727," "],[-1,730," "],[-1,732,"  "],[-1,742,"  "],[-1,800," "],[-1,807," "],[-1,857,"  "],[-1,860," "],[-1,863," "],[-1,865,"  "],[-1,893,"  "],[-1,921,"  "],[-1,964,"  "],[-1,987,"  "],[-1,1015,"  "],[-1,1021," "],[-1,1024," "],[-1,1031," "],[-1,1034," "],[-1,1041,"  "],[-1,1053,"  "],[-1,1061," "],[-1,1064," "],[-1,1073,"  "],[-1,1076," "],[-1,1079," "],[-1,1082,"  "],[-1,1091,"  "],[-1,1097," "],[-1,1100," "],[-1,1106,"  "],[-1,1118,"  "],[-1,1121,"  "],[-1,1136,"  "],[-1,1141," "],[-1,1146," "],[-1,1151,"  "],[-1,1163,"  "],[-1,1171," "],[-1,1174," "],[-1,1176," "],[-1,1179," "],[-1,1182," "],[-1,1185," "],[-1,1190,"  "],[-1,1202,"  "],[-1,1212," "],[-1,1215," "],[-1,1226,"  "]],[373,1230],[371,1126]]],[1556157077118,["GJX@GJXAIOU",[[-1,363,"     "]],[365,365],[360,360]]],[1556157087053,["GJX@GJXAIOU",[[1,488,"**"],[1,523,"**"]],[488,523],[488,527]]],[1556157090406,["GJX@GJXAIOU",[[-1,360,"   "]],[363,363],[360,360]]],[1556157090663,["GJX@GJXAIOU",[[-1,360,"\n"]],[360,360],[359,359]]],[1556157090913,["GJX@GJXAIOU",[[-1,359,"\n"]],[359,359],[358,358]]],[1556157093826,["GJX@GJXAIOU",[[-1,346,"            "]],[358,358],[346,346]]],[1556157100510,["GJX@GJXAIOU",[[-1,565,"\n  "]],[565,568],[565,565]]],[1556157102209,["GJX@GJXAIOU",[[-1,514,"  "]],[516,516],[514,514]]],[1556157102607,["GJX@GJXAIOU",[[-1,513,"\n"]],[514,514],[513,513]]],[1556157108630,["GJX@GJXAIOU",[[1,620,"\n  "]],[617,617],[620,620]]],[1556157114055,["GJX@GJXAIOU",[[1,620,"1"]],[620,620],[621,621]]],[1556157114671,["GJX@GJXAIOU",[[-1,620,"1"]],[621,621],[620,620]]],[1556157115279,["GJX@GJXAIOU",[[1,620,"```"]],[620,620],[623,623]]],[1556157118570,["GJX@GJXAIOU",[[-1,619," "]],[620,620],[619,619]]],[1556157121887,["GJX@GJXAIOU",[[1,622,"java"]],[622,622],[626,626]]],[1556157122146,["GJX@GJXAIOU",[[1,628,"\n "]],[626,626],[628,628]]],[1556157123882,["GJX@GJXAIOU",[[1,628,"```"]],[628,628],[631,631]]],[1556157128854,["GJX@GJXAIOU",[[-1,618," "],[-1,627," "]],[618,631],[618,631]]],[1556157131015,["GJX@GJXAIOU",[[1,626,"\n"]],[625,625],[626,626]]],[1556157133759,["GJX@GJXAIOU",[[-1,633,"for (循环条件初始化; 循环判断条件; 循环条件变更) {\n      //循环体\n  }  "]],[632,681],[632,632]]],[1556157135322,["GJX@GJXAIOU",[[1,626," for (循环条件初始化; 循环判断条件; 循环条件变更) {\n      //循环体\n  } "]],[626,626],[675,675]]],[1556157138311,["GJX@GJXAIOU",[[-1,684,"  "]],[686,686],[684,684]]],[1556157138538,["GJX@GJXAIOU",[[-1,684,"\n"]],[684,684],[683,683]]],[1556157139898,["GJX@GJXAIOU",[[-1,680,"   "]],[683,683],[680,680]]],[1556157140287,["GJX@GJXAIOU",[[-1,680,"\n"]],[680,680],[679,679]]],[1556157140536,["GJX@GJXAIOU",[[-1,678,"`"]],[679,679],[678,678]]],[1556157142242,["GJX@GJXAIOU",[[1,678,"`"]],[678,678],[679,679]]],[1556157147215,["GJX@GJXAIOU",[[-1,743,"\n      "]],[743,750],[743,743]]]],null,"GJX@GJXAIOU"],["d0863584-d4dc-4e8d-aadd-d0a0fbf1c546",1563153075579,"## 循环\n    程序的三大运行结构:\n        顺序结构，分支结构，循环结构\n    \n循环结构的三种方式：\n```JAVA\nwhile (循环条件 true/false) {\n        循环体;\n        (循环条件变更)\n    }\n```\n    \n执行流程：\n    当程序运行到while循环，首先判断循环条件，是否为true，如果为true 执行循环体(循环条件变更),然后回到循环条件判断，直到循环条件为假false的时候，循环终止。\n    \n[注意]\n    如果出现了死循环，Ctrl + C 停止程序\n```java\n  do {\n      循环体;\n      (循环条件变更)\n  } while (循环条件 true/false)\n```\n\n  执行流程：\n      当程序运行到do - while循环，首先不管3721执行一次循环体(循环条件变更)，然后再来判断while之后\n      循环条件是否为true，如果为true，进行执行循环，如果为false，终止循环。\n  \n  **一般情况下能使用while 循环的，就不要使用do - while循环**\n  因为在执行do-while循环的时候，第一次执行的循环体是不受到任何的约束的，而这种不受到任何约束的运行时存在隐患的。\n  \n  程序猿生存法则：\n      【已知】  【可控】\n  \n  【重点！！！！】\n```java\n for (循环条件初始化; 循环判断条件; 循环条件变更) {\n      //循环体\n  } \n```\n  运行流程：\n      当程序运行到for循环，首先执行循环条件初始化，然后进行循环条件判断，如果判断结果为true，执行循环体，再执行循环条件变更，之后继续进行循环条件判断，直到条件为false，跳出循环\n      \n  \n  1.\t如何判断一个字符是不是大写英文字母?\n  2.\t如果判断一个字符是不是英文字母? A < z\n  3.\t用户输入一个字符，如果是小写字母，变成大写，如果是大写，变成小写！！！\n  4.\t展示100以内的所有偶数！\n  5.\t逢7过，100以内跳过所有和7有关的数 \n  6.\t\n  *****\n  *****\n  *****\n  *****\n  *****\n  \n  *\n  **\n  ***\n  ****\n  *****\n  \n      *\n     **\n    ***\n   ****\n  *****\n  \n  *\n  ***\n  *****\n  *******\n  *********\n  \n            * \n           ***\n          *****\n         *******\n        *********\n        \n            * \n           ***\n          *****\n         *******\n        *********\n         *******\n          *****\n           ***\n            *\n            \n        A\n        AB\n        ABC\n        ABCD\n        ABCDE\n        \n        A\n        ABC\n        ABCDE\n        ABCDEFG\n        ABCDEFGHI\n            \n            A\n           ABA\n          ABCBA\n         ABCDCBA\n        ABCDEDCBA\n         ABCDCBA\n          ABCBA\n           ABA\n            A \n           \n        ##*##\n        #*#*#\n        *###*\n        #*#*#\n        ##*##\n       ",[[1563153053668,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1563153054562,["GJX@GJXAIOU",[[1,0,"---\ntags : \n- java基础\n\nflag: blue\n---"]],[0,0],[36,36]]],[1563153060274,["GJX@GJXAIOU",[[1,37,"\n"]],[36,36],[37,37]]],[1563153060420,["GJX@GJXAIOU",[[1,38,"\n"]],[37,37],[38,38]]],[1563153071523,["GJX@GJXAIOU",[[1,38,"# JavaDay05 xun"]],[38,38],[53,53]]],[1563153072244,["GJX@GJXAIOU",[[-1,50,"xun"]],[53,53],[50,50]]],[1563153074268,["GJX@GJXAIOU",[[1,50,"循环"]],[50,50],[52,52]]],[1563153082014,["GJX@GJXAIOU",[[1,56,"一/"]],[56,56],[58,58]]],[1563153083346,["GJX@GJXAIOU",[[-1,57,"/"]],[58,58],[57,57]]],[1563153083781,["GJX@GJXAIOU",[[1,57,"、"]],[57,57],[58,58]]],[1563153086281,["GJX@GJXAIOU",[[1,53,"\n"]],[53,53],[54,54]]],[1563153091624,["GJX@GJXAIOU",[[-1,64,"  "],[-1,77,"  "]],[65,99],[63,95]]],[1563153100668,["GJX@GJXAIOU",[[-1,333,"  "],[-1,340,"  "],[-1,355,"  "],[-1,366,"  "]],[335,393],[333,385]]],[1563153106066,["GJX@GJXAIOU",[[-1,670," "],[-1,707,"  "],[-1,715,"  "]],[671,719],[670,715]]],[1563153113317,["GJX@GJXAIOU",[[1,981,"·"]],[981,981],[982,982]]],[1563153114669,["GJX@GJXAIOU",[[-1,981,"·"]],[982,982],[981,981]]],[1563153115939,["GJX@GJXAIOU",[[1,981,"`"]],[981,981],[982,982]]],[1563153117068,["GJX@GJXAIOU",[[1,1019,"`"]],[1019,1019],[1020,1020]]],[1563153119708,["GJX@GJXAIOU",[[1,987,"`"]],[987,987],[988,988]]],[1563153120428,["GJX@GJXAIOU",[[1,996,"`"]],[996,996],[997,997]]],[1563153121772,["GJX@GJXAIOU",[[1,1005,"`"]],[1005,1005],[1006,1006]]],[1563153122378,["GJX@GJXAIOU",[[1,1014,"`"]],[1014,1014],[1015,1015]]],[1563153123148,["GJX@GJXAIOU",[[1,1008,"`"]],[1008,1008],[1009,1009]]],[1563153123997,["GJX@GJXAIOU",[[1,999,"`"]],[999,999],[1000,1000]]],[1563153124484,["GJX@GJXAIOU",[[1,991,"`"]],[991,991],[992,992]]],[1563153125875,["GJX@GJXAIOU",[[1,1021,"`"]],[1021,1021],[1022,1022]]],[1563153128170,["GJX@GJXAIOU",[[-1,1011," "]],[1012,1012],[1011,1011]]],[1563153129874,["GJX@GJXAIOU",[[-1,1001," "]],[1002,1002],[1001,1001]]],[1563153132051,["GJX@GJXAIOU",[[1,1032,"`"]],[1032,1032],[1033,1033]]],[1563153133802,["GJX@GJXAIOU",[[-1,1018," "]],[1019,1019],[1018,1018]]],[1563153136452,["GJX@GJXAIOU",[[-1,990," "]],[991,991],[990,990]]],[1563153138012,["GJX@GJXAIOU",[[-1,980," "]],[981,981],[980,980]]],[1563153140653,["GJX@GJXAIOU",[[1,1034,"`"]],[1034,1034],[1035,1035]]],[1563153141330,["GJX@GJXAIOU",[[1,1040,"`"]],[1040,1040],[1041,1041]]],[1563153142030,["GJX@GJXAIOU",[[1,1047,"`"]],[1047,1047],[1048,1048]]],[1563153142756,["GJX@GJXAIOU",[[1,1055,"`"]],[1055,1055],[1056,1056]]],[1563153144340,["GJX@GJXAIOU",[[1,1061,"`"]],[1061,1061],[1062,1062]]],[1563153144890,["GJX@GJXAIOU",[[1,1052,"`"]],[1052,1052],[1053,1053]]],[1563153145443,["GJX@GJXAIOU",[[1,1044,"`"]],[1044,1044],[1045,1045]]],[1563153146094,["GJX@GJXAIOU",[[1,1037,"`"]],[1037,1037],[1038,1038]]],[1563153146965,["GJX@GJXAIOU",[[1,1031,"`"]],[1031,1031],[1032,1032]]],[1563153149390,["GJX@GJXAIOU",[[1,1076,"`"]],[1076,1076],[1077,1077]]],[1563153150311,["GJX@GJXAIOU",[[1,1084,"`"]],[1084,1084],[1085,1085]]],[1563153151189,["GJX@GJXAIOU",[[1,1092,"`"]],[1092,1092],[1093,1093]]],[1563153152003,["GJX@GJXAIOU",[[1,1100,"`"]],[1100,1100],[1101,1101]]],[1563153152829,["GJX@GJXAIOU",[[1,1108,"`"]],[1108,1108],[1109,1109]]],[1563153153659,["GJX@GJXAIOU",[[1,1114,"`"]],[1114,1114],[1115,1115]]],[1563153154195,["GJX@GJXAIOU",[[1,1105,"`"]],[1105,1105],[1106,1106]]],[1563153155101,["GJX@GJXAIOU",[[1,1096,"`"]],[1096,1096],[1097,1097]]],[1563153155555,["GJX@GJXAIOU",[[1,1087,"`"]],[1087,1087],[1088,1088]]],[1563153156283,["GJX@GJXAIOU",[[1,1078,"`"]],[1078,1078],[1079,1079]]],[1563153160326,["GJX@GJXAIOU",[[1,1126,"`"]],[1126,1126],[1127,1127]]],[1563153160998,["GJX@GJXAIOU",[[1,1133,"`"]],[1133,1133],[1134,1134]]],[1563153162373,["GJX@GJXAIOU",[[1,1142,"`"]],[1142,1142],[1143,1143]]],[1563153163220,["GJX@GJXAIOU",[[1,1153,"`"]],[1153,1153],[1154,1154]]],[1563153164292,["GJX@GJXAIOU",[[1,1166,"`"]],[1166,1166],[1167,1167]]],[1563153165076,["GJX@GJXAIOU",[[1,1157,"`"]],[1157,1157],[1158,1158]]],[1563153165604,["GJX@GJXAIOU",[[1,1146,"`"]],[1146,1146],[1147,1147]]],[1563153166285,["GJX@GJXAIOU",[[1,1137,"`"]],[1137,1137],[1138,1138]]],[1563153168036,["GJX@GJXAIOU",[[1,1130,"`"]],[1130,1130],[1131,1131]]],[1563153168691,["GJX@GJXAIOU",[[1,1125,"`"]],[1125,1125],[1126,1126]]],[1563153182313,["GJX@GJXAIOU",[[-1,1074,"  "],[-1,1080," "],[-1,1084," "],[-1,1090," "],[-1,1093," "],[-1,1100,"  "],[-1,1110,"  "]],[1070,1119],[1070,1109]]],[1563153186689,["GJX@GJXAIOU",[[-1,1073," "]],[1074,1074],[1073,1073]]],[1563153189508,["GJX@GJXAIOU",[[1,1073," "]],[1073,1073],[1074,1074]]],[1563153209044,["GJX@GJXAIOU",[[-1,832,"  \n  1.\t如何判断一个字符是不是大写英文字母?\n  2.\t如果判断一个字符是不是英文字母? A < z\n  3.\t用户输入一个字符，如果是小写字母，变成大写，如果是大写，变成小写！！！\n  4.\t展示100以内的所有偶数！\n  5.\t逢7过，100以内跳过所有和7有关的数 \n  6.\t\n `*****`\n `*****`\n `*****`\n `*****`\n `*****`\n  \n  `*`\n  `**`\n  `***`\n  `****`\n  `*****`\n  \n    `*`\n   `**`\n  `***`\n `****`\n`*****`\n  \n  `*`\n  `***`\n  `*****`\n  `*******`\n  `*********`\n  \n            * \n           ***\n          *****\n         *******\n        *********\n        \n            * \n           ***\n          *****\n         *******\n        *********\n         *******\n          *****\n           ***\n            *\n            \n        A\n        AB\n        ABC\n        ABCD\n        ABCDE\n        \n        A\n        ABC\n        ABCDE\n        ABCDEFG\n        ABCDEFGHI\n            \n            A\n           ABA\n          ABCBA\n         ABCDCBA\n        ABCDEDCBA\n         ABCDCBA\n          ABCBA\n           ABA\n            A \n           \n        ##*##\n        #*#*#\n        *###*\n        #*#*#\n        ##*##"]],[832,1788],[832,832]]],[1563153212106,["GJX@GJXAIOU",[[-1,836,"    "]],[833,837],[833,833]]],[1563153212754,["GJX@GJXAIOU",[[-1,832,"\n"]],[833,833],[832,832]]]],null,"GJX@GJXAIOU"],["a296ba6d-a748-468b-a3a3-2761b36b175b",1563284360413,"---\ntags : \n- java基础\n\nflag: blue\n---\n\n# JavaDay05 循环\n\n## 一、循环\n  程序的三大运行结构:\n      顺序结构，分支结构，循环结构\n    \n循环结构的三种方式：\n```JAVA\nwhile (循环条件 true/false) {\n        循环体;\n        (循环条件变更)\n    }\n```\n    \n执行流程：\n    当程序运行到while循环，首先判断循环条件，是否为true，如果为true 执行循环体(循环条件变更),然后回到循环条件判断，直到循环条件为假false的时候，循环终止。\n    \n[注意]\n    如果出现了死循环，Ctrl + C 停止程序\n```java\ndo {\n    循环体;\n    (循环条件变更)\n} while (循环条件 true/false)\n```\n\n  执行流程：\n      当程序运行到do - while循环，首先不管3721执行一次循环体(循环条件变更)，然后再来判断while之后\n      循环条件是否为true，如果为true，进行执行循环，如果为false，终止循环。\n  \n  **一般情况下能使用while 循环的，就不要使用do - while循环**\n  因为在执行do-while循环的时候，第一次执行的循环体是不受到任何的约束的，而这种不受到任何约束的运行时存在隐患的。\n  \n  程序猿生存法则：\n      【已知】  【可控】\n  \n  【重点！！！！】\n```java\nfor (循环条件初始化; 循环判断条件; 循环条件变更) {\n    //循环体\n} \n```\n  运行流程：\n      当程序运行到for循环，首先执行循环条件初始化，然后进行循环条件判断，如果判断结果为true，执行循环体，再执行循环条件变更，之后继续进行循环条件判断，直到条件为false，跳出循环\n      \n   ",[[1563284332976,["GJX@GJXAIOU",[[1,38,"@toc\n\n\n"]],[37,37],[44,44]]]],null,"GJX@GJXAIOU"]]}