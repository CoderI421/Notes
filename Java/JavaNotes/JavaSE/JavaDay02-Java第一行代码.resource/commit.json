{"compress":true,"commitItems":[["cf97af43-0c89-484c-956b-9ccf35017143",1556155584230,"## Java JDK目录结构\n    bin: binary 二进制 主要存放了Java的开发工具，主要关注一下几个工具：\n    java.exe javac.exe javadoc.exe javap.exe\n    db: Database 数据库 JDK自带了一个小型数据库Derby \n    include：存放Java程序运行需要调用的系统资源接口文件\n    jre：Java Runtime Environment Java程序的运行环境\n    lib: Library 库 核心类库 Java程序运行所需的文件，主要提供给JVM运行\n    src.zip: Java的源代码压缩包\n\n## 准备第一行Java代码\n####     NotePad++前期准备\n        1. 打开NotePad++ 工具 图标是一个小变色龙\n        2. NotePad++ 菜单栏【设置】选项 -> 首选项 -> 自动完成 -> 反选所有，一个都不留\n        3. 【设置】选择 -> 新建 -> 格式 选择 windows  编码选择 ANSI\n        4. 在NotePad++ 新建文件 两种方式：第一种双击标签栏，第二种 ctrl + n\n        5. 书写Java代码，要求Java文件的名字和Class之后的名字一致，可以用粘贴复制的方式来保证一致\n            保存Java文件，【必须】加上.java 文件后缀名\n        \n    \n####     Java代码规范【通用的】 最基础的要求\n        1. 在代码中成双成对标点符号，例如: {} [] () \"\" '' 先补齐一对，在写入内容\n        2. 每一条语句之后，都要用分号 ; 结尾，区分是不是一条语句：就看这个语句之后有么有大括号\n        3. 代码缩进格式请使用tab键\n        \n####     编译Java文件:\n        编译Java文件要使用以下两个工具：\n            javac.exe 编译Java文件 生产.class文件(字节码文件)的工具\n            java.exe  运行.class文件(字节码文件)\n        问题：\n            编译Java程序，需要非常长的路径支持，非常麻烦，很容易写错\n    \n####     配置环境变量\n    打开我的电脑(Windows + E) -> 鼠标右键 选择属性 -> 左侧边栏的【高级偏好设置】 -> 【环境变量】\n    \n    修改系统变量:\n        新建：\n            变量名:JAVA_HOME:\n            变量值:JDK安装路径 例如: C:\\Program Files\\Java\\jdk1.8.0_131\\\n        \n        新建: \n            变量名：CLASS_PATH\n            变量值：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar\n        \n        找到Path环境变量\n        编辑：\n            在末尾添加一个分号(英文), 复制\n            %JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\n            \n#### 编译运行Java程序\n    找到自己的Java文件所在目录\n        这里要求不允许出现任何的中文\n        Eclipse MyEclipse IDEA\n        \n    javac 文件名.java 编译Java文件，如果没有提示任何东西，表示编译通过，可以生成对应的.class(字节码文件)\n    \n    java 文件名(类名) 运行Java程序\n    \n    在编译的过程中会报错，报警告，心存感激！！！\n    \n## 数据在内存中保存的方式 【掌握】\n#### 存储的空间单位\n    字节：\n        计算机操作的最小单元 1byte => 8bit\n    1024byte -> 1KB\n    1024KB -> 1MB\n    1024MB -> 1GB  11G\n    1024GB -> 1TB \n    1024TB -> 1PB \n    \n#### 数据如何保存\n    进制转换\n    \n 进制| 基数范围 | 规则\n---|---|---\n十进制 | 0 ~ 9 | 逢10进1\n二进制 | 0 ~ 1 | 逢2进1\n八进制 | 0 ~ 7 | 逢8进1\n十六进制 | 0 ~ 9 A ~ F | 逢G进1\n    \n    计算机支持的最大进制是多少进制？\n        26个英文字母 + 10个数字  = 36进制\n         \n    十进制转二进制\n     156(10) => 1001 1100(2)\n     156    0 \n      78    0  \n      39    1   \n      19    1   \n       9    1\n       4    0 \n       2    0\n       1    1    \n    辗转相除，余数倒序\n    1011 1101(2) = > 2 ^ 0 +  + 2 ^ 2 + 2 ^ 3 + 2 ^ 4 + 2 ^ 5 + 2 ^ 7\n                 = 1 + 4 + 8 + 16 + 32 + 128\n                 = 189\n    八进制数表示方式：\n        0771 0724    0886不对\n        要求用0开头\n        \n    八进制和二进制之间的关系：\n        111 7 000 0\n        八进制的一位对应二进制的三位\n        0771 => 111 111 001\n        0654 => 110 101 100\n        \n    十六进制数表示方式：\n        要求用0x 或者 0X 开头\n        0xABCDE  0X77bbaa\n        \n    十六进制和二进制之间的关系：\n        1111 15 0000 0 \n        十六进制的一位对应二进制的四位\n        0xABCDE => 1010 1011 1100 1101 1110\n        0X77bbaa => 0111 0111 1011 1011 1010 1010\n        \n    在计算机中所有的数据保存采用的方式都是二进制\n####    原码 反码 补码 \n    正整数\n        118 => 0111 0110(2)\n        正整数保存数据的方式就是用该数对应的二进制数\n        正整数 原码 反码 补码 是一样的 三码合一\n        \n    \n    负整数\n        原码  反码  补码\n        -118 \n        原码：该负数对应正整数的二进制编码\n            118 => 0111 0110\n            最高位表示符号位用1表示\n                   1111 0110\n        \n        反码: 原码按位取反，符号位不变\n            1111 0110 => 1000 1001\n            \n        补码：反码 + 1\n            1000 1001 + 1 => 1000 1010\n            \n        1000 1010 是负数 -118在内存中保存的方式\n        \n        1000 1010 (-118)\n        0111 0110 (118)\n    -----------------\n      1 0000 0000\n      \n      负数在内存中保存的方式是采用补码的方式：\n      采用这方式是为了减少计算机的逻辑运算复杂度，可以直接使用补码来参与运算\n\n## 常量\n    π  3.141592653\n    G  9.8\n    C  光速\n    黄金比例  0.618\n    A B C D E 字母\n   \n    明天天气9~13度  字符串 \n    \n    常量不要只是认为是数值 或者 数字，字符，语句其实也都是一个常量\n    \n    常量：\n        在程序运行过程中，不会发生改变的量，就是常量\n        整数: 10 20 30 -10\n        小数：3.1415926 0.618\n        真假: 对或者错，真或者假  T  F    true  false  boolean布尔类型\n       \n        字符：'a' 'b' 'c' 'D' '我'\n            [特征]\n                【单引号】包含的【单个元素】，称之为字符常量\n        字符串：\n            \"This is Java\"\n            [特征]\n                【双引号】包含的所有内容都是字符串常量\n        \n        98版仙剑奇侠传\n            BIG5 中文繁体字编码\n            GB2312 中国简体汉字和一少部分的少数民族文字\n            GBK 新国标 包含了所有的中国汉字和全部的少数民族文字\n            UTF-8 万国码 \n                Java HTML MySQL Oracle\n            ASCII码 最简单的编码\n                128个! 前32个是不可见字符 0 ~ 31\n                \n                剩下就是键盘上的数字 ，字母，标点符号\n            \n            [要求]\n                在使用ASCII码表的时候，不允许使用ASCII码值，而是直接使用字符本身，\n                因为字符在内存中保存的数值就是对应的ASCII码\n                65 <= x <= 90 不行！！！\n                'A' <= x <= 'Z' 貌似正确的写法\n                \n            如果说我想在字符串里面使用\"\"怎么办？\n            \"王自健说:\\\"fdafdsaf\\\"\"\n            \n        转义字符：\n            \\\" \\' \n            \\n 回车 相对于enter键\n            \\r 换行\n            \\t tab键 制表符\n            \\\\ 展示一个反斜杠\n            \\\\\\\\ 这里转义两个反斜杠\n            \n            '\\n' 字符常量\n            \n        面试题：2015年\n            请问'\\040' or '\\40'是什么？\n            在转义字符中数字使用的是ASCII码的八进制表示，所有在这里\\040 和 \\40是一样的，0可以在转义字符中\n            省略\n## 命名规范 标识符\n   \n    以下参考规范 AJCG (阿里巴巴技术团队规范)\n    \n    \n    邮箱注册：\n        126邮箱：\n            6~18个字符，可使用字母、数字、下划线，需以字母开头\n        \n    标识符能够使用的字符范围要求：\n        1. 标识符只能使用数字(0 ~ 9) 字母(A ~ Z a ~ z) 唯一可以使用的标点符号下划线(_)\n        2. 要求标识符必须用字母开头\n        3. 在标识符中严格区分大小写 And and Not same\n        4. 标识符没有严格的长度限制\n        5. 标识符要做到 见名知意 动宾结构\n            a b c d \n            imgTitle\n            imgbanner\n            imgGoods\n            imgLogo\n            studentInfo ageOfWorker getPingjiaByName\n            iPhone iPad iTouch iPod iWatch iTV iTunes\n        6. Java内部已经被征用的关键字不能用来做标识符 \n            public static void \n            int long double \n        \n        以上使用的是小驼峰命名法\n\n\n            \n        \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",[[1556155551812,["GJX@GJXAIOU",[[1,4140,"**"],[1,4150,"**"]],[4140,4150],[4140,4154]]],[1556155615603,["GJX@GJXAIOU",[[-1,5611,"\n\n            \n        \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n "]],[5611,5721],[5611,5611]]]],null,"GJX@GJXAIOU"],["967eb7b1-384b-4760-9124-0ce7828183ed",1563103151593,"## Java JDK目录结构\n    bin: binary 二进制 主要存放了Java的开发工具，主要关注一下几个工具：\n    java.exe javac.exe javadoc.exe javap.exe\n    db: Database 数据库 JDK自带了一个小型数据库Derby \n    include：存放Java程序运行需要调用的系统资源接口文件\n    jre：Java Runtime Environment Java程序的运行环境\n    lib: Library 库 核心类库 Java程序运行所需的文件，主要提供给JVM运行\n    src.zip: Java的源代码压缩包\n\n## 准备第一行Java代码\n####     NotePad++前期准备\n        1. 打开NotePad++ 工具 图标是一个小变色龙\n        2. NotePad++ 菜单栏【设置】选项 -> 首选项 -> 自动完成 -> 反选所有，一个都不留\n        3. 【设置】选择 -> 新建 -> 格式 选择 windows  编码选择 ANSI\n        4. 在NotePad++ 新建文件 两种方式：第一种双击标签栏，第二种 ctrl + n\n        5. 书写Java代码，要求Java文件的名字和Class之后的名字一致，可以用粘贴复制的方式来保证一致\n            保存Java文件，【必须】加上.java 文件后缀名\n        \n    \n####     Java代码规范【通用的】 最基础的要求\n        1. 在代码中成双成对标点符号，例如: {} [] () \"\" '' 先补齐一对，在写入内容\n        2. 每一条语句之后，都要用分号 ; 结尾，区分是不是一条语句：就看这个语句之后有么有大括号\n        3. 代码缩进格式请使用tab键\n        \n####     编译Java文件:\n        编译Java文件要使用以下两个工具：\n            javac.exe 编译Java文件 生产.class文件(字节码文件)的工具\n            java.exe  运行.class文件(字节码文件)\n        问题：\n            编译Java程序，需要非常长的路径支持，非常麻烦，很容易写错\n    \n####     配置环境变量\n    打开我的电脑(Windows + E) -> 鼠标右键 选择属性 -> 左侧边栏的【高级偏好设置】 -> 【环境变量】\n    \n    修改系统变量:\n        新建：\n            变量名:JAVA_HOME:\n            变量值:JDK安装路径 例如: C:\\Program Files\\Java\\jdk1.8.0_131\\\n        \n        新建: \n            变量名：CLASS_PATH\n            变量值：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar\n        \n        找到Path环境变量\n        编辑：\n            在末尾添加一个分号(英文), 复制\n            %JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\n            \n#### 编译运行Java程序\n    找到自己的Java文件所在目录\n        这里要求不允许出现任何的中文\n        Eclipse MyEclipse IDEA\n        \n    javac 文件名.java 编译Java文件，如果没有提示任何东西，表示编译通过，可以生成对应的.class(字节码文件)\n    \n    java 文件名(类名) 运行Java程序\n    \n    在编译的过程中会报错，报警告，心存感激！！！\n    \n## 数据在内存中保存的方式 【掌握】\n#### 存储的空间单位\n    字节：\n        计算机操作的最小单元 1byte => 8bit\n    1024byte -> 1KB\n    1024KB -> 1MB\n    1024MB -> 1GB  11G\n    1024GB -> 1TB \n    1024TB -> 1PB \n    \n#### 数据如何保存\n    进制转换\n    \n 进制| 基数范围 | 规则\n---|---|---\n十进制 | 0 ~ 9 | 逢10进1\n二进制 | 0 ~ 1 | 逢2进1\n八进制 | 0 ~ 7 | 逢8进1\n十六进制 | 0 ~ 9 A ~ F | 逢G进1\n    \n    计算机支持的最大进制是多少进制？\n        26个英文字母 + 10个数字  = 36进制\n         \n    十进制转二进制\n     156(10) => 1001 1100(2)\n     156    0 \n      78    0  \n      39    1   \n      19    1   \n       9    1\n       4    0 \n       2    0\n       1    1    \n    辗转相除，余数倒序\n    1011 1101(2) = > 2 ^ 0 +  + 2 ^ 2 + 2 ^ 3 + 2 ^ 4 + 2 ^ 5 + 2 ^ 7\n                 = 1 + 4 + 8 + 16 + 32 + 128\n                 = 189\n    八进制数表示方式：\n        0771 0724    0886不对\n        要求用0开头\n        \n    八进制和二进制之间的关系：\n        111 7 000 0\n        八进制的一位对应二进制的三位\n        0771 => 111 111 001\n        0654 => 110 101 100\n        \n    十六进制数表示方式：\n        要求用0x 或者 0X 开头\n        0xABCDE  0X77bbaa\n        \n    十六进制和二进制之间的关系：\n        1111 15 0000 0 \n        十六进制的一位对应二进制的四位\n        0xABCDE => 1010 1011 1100 1101 1110\n        0X77bbaa => 0111 0111 1011 1011 1010 1010\n        \n    在计算机中所有的数据保存采用的方式都是二进制\n####    原码 反码 补码 \n    正整数\n        118 => 0111 0110(2)\n        正整数保存数据的方式就是用该数对应的二进制数\n        正整数 原码 反码 补码 是一样的 三码合一\n        \n    \n    负整数\n        原码  反码  补码\n        -118 \n        原码：该负数对应正整数的二进制编码\n            118 => 0111 0110\n            最高位表示符号位用1表示\n                   1111 0110\n        \n        反码: 原码按位取反，符号位不变\n            1111 0110 => 1000 1001\n            \n        补码：反码 + 1\n            1000 1001 + 1 => 1000 1010\n            \n        1000 1010 是负数 -118在内存中保存的方式\n        \n        1000 1010 (-118)\n        0111 0110 (118)\n    -----------------\n      1 0000 0000\n      \n      负数在内存中保存的方式是采用补码的方式：\n      采用这方式是为了减少计算机的逻辑运算复杂度，可以直接使用补码来参与运算\n\n## 常量\n    π  3.141592653\n    G  9.8\n    C  光速\n    黄金比例  0.618\n    A B C D E 字母\n   \n    明天天气9~13度  字符串 \n    \n    常量不要只是认为是数值 或者 数字，字符，语句其实也都是一个常量\n    \n    常量：\n        在程序运行过程中，不会发生改变的量，就是常量\n        整数: 10 20 30 -10\n        小数：3.1415926 0.618\n        真假: 对或者错，真或者假  T  F    true  false  boolean布尔类型\n       \n        字符：'a' 'b' 'c' 'D' '我'\n            [特征]\n                【单引号】包含的【单个元素】，称之为字符常量\n        字符串：\n            \"This is Java\"\n            [特征]\n                【双引号】包含的所有内容都是字符串常量\n        \n        98版仙剑奇侠传\n            BIG5 中文繁体字编码\n            GB2312 中国简体汉字和一少部分的少数民族文字\n            GBK 新国标 包含了所有的中国汉字和全部的少数民族文字\n            **UTF-8 万国码 **\n                Java HTML MySQL Oracle\n            ASCII码 最简单的编码\n                128个! 前32个是不可见字符 0 ~ 31\n                \n                剩下就是键盘上的数字 ，字母，标点符号\n            \n            [要求]\n                在使用ASCII码表的时候，不允许使用ASCII码值，而是直接使用字符本身，\n                因为字符在内存中保存的数值就是对应的ASCII码\n                65 <= x <= 90 不行！！！\n                'A' <= x <= 'Z' 貌似正确的写法\n                \n            如果说我想在字符串里面使用\"\"怎么办？\n            \"王自健说:\\\"fdafdsaf\\\"\"\n            \n        转义字符：\n            \\\" \\' \n            \\n 回车 相对于enter键\n            \\r 换行\n            \\t tab键 制表符\n            \\\\ 展示一个反斜杠\n            \\\\\\\\ 这里转义两个反斜杠\n            \n            '\\n' 字符常量\n            \n        面试题：2015年\n            请问'\\040' or '\\40'是什么？\n            在转义字符中数字使用的是ASCII码的八进制表示，所有在这里\\040 和 \\40是一样的，0可以在转义字符中\n            省略\n## 命名规范 标识符\n   \n    以下参考规范 AJCG (阿里巴巴技术团队规范)\n    \n    \n    邮箱注册：\n        126邮箱：\n            6~18个字符，可使用字母、数字、下划线，需以字母开头\n        \n    标识符能够使用的字符范围要求：\n        1. 标识符只能使用数字(0 ~ 9) 字母(A ~ Z a ~ z) 唯一可以使用的标点符号下划线(_)\n        2. 要求标识符必须用字母开头\n        3. 在标识符中严格区分大小写 And and Not same\n        4. 标识符没有严格的长度限制\n        5. 标识符要做到 见名知意 动宾结构\n            a b c d \n            imgTitle\n            imgbanner\n            imgGoods\n            imgLogo\n            studentInfo ageOfWorker getPingjiaByName\n            iPhone iPad iTouch iPod iWatch iTV iTunes\n        6. Java内部已经被征用的关键字不能用来做标识符 \n            public static void \n            int long double \n        \n        以上使用的是小驼峰命名法\n   ",[[1563103130652,["GJX@GJXAIOU",[[-1,18,"  "],[-1,63,"  "],[-1,110,"  "],[-1,149," "],[-1,152," "],[-1,185,"  "],[-1,230," "],[-1,233," "],[-1,279,"  "]],[20,303],[18,289]]],[1563103133653,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1563103133770,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1563103143875,["GJX@GJXAIOU",[[1,0,"# JavaDay02 :di"]],[0,0],[15,15]]],[1563103144370,["GJX@GJXAIOU",[[-1,13,"di"]],[15,15],[13,13]]],[1563103147991,["GJX@GJXAIOU",[[1,13,"Java第一行"]],[13,13],[20,20]]],[1563103148021,["GJX@GJXAIOU",[[1,17," "]],[20,20],[21,21]]],[1563103148742,["GJX@GJXAIOU",[[1,21,"代码"]],[21,21],[23,23]]],[1563103227173,["GJX@GJXAIOU",[[1,28,"yi "]],[28,28],[31,31]]],[1563103228250,["GJX@GJXAIOU",[[-1,28,"yi "]],[31,31],[28,28]]],[1563103229454,["GJX@GJXAIOU",[[1,28,"一 "]],[28,28],[29,29]]],[1563103229719,["GJX@GJXAIOU",[[1,29,"、"]],[29,29],[30,30]]],[1563103233828,["GJX@GJXAIOU",[[1,322,"二、"]],[322,322],[324,324]]],[1563103236420,["GJX@GJXAIOU",[[-1,339,"#"]],[340,340],[339,339]]],[1563103244203,["GJX@GJXAIOU",[[-1,677,"#"]],[678,678],[677,677]]],[1563103245651,["GJX@GJXAIOU",[[-1,850,"#"]],[851,851],[850,850]]],[1563103270720,["GJX@GJXAIOU",[[-1,364,"  "],[-1,394,"  "],[-1,460,"  "],[-1,506," "],[-1,513," "],[-1,560,"  "],[-1,631,"  "],[-1,660," "],[-1,667," "],[-1,669,"  "],[-1,703,"  "],[-1,758,"  "],[-1,819,"  "],[-1,838,"  "],[-1,865,"  "],[-1,902,"  "],[-1,954,"  "],[-1,990,"  "],[-1,996," "],[-1,1007," "],[-1,1041,"  "],[-1,1060,"  "],[-1,1124," "],[-1,1127," "],[-1,1129,"  "],[-1,1141,"  "],[-1,1163,"  "],[-1,1180,"  "],[-1,1250,"  "],[-1,1253,"  "],[-1,1276,"  "],[-1,1293,"  "],[-1,1359,"  "],[-1,1362," "],[-1,1369," "],[-1,1387,"  "],[-1,1393,"  "],[-1,1423," "],[-1,1434," "],[-1,1482,"  "],[-1,1501," "],[-1,1504," "],[-1,1521,"  "],[-1,1550,"  "],[-1,1581,"  "],[-1,1584,"  "],[-1,1653,"  "],[-1,1656,"  "],[-1,1684,"  "],[-1,1687," "],[-1,1690," "],[-1,1714,"  "],[-1,1754,"  "],[-1,1760," "],[-1,1767," "],[-1,1795,"  "],[-1,1813," "],[-1,1816," "],[-1,1831,"  "],[-1,1856,"  "],[-1,1873," "],[-1,1876," "],[-1,1892,"  "],[-1,1911,"  "],[-1,1920,"  "],[-1,1923," "],[-1,2036,"  "],[-1,2039,"  "],[-1,2060,"  "],[-1,2092,"  "],[-1,2104,"  "],[-1,2114,"  "],[-1,2146,"  "],[-1,2158," "],[-1,2163," "],[-1,2174,"  "],[-1,2195,"  "],[-1,2208," "],[-1,2214," "],[-1,2222,"  "],[-1,2237," "],[-1,2243," "],[-1,2251,"  "],[-1,2271,"  "],[-1,2283,"  "],[-1,2353,"  "],[-1,2413,"  "],[-1,2421,"  "],[-1,2435,"  "],[-1,2463," "],[-1,2470," "],[-1,2478,"  "],[-1,2489,"  "],[-1,2505," "],[-1,2512," "],[-1,2525,"  "],[-1,2548," "],[-1,2555," "],[-1,2576,"  "],[-1,2610,"  "],[-1,2613,"  "],[-1,2628,"  "],[-1,2657,"  "],[-1,2677,"  "],[-1,2688,"  "],[-1,2705," "],[-1,2712," "],[-1,2729,"  "],[-1,2759,"  "],[-1,2797," "],[-1,2804," "],[-1,2853,"  "],[-1,2856," "],[-1,2859," "],[-1,2901,"  "],[-1,2915,"  "],[-1,2937,"  "],[-1,2968,"  "],[-1,3005,"  "],[-1,3008,"  "],[-1,3015,"  "],[-1,3021," "],[-1,3028," "],[-1,3040,"  "],[-1,3060,"  "],[-1,3080," "],[-1,3091," "],[-1,3109,"  "],[-1,3151,"  "],[-1,3163,"  "],[-1,3178,"  "],[-1,3197,"  "],[-1,3232,"  "],[-1,3251,"  "],[-1,3263,"  "],[-1,3312,"  "],[-1,3315," "],[-1,3322," "],[-1,3357,"  "],[-1,3360,"  "],[-1,3385," "],[-1,3392," "],[-1,3409,"  "],[-1,3431," "],[-1,3436," "],[-1,3449,"  "],[-1,3460,"  "],[-1,3483,"  "],[-1,3532,"  "],[-1,3553,"  "],[-1,3562,"  "],[-1,3574,"  "],[-1,3588," "],[-1,3591," "],[-1,3605,"  "],[-1,3611,"  "],[-1,3629," "],[-1,3632," "],[-1,3634,"  "],[-1,3673,"  "],[-1,3676,"  "],[-1,3690,"  "],[-1,3721,"  "],[-1,3740,"  "],[-1,3773,"  "],[-1,3828,"  "],[-1,3831,"  "],[-1,3862," "],[-1,3873," "],[-1,3879,"  "],[-1,3924,"  "],[-1,3931," "],[-1,3942," "],[-1,3968,"  "],[-1,3975," "],[-1,3990," "],[-1,4011,"  "],[-1,4026,"  "],[-1,4037,"  "],[-1,4062,"  "],[-1,4110,"  "],[-1,4141,"  "],[-1,4182,"  "],[-1,4207," "],[-1,4218," "],[-1,4233,"  "],[-1,4287,"  "],[-1,4290," "],[-1,4305," "],[-1,4336,"  "],[-1,4339,"  "],[-1,4356,"  "],[-1,4425,"  "],[-1,4466,"  "],[-1,4488,"  "],[-1,4542,"  "],[-1,4545,"  "],[-1,4587,"  "],[-1,4609," "],[-1,4620," "],[-1,4622,"  "],[-1,4646,"  "],[-1,4655," "],[-1,4666," "],[-1,4693,"  "],[-1,4701," "],[-1,4712," "],[-1,4725,"  "],[-1,4758,"  "],[-1,4785,"  "],[-1,4788,"  "],[-1,4820,"  "],[-1,4823,"  "],[-1,4841,"  "],[-1,4875," "],[-1,4886," "],[-1,4952,"  "],[-1,4970,"  "],[-1,4973," "],[-1,4976," "],[-1,5004,"  "],[-1,5007," "],[-1,5010," "],[-1,5012,"  "],[-1,5028,"  "],[-1,5037,"  "],[-1,5077,"  "],[-1,5088,"  "],[-1,5106,"  "],[-1,5174,"  "],[-1,5192," "],[-1,5199," "],[-1,5233,"  "],[-1,5263,"  "],[-1,5285," "],[-1,5296," "],[-1,5306,"  "],[-1,5337,"  "],[-1,5349,"  "],[-1,5380,"  "],[-1,5390,"  "],[-1,5443,"  "],[-1,5503,"  "],[-1,5543,"  "],[-1,5565,"  "],[-1,5600,"  "],[-1,5603,"  "],[-1,5625,"  "]],[366,5627],[364,5213]]],[1563103286946,["GJX@GJXAIOU",[[-1,362,"  "],[-1,392,"  "],[-1,450," "],[-1,455," "],[-1,500,"  "],[-1,552," "],[-1,557," "],[-1,619,"  "],[-1,648," "],[-1,653," "],[-1,655,"  "],[-1,687," "],[-1,692," "],[-1,740,"  "],[-1,793,"  "],[-1,820,"  "],[-1,841,"  "],[-1,874,"  "],[-1,924,"  "],[-1,958,"  "],[-1,964,"  "]],[364,1004],[362,970]]],[1563103287226,["GJX@GJXAIOU",[[-1,360,"  "],[-1,390,"  "],[-1,448,"  "],[-1,494,"  "],[-1,546,"  "],[-1,601,"  "],[-1,638,"  "],[-1,671,"  "],[-1,724,"  "],[-1,775,"  "],[-1,794," "],[-1,797," "],[-1,817,"  "],[-1,846,"  "],[-1,894,"  "],[-1,926,"  "],[-1,932,"  "]],[362,970],[360,938]]],[1563103288780,["GJX@GJXAIOU",[[-1,358,"  "],[-1,388,"  "],[-1,442,"  "],[-1,488,"  "],[-1,536,"  "],[-1,591,"  "],[-1,624,"  "],[-1,657,"  "],[-1,706,"  "],[-1,755,"  "],[-1,774,"  "],[-1,795,"  "],[-1,820,"  "],[-1,866,"  "],[-1,896,"  "],[-1,902,"  "]],[360,938],[358,906]]],[1563103289362,["GJX@GJXAIOU",[[-1,583,"  "],[-1,794,"  "],[-1,838,"  "],[-1,872,"  "]],[358,906],[358,898]]],[1563103304499,["GJX@GJXAIOU",[[-1,759,"  "]],[761,761],[759,759]]],[1563103309484,["GJX@GJXAIOU",[[-1,907,"  "]],[909,909],[907,907]]],[1563103383094,["GJX@GJXAIOU",[[-1,1310,"#"]],[1311,1311],[1310,1310]]],[1563103390861,["GJX@GJXAIOU",[[-1,343," "]],[344,344],[343,343]]],[1563103392021,["GJX@GJXAIOU",[[1,343,"（）"]],[343,343],[345,345]]],[1563103394086,["GJX@GJXAIOU",[[1,344,"一"]],[344,344],[345,345]]],[1563103398135,["GJX@GJXAIOU",[[1,622,"（）"]],[622,622],[624,624]]],[1563103399598,["GJX@GJXAIOU",[[1,623,"二"]],[623,623],[624,624]]],[1563103401363,["GJX@GJXAIOU",[[-1,620,"  "]],[622,622],[620,620]]],[1563103404048,["GJX@GJXAIOU",[[1,762,"（）"]],[762,762],[764,764]]],[1563103406134,["GJX@GJXAIOU",[[1,763,"三"]],[763,763],[764,764]]],[1563103409207,["GJX@GJXAIOU",[[1,913,"（）"]],[913,913],[915,915]]],[1563103411439,["GJX@GJXAIOU",[[1,914,"四"]],[914,914],[915,915]]],[1563103414662,["GJX@GJXAIOU",[[1,1320," （）"]],[1320,1320],[1323,1323]]],[1563103416566,["GJX@GJXAIOU",[[1,1322,"五"]],[1322,1322],[1323,1323]]],[1563103423889,["GJX@GJXAIOU",[[1,1536,"三、"]],[1536,1536],[1538,1538]]],[1563103429029,["GJX@GJXAIOU",[[-1,1558,"#"]],[1559,1559],[1558,1558]]],[1563103498357,["GJX@GJXAIOU",[[-1,1699,"#"]],[1700,1700],[1699,1699]]],[1563103502758,["GJX@GJXAIOU",[[1,1559,"（）"]],[1559,1559],[1561,1561]]],[1563103504575,["GJX@GJXAIOU",[[1,1560,"一"]],[1560,1560],[1561,1561]]],[1563103507766,["GJX@GJXAIOU",[[1,1703,"（）"]],[1703,1703],[1705,1705]]],[1563103509485,["GJX@GJXAIOU",[[1,1704,"二"]],[1704,1704],[1705,1705]]],[1563103519794,["GJX@GJXAIOU",[[1,1894,"**"],[1,1902,"**"]],[1894,1902],[1894,1906]]],[1563103522998,["GJX@GJXAIOU",[[1,1897,"="]],[1897,1897],[1898,1898]]],[1563103524034,["GJX@GJXAIOU",[[-1,1896," ="]],[1898,1898],[1896,1896]]],[1563104188842,["GJX@GJXAIOU",[[1,2247,"**"],[1,2259,"**"]],[2247,2259],[2247,2263]]],[1563104202933,["GJX@GJXAIOU",[[1,2430,"**"],[1,2443,"**"]],[2430,2443],[2430,2447]]],[1563104209323,["GJX@GJXAIOU",[[-1,2618,"#"]],[2618,2618],[2617,2617]]],[1563104211093,["GJX@GJXAIOU",[[1,2615,"\n"]],[2615,2615],[2616,2616]]],[1563104211226,["GJX@GJXAIOU",[[1,2616,"\n"]],[2616,2616],[2617,2617]]],[1563104228208,["GJX@GJXAIOU",[[1,2624,"（）"]],[2624,2624],[2626,2626]]],[1563104230544,["GJX@GJXAIOU",[[1,2625,"三"]],[2625,2625],[2626,2626]]],[1563104232371,["GJX@GJXAIOU",[[-1,2622,"  "]],[2624,2624],[2622,2622]]],[1563104276835,["GJX@GJXAIOU",[[1,2702,"**"],[1,2724,"**"]],[2702,2724],[2702,2728]]],[1563104545186,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1563104569019,["GJX@GJXAIOU",[[1,0,"---\ntags : \n- java基础\n\nflag: blue\n---"]],[0,0],[36,36]]]],null,"GJX@GJXAIOU"],["0cc8786b-d3fe-4e2d-9519-9eb39c1fc233",1563284363127,"---\ntags : \n- java基础\n\nflag: blue\n---\n# JavaDay02 :Java 第一行代码\n\n## 一、 Java JDK目录结构\n  bin: binary 二进制 主要存放了Java的开发工具，主要关注一下几个工具：\n  java.exe javac.exe javadoc.exe javap.exe\n  db: Database 数据库 JDK自带了一个小型数据库Derby \n  include：存放Java程序运行需要调用的系统资源接口文件\n  jre：Java Runtime Environment Java程序的运行环境\n  lib: Library 库 核心类库 Java程序运行所需的文件，主要提供给JVM运行\n  src.zip: Java的源代码压缩包\n\n## 二、准备第一行Java代码\n###    （一）NotePad++前期准备\n1. 打开NotePad++ 工具 图标是一个小变色龙\n2. NotePad++ 菜单栏【设置】选项 -> 首选项 -> 自动完成 -> 反选所有，一个都不留\n3. 【设置】选择 -> 新建 -> 格式 选择 windows  编码选择 ANSI\n4. 在NotePad++ 新建文件 两种方式：第一种双击标签栏，第二种 ctrl + n\n5. 书写Java代码，要求Java文件的名字和Class之后的名字一致，可以用粘贴复制的方式来保证一致\n  保存Java文件，【必须】加上.java 文件后缀名\n\n\n###   （二）Java代码规范【通用的】 最基础的要求\n1. 在代码中成双成对标点符号，例如: {} [] () \"\" '' 先补齐一对，在写入内容\n2. 每一条语句之后，都要用分号 ; 结尾，区分是不是一条语句：就看这个语句之后有么有大括号\n3. 代码缩进格式请使用tab键\n\n###   （三）编译Java文件:\n编译Java文件要使用以下两个工具：\n  javac.exe 编译Java文件 生产.class文件(字节码文件)的工具\n  java.exe  运行.class文件(字节码文件)\n问题：\n  编译Java程序，需要非常长的路径支持，非常麻烦，很容易写错\n  \n####   （四）配置环境变量\n  打开我的电脑(Windows + E) -> 鼠标右键 选择属性 -> 左侧边栏的【高级偏好设置】 -> 【环境变量】\n  \n  修改系统变量:\n      新建：\n          变量名:JAVA_HOME:\n          变量值:JDK安装路径 例如: C:\\Program Files\\Java\\jdk1.8.0_131\\\n      \n      新建: \n          变量名：CLASS_PATH\n          变量值：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar\n      \n      找到Path环境变量\n      编辑：\n          在末尾添加一个分号(英文), 复制\n          %JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\n          \n###  （五）编译运行Java程序\n  找到自己的Java文件所在目录\n      这里要求不允许出现任何的中文\n      Eclipse MyEclipse IDEA\n      \n  javac 文件名.java 编译Java文件，如果没有提示任何东西，表示编译通过，可以生成对应的.class(字节码文件)\n  \n  java 文件名(类名) 运行Java程序\n  \n  在编译的过程中会报错，报警告，心存感激！！！\n  \n## 三、数据在内存中保存的方式 【掌握】\n### （一）存储的空间单位\n  字节：\n      计算机操作的最小单元 1byte => 8bit\n  1024byte -> 1KB\n  1024KB -> 1MB\n  1024MB -> 1GB  11G\n  1024GB -> 1TB \n  1024TB -> 1PB \n  \n### （二）数据如何保存\n  进制转换\n  \n进制| 基数范围 | 规则\n---|---|---\n十进制 | 0 ~ 9 | 逢10进1\n二进制 | 0 ~ 1 | 逢2进1\n八进制 | 0 ~ 7 | 逢8进1\n十六进制 | 0 ~ 9 A ~ F | 逢G进1\n  \n  计算机支持的最大进制是多少进制？\n      26个英文字母 + 10个数字  = 36进制\n       \n **十进制转二进制**\n   156(10) => 1001 1100(2)\n   156    0 \n    78    0  \n    39    1   \n    19    1   \n     9    1\n     4    0 \n     2    0\n     1    1    \n  辗转相除，余数倒序\n  1011 1101(2) = > 2 ^ 0 +  + 2 ^ 2 + 2 ^ 3 + 2 ^ 4 + 2 ^ 5 + 2 ^ 7\n               = 1 + 4 + 8 + 16 + 32 + 128\n               = 189\n  八进制数表示方式：\n      0771 0724    0886不对\n      要求用0开头\n      \n  **八进制和二进制之间的关系**：\n      111 7 000 0\n      八进制的一位对应二进制的三位\n      0771 => 111 111 001\n      0654 => 110 101 100\n      \n  十六进制数表示方式：\n      要求用0x 或者 0X 开头\n      0xABCDE  0X77bbaa\n      \n  **十六进制和二进制之间的关系**：\n      1111 15 0000 0 \n      十六进制的一位对应二进制的四位\n      0xABCDE => 1010 1011 1100 1101 1110\n      0X77bbaa => 0111 0111 1011 1011 1010 1010\n      \n  在计算机中所有的数据保存采用的方式都是二进制\n\n\n###  （三）原码 反码 补码 \n  正整数\n      118 => 0111 0110(2)\n      正整数保存数据的方式就是用该数对应的二进制数\n      **正整数 原码 反码 补码 是一样的 三码合一**\n      \n  \n  负整数\n      原码  反码  补码\n      -118 \n      原码：该负数对应正整数的二进制编码\n          118 => 0111 0110\n          最高位表示符号位用1表示\n                 1111 0110\n      \n      反码: 原码按位取反，符号位不变\n          1111 0110 => 1000 1001\n          \n      补码：反码 + 1\n          1000 1001 + 1 => 1000 1010\n          \n      1000 1010 是负数 -118在内存中保存的方式\n      \n      1000 1010 (-118)\n      0111 0110 (118)\n  -----------------\n    1 0000 0000\n    \n    负数在内存中保存的方式是采用补码的方式：\n    采用这方式是为了减少计算机的逻辑运算复杂度，可以直接使用补码来参与运算\n\n## 常量\n  π  3.141592653\n  G  9.8\n  C  光速\n  黄金比例  0.618\n  A B C D E 字母\n \n  明天天气9~13度  字符串 \n  \n  常量不要只是认为是数值 或者 数字，字符，语句其实也都是一个常量\n  \n  常量：\n      在程序运行过程中，不会发生改变的量，就是常量\n      整数: 10 20 30 -10\n      小数：3.1415926 0.618\n      真假: 对或者错，真或者假  T  F    true  false  boolean布尔类型\n     \n      字符：'a' 'b' 'c' 'D' '我'\n          [特征]\n              【单引号】包含的【单个元素】，称之为字符常量\n      字符串：\n          \"This is Java\"\n          [特征]\n              【双引号】包含的所有内容都是字符串常量\n      \n      98版仙剑奇侠传\n          BIG5 中文繁体字编码\n          GB2312 中国简体汉字和一少部分的少数民族文字\n          GBK 新国标 包含了所有的中国汉字和全部的少数民族文字\n          **UTF-8 万国码 **\n              Java HTML MySQL Oracle\n          ASCII码 最简单的编码\n              128个! 前32个是不可见字符 0 ~ 31\n              \n              剩下就是键盘上的数字 ，字母，标点符号\n          \n          [要求]\n              在使用ASCII码表的时候，不允许使用ASCII码值，而是直接使用字符本身，\n              因为字符在内存中保存的数值就是对应的ASCII码\n              65 <= x <= 90 不行！！！\n              'A' <= x <= 'Z' 貌似正确的写法\n              \n          如果说我想在字符串里面使用\"\"怎么办？\n          \"王自健说:\\\"fdafdsaf\\\"\"\n          \n      转义字符：\n          \\\" \\' \n          \\n 回车 相对于enter键\n          \\r 换行\n          \\t tab键 制表符\n          \\\\ 展示一个反斜杠\n          \\\\\\\\ 这里转义两个反斜杠\n          \n          '\\n' 字符常量\n          \n      面试题：2015年\n          请问'\\040' or '\\40'是什么？\n          在转义字符中数字使用的是ASCII码的八进制表示，所有在这里\\040 和 \\40是一样的，0可以在转义字符中\n          省略\n## 命名规范 标识符\n \n  以下参考规范 AJCG (阿里巴巴技术团队规范)\n  \n  \n  邮箱注册：\n      126邮箱：\n          6~18个字符，可使用字母、数字、下划线，需以字母开头\n      \n  标识符能够使用的字符范围要求：\n      1. 标识符只能使用数字(0 ~ 9) 字母(A ~ Z a ~ z) 唯一可以使用的标点符号下划线(_)\n      2. 要求标识符必须用字母开头\n      3. 在标识符中严格区分大小写 And and Not same\n      4. 标识符没有严格的长度限制\n      5. 标识符要做到 见名知意 动宾结构\n          a b c d \n          imgTitle\n          imgbanner\n          imgGoods\n          imgLogo\n          studentInfo ageOfWorker getPingjiaByName\n          iPhone iPad iTouch iPod iWatch iTV iTunes\n      6. Java内部已经被征用的关键字不能用来做标识符 \n          public static void \n          int long double \n      \n      以上使用的是小驼峰命名法\n ",[[1563284344937,["GJX@GJXAIOU",[[1,37,"\n@toc\n\n"]],[37,37],[44,44]]]],null,"GJX@GJXAIOU"]]}