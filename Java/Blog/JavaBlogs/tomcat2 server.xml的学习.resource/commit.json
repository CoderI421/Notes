{"compress":true,"commitItems":[["e853d2f5-e49e-4f5d-a62a-6ba760e68c15",1565675590199,"## tomcat学习|tomat中的server.xml的学习\n\n原创： 微笑的小小刀 [程序员学习大本营](javascript:void(0);) _今天_\n\n# 开头说两句\n\n小刀博客: https://www.lixiang.red\n小刀公众号: 程序员学习大本营\n\n# 学习背景\n\n学习还要啥背景,技多不压身,Come on\n上篇我们讲到了tomat的目录结构:\nhttps://www.lixiang.red/articles/2019/08/04/1564907616303.html\n\n# 学习准备\n\nserver.xml\nTomcat本质上是一个Servlet容器,Catalina就是Servlet容器,如上文我们提到的Coyote, Jasper,EL , Naming, Juli等等都是为了Catalina服务,而catalina的初始就是我们常用的server.xml,所以我们今天就从server.xml来进入catalina的学习\n\n# server.xml\n\n以前我们可能只改过connector中的端口,如果做部署的话,也会修改host下面的东东\n\n![](https://mmbiz.qpic.cn/mmbiz_png/8sl8s4eiazL5g1qTutliaBgialo5L7wz1Co9mfSgIQFFzAC26Xe5PFVg9WKHq6HOF9vhMMeLcYxdXliaQmY3ibtwxZA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n通过server.xml 我们可以看到这么一个层级关系\n\nserver包含service\n\nservice 包含 connector 和 engine\nengine 包含有realm 和 host\nhost 包含 context(默认的server.xml里面没有)但是我们在实际发布时会配置上这个\ncontext 包含wrapper\n\n# 组件基本解释\n\n*   Server\n    表示整个Servlet容器,Tomcat运行时,只有唯一一个Server实例\n\n*   Service\n    一个或多个connector的集合,这些connector 共享同一个container来处理其请求. 在同一个tomcat实例中可以包含多个service , service之间彼此独立.\n\n*   Connector\n    Tomcat链接器,用于临听转化socket请求,将socket请求转交给Container来处理\n\n*   Engine\n    Engine 是指整个的servlet引擎, Engine 是最高级的Container,虽然不是直接处理请求的位置,但是它是请求处理的入口\n\n*   Host\n    虚拟主机,与一个服务器的网络名有关,客户端可以用这个名称去连接服务器. 这个名称必须要在DNS上注册.\n\n*   Context\n    从字面上来就是上下文,放tomcat中,上下文就代表着一个完整的web应用\n\n*   Wrapper\n    Wrapper 作为一类容器,用于表示web 应用中定义的servlet\n\n# 最后说两句\n\nserver.xml 是我们能够与tomcat服务直接交互的地方,我们可以通过server.xml配置tomcat的绝大多数属性",[[1565675540036,["GJX@GJXAIOU",[[-1,34,"原创： 微笑的小小刀 [程序员学习大本营](javascript:void(0);) _今天_\n\n# 开头说两句\n\n小刀博客: https://www.lixiang.red\n小刀公众号: 程序员学习大本营\n\n# 学习背景\n\n学习还要啥背景,技多不压身,Come on\n上篇我们讲到了tomat的目录结构:\nhttps://www.lixiang.red/articles/2019/08/04/1564907616303.html\n"],[1,251,"="]],[34,34],[35,35]]],[1565675541490,["GJX@GJXAIOU",[[-1,34,"="]],[35,35],[34,34]]]],null,"GJX@GJXAIOU"]]}