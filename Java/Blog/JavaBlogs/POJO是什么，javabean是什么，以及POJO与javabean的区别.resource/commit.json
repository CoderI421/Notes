{"compress":true,"commitItems":[["9e7f8a63-d6d9-446a-8c45-5d0b05694ac1",1564533720327,"# POJO是什么，javabean是什么，以及POJO与javabean的区别\n\n2016年09月13日 16:46:48 [李学凯](https://me.csdn.net/qq_27093465) 阅读数 11870\n\n**POJO（**Plain Ordinary Java Object）简单的Java对象，实际就是普通JavaBeans，是为了避免和EJB混淆所创造的简称。\n使用POJO名称是为了避免和EJB混淆起来, 而且简称比较直接. 其中有一些属性及其getter setter方法的类,没有业务逻辑，有时可以作为VO(value -object)或dto(Data Transform Object)来使用.当然,如果你有一个简单的运算属性也是可以的,但不允许有业务方法,也不能携带有connection之类的方法。\n **自身特点**\nPOJO是Plain OrdinaryJava Object的缩写不错，但是它通指没有使用Entity Beans的普通java对象，可以把POJO作为支持业务逻辑的协助类。\nPOJO实质上可以理解为简单的实体类，顾名思义POJO类的作用是方便程序员使用数据库中的数据表，对于广大的程序员，可以很方便的将POJO类当做对象来进行使用，当然也是可以方便的调用其get,set方法。POJO类也给我们在struts框架中的配置带来了很大的方便。\n\n**实例**\nPOJO有一些private的参数作为对象的属性。然后针对每个参数定义了get和set方法作为访问的接口。例如：\n\n```\npublic class User {    private long id;    private String name;     public void setId(long id) {        this.id = id;    }     public void setName(String name) {        this.name = name;    }     public long getId() {        return id;    }     public String getName() {        return name;    }}\n```\n\nPOJO对象有时也被称为Data对象，大量应用于表现现实中的对象。如果项目中使用了Hibernate框架，有一个关联的xml文件，使对象与数据库中的表对应，对象的属性与表中的字段相对应。\n **POJO与javabean的区别**\nPOJO 和JavaBean是我们常见的两个关键字，一般容易混淆，POJO全称是Plain Ordinary Java Object / Pure Old Java Object，中文可以翻译成：普通Java类，具有一部分getter/setter方法的那种类就可以称作POJO，但是JavaBean则比 POJO复杂很多， Java Bean 是可复用的组件，对 Java Bean 并没有严格的规范，理论上讲，任何一个 Java 类都可以是一个 Bean 。但通常情况下，由于 Java Bean 是被容器所创建（如 Tomcat) 的，所以 Java Bean 应具有一个无参的构造器，另外，通常 Java Bean 还要实现 Serializable 接口用于实现 Bean 的持久性。 Java Bean 是不能被跨进程访问的。JavaBean是一种组件技术，就好像你做了一个扳子，而这个扳子会在很多地方被拿去用，这个扳子也提供多种功能(你可以拿这个扳子扳、锤、撬等等)，而这个扳子就是一个组件。一般在web应用程序中建立一个数据库的映射对象时，我们只能称它为POJO。POJO(Plain Old Java Object)这个名字用来强调它是一个普通java对象，而不是一个特殊的对象，其主要用来指代那些没有遵从特定的Java对象模型、约定或框架（如EJB）的Java对象。理想地讲，一个POJO是一个不受任何限制的Java对象（除了Java语言规范）。\n\n**错误的认识**\nPOJO是这样的一种“纯粹的”JavaBean，在它里面除了JavaBean规范的方法和属性没有别的东西，即private属性以及对这个属性方法的public的get和set方法。我们会发现这样的JavaBean很“单纯”，它只能装载数据，作为数据存储的载体，而不具有业务逻辑处理的能力。\n **真正的意思**\nPOJO = \"Plain Old Java Object\"，是MartinFowler等发明的一个术语，用来表示普通的Java对象，不是JavaBean, EntityBean 或者 SessionBean。POJO不担当任何特殊的角色，也不实现任何特殊的Java框架的接口如，EJB，JDBC等等。\n即POJO是一个简单的普通的Java对象，它不包含业务逻辑或持久逻辑等，但不是JavaBean、EntityBean等，不具有任何特殊角色和不继承或不实现任何其它Java框架的类或接口。\n\n下面是摘自Martin Fowler个人网站的一句话：\n\"We wondered why people were so against using regular objects in their systems and concluded that it was because simple objects lacked a fancy name. So we gave them one, and it's caught on very nicely.\"－－Martin Fowler\n我们疑惑为什么人们不喜欢在他们的系统中使用普通的对象，我们得到的结论是——普通的对象缺少一个响亮的名字，因此我们给它们起了一个，并且取得了很好的效果。——Martin Fowler",[[1564533718298,["GJX@GJXAIOU",[[-1,42,"2016年09月13日 16:46:48 [李学凯](https://me.csdn.net/qq_27093465) 阅读数 11870\n"]],[41,111],[41,41]]],[1564533730079,["GJX@GJXAIOU",[[1,41,"[原文链接地址](https://blog.csdn.net/qq_27093465/article/details/52527270)"]],[41,41],[109,109]]],[1564533735228,["GJX@GJXAIOU",[[-1,118,"**"]],[118,120],[118,118]]],[1564533737611,["GJX@GJXAIOU",[[1,117,"**"]],[117,117],[119,119]]],[1564533752325,["GJX@GJXAIOU",[[1,688,"\n"],[1,708,"\n"],[1,732,"\n"],[1,733,"\n"],[1,765,"\n"],[1,786,"\n"],[1,791,"\n"],[1,792,"\n"],[1,830,"\n"],[1,855,"\n"],[1,860,"\n"],[1,861,"\n"],[1,886,"\n"],[1,904,"\n"],[1,909,"\n"],[1,910,"\n"],[1,939,"\n"],[1,959,"\n"],[1,964,"\n"]],[669,965],[984,984]]],[1564533793787,["GJX@GJXAIOU",[[1,227,"**"],[1,258,"**"]],[227,258],[227,262]]],[1564533802236,["GJX@GJXAIOU",[[1,339,"**"],[1,348,"**"]],[339,348],[339,352]]],[1564533867243,["GJX@GJXAIOU",[[1,1212,"**"],[1,1253,"**"]],[1212,1253],[1212,1257]]],[1564533884035,["GJX@GJXAIOU",[[1,1392,"**"],[1,1413,"**"]],[1392,1413],[1392,1417]]],[1564534017051,["GJX@GJXAIOU",[[1,1424,"**"],[1,1454,"**"]],[1424,1454],[1424,1458]]],[1564534024139,["GJX@GJXAIOU",[[1,1473,"**"],[1,1494,"**"]],[1473,1494],[1473,1498]]],[1564534029077,["GJX@GJXAIOU",[[-1,1475," "]],[1475,1476],[1475,1475]]],[1564534106763,["GJX@GJXAIOU",[[1,2083,"**"],[1,2175,"**"]],[2083,2175],[2083,2179]]]],null,"GJX@GJXAIOU"]]}