{"compress":true,"commitItems":[["152bc035-4537-4850-b3db-a4223ad9a793",1564884259835,"## 19条效率至少提高3倍的MySQL技巧\n\n[程序IT圈](javascript:void(0);) _1周前_\n\n点击上方“程序IT圈”，选择“置顶公众号”\n\n每天早晨IT圈的推文，进来留言打卡\n\n![](https://mmbiz.qpic.cn/mmbiz_gif/TsibznqDiaaDkiaDC2iaOpAajibzgPoVP6pH5j4PrTB0EwyyG0uXZVzssV3iaCsfB8h0cRFwpc4QaJfweyPSial53wibBQ/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1)\n\n作者：喜欢拿铁的人\n\nhttps://zhuanlan.zhihu.com/p/49888088\n\n关于MySQL优化方法，网上有不少资料和方法，但是不少质量参差不齐，有些总结的不够到位，内容冗杂。偶尔看到知乎，发现了这篇文章，总结得很经典，希望对大家今后开发中有帮助 。今天的文章共提到19条常用的MySQL优化方法 。\n\n**1、EXPLAIN**\n\n做MySQL优化，我们要善用EXPLAIN查看SQL执行计划。\n\n下面来个简单的示例，标注（1、2、3、4、5）我们要重点关注的数据：\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISP88oXM6o8nia9ePaRRIIpHmxmDC9aKYQyKcLce2gHmibWdibFMqPUOf8jg/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n*   **type列****，**连接类型。一个好的SQL语句至少要达到range级别。杜绝出现all级别。\n\n*   **key列，**使用到的索引名。如果没有选择索引，值是NULL。可以采取强制索引方式。\n\n*   **key_len列，**索引长度。\n\n*   **rows列，**扫描行数。该值是个预估值。\n\n*   **extra列，**详细说明。注意，常见的不太友好的值，如下：Using filesort，Using temporary。\n\n**2、SQL语句中IN包含的值不应过多**\n\nMySQL对于IN做了相应的优化，即将IN中的常量全部存储在一个数组里面，而且这个数组是排好序的。但是如果数值较多，产生的消耗也是比较大的。再例如：select id from t where num in(1,2,3) 对于连续的数值，能用between就不要用in了；再或者使用连接来替换。\n\n**3、SELECT语句务必指明字段名称**\n\nSELECT*增加很多不必要的消耗（CPU、IO、内存、网络带宽）；增加了使用覆盖索引的可能性；当表结构发生改变时，前断也需要更新。所以要求直接在select后面接上字段名。\n\n**4、当只需要一条数据的时候，使用limit 1**\n\n这是为了使EXPLAIN中type列达到const类型\n\n**5、如果排序字段没有用到索引，就尽量少排序**\n\n**6、如果限制条件中其他字段没有索引，尽量少用or**\n\nor两边的字段中，如果有一个不是索引字段，而其他条件也不是索引字段，会造成该查询不走索引的情况。很多时候使用union all或者是union（必要的时候）的方式来代替“or”会得到更好的效果。\n\n**7、尽量用union all代替union**\n\nunion和union all的差异主要是前者需要将结果集合并后再进行唯一性过滤操作，这就会涉及到排序，增加大量的CPU运算，加大资源消耗及延迟。当然，union all的前提条件是两个结果集没有重复数据。\n\n**8、不使用ORDER BY RAND()**\n\nselect id from `dynamic` order by rand() limit 1000;\n\n上面的SQL语句，可优化为：\n\nselect id from `dynamic` t1 join (select rand() * (select max(id) from `dynamic`) as nid) t2 on t1.id > t2.nidlimit 1000;\n\n**9、区分in和exists、not in和not exists**\n\nselect * from 表A where id in (select id from 表B)\n\n上面SQL语句相当于\n\nselect * from 表A where exists(select * from 表B where 表B.id=表A.id)\n\n区分in和exists主要是造成了驱动顺序的改变（这是性能变化的关键），如果是exists，那么以外层表为驱动表，先被访问，如果是IN，那么先执行子查询。所以IN适合于外表大而内表小的情况；EXISTS适合于外表小而内表大的情况。\n\n关于not in和not exists，推荐使用not exists，不仅仅是效率问题，not in可能存在逻辑问题。如何高效的写出一个替代not exists的SQL语句？\n\n原SQL语句：\n\nselect colname … from A表 where a.id not in (select b.id from B表)\n\n高效的SQL语句：\n\nselect colname … from A表 Left join B表 on where a.id = b.id where b.id is null\n\n取出的结果集如下图表示，A表不在B表中的数据：\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPT9CIGTQ687SojVpDT1ahRgOKMJMJ3Ax33fFibn5RluXicXNEoYYdUZVQ/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n**10、使用合理的分页方式以提高分页的效率**\n\nselect id,name from product limit 866613, 20\n\n使用上述SQL语句做分页的时候，可能有人会发现，随着表数据量的增加，直接使用limit分页查询会越来越慢。\n\n优化的方法如下：可以取前一页的最大行数的id，然后根据这个最大的id来限制下一页的起点。比如此列中，上一页最大的id是866612。SQL可以采用如下的写法：\n\nselect id,name from product where id> 866612 limit 20\n\n**11、分段查询**\n\n在一些用户选择页面中，可能一些用户选择的时间范围过大，造成查询缓慢。主要的原因是扫描行数过多。这个时候可以通过程序，分段进行查询，循环遍历，将结果合并处理进行展示。\n\n如下图这个SQL语句，扫描的行数成百万级以上的时候就可以使用分段查询：\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPibib1icWgVtvNlib26CcpXFFhWCsrb3KQBlXhVD6378ryGDvpHpZA68MXg/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n**12、避免在where子句中对字段进行null值判断**\n\n对于null的判断会导致引擎放弃使用索引而进行全表扫描。\n\n**13、不建议使用%前缀模糊查询**\n\n例如LIKE“%name”或者LIKE“%name%”，这种查询会导致索引失效而进行全表扫描。但是可以使用LIKE “name%”。\n\n那如何查询%name%？\n\n如下图所示，虽然给secret字段添加了索引，但在explain结果并没有使用：\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPOuIDtgbvumoibpbicMS4xKtYhicZq4fPxQlYQAMmGFvUyICHgmQPkmKEQ/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n那么如何解决这个问题呢，答案：使用全文索引。\n\n在我们查询中经常会用到select id,fnum,fdst from dynamic_201606 where user_name like '%zhangsan%'; 。这样的语句，普通索引是无法满足查询需求的。庆幸的是在MySQL中，有全文索引来帮助我们。\n\n创建全文索引的SQL语法是：\n\nALTER TABLE `dynamic_201606` ADD FULLTEXT INDEX `idx_user_name` (`user_name`);\n\n使用全文索引的SQL语句是：\n\nselect id,fnum,fdst from dynamic_201606 where match(user_name) against('zhangsan' in boolean mode);\n\n**注意：**在需要创建全文索引之前，请联系DBA确定能否创建。同时需要注意的是查询语句的写法与普通索引的区别。\n\n**14、避免在where子句中对字段进行表达式操作**\n\n比如：\n\nselect user_id,user_project from user_base where age*2=36;\n\n中对字段就行了算术运算，这会造成引擎放弃使用索引，建议改成：\n\nselect user_id,user_project from user_base where age=36/2;\n\n**15、避免隐式类型转换**\n\nwhere子句中出现column字段的类型和传入的参数类型不一致的时候发生的类型转换，建议先确定where中的参数类型。\n\n**16、对于联合索引来说，要遵守最左前缀法则**\n\n举列来说索引含有字段id、name、school，可以直接用id字段，也可以id、name这样的顺序，但是name;school都无法使用这个索引。所以在创建联合索引的时候一定要注意索引字段顺序，常用的查询字段放在最前面。\n\n**17、必要时可以使用force index来强制查询走某个索引**\n\n有的时候MySQL优化器采取它认为合适的索引来检索SQL语句，但是可能它所采用的索引并不是我们想要的。这时就可以采用forceindex来强制优化器使用我们制定的索引。\n\n**18、注意范围查询语句**\n\n对于联合索引来说，如果存在范围查询，比如between、>、<等条件时，会造成后面的索引字段失效。\n\n**19、关于JOIN优化**\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPcKk5H7XnmAaZzuhtOJ4ODpsuBhmBNCic1aF8t9nITOxDRYsRa3A10ew/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\nLEFT JOIN A表为驱动表，INNER JOIN MySQL会自动找出那个数据少的表作用驱动表，RIGHT JOIN B表为驱动表。\n\n**注意：**\n\n**1）MySQL中没有full join，可以用以下方式来解决：**\n\nselect * from A left join B on B.name = A.namewhere B.name is nullunion allselect * from B;\n\n**2）尽量使用inner join，避免left join：**\n\n参与联合查询的表至少为2张表，一般都存在大小之分。如果连接方式是inner join，在没有其他过滤条件的情况下MySQL会自动选择小表作为驱动表，但是left join在驱动表的选择上遵循的是左边驱动右边的原则，即left join左边的表名为驱动表。\n\n**3）合理利用索引：**\n\n被驱动表的索引字段作为on的限制字段。\n\n**4）利用小表去驱动大表：**\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPbiag8y4LggbC1B0VSIAFyoUWeOPzb4dsjdhlz7NAV7zSyFhmtF77xyw/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n从原理图能够直观的看出如果能够减少驱动表的话，减少嵌套循环中的循环次数，以减少 IO总量及CPU运算的次数。\n\n**5）巧用STRAIGHT_JOIN：**\n\ninner join是由MySQL选择驱动表，但是有些特殊情况需要选择另个表作为驱动表，比如有group by、order by等「Using filesort」、「Using temporary」时。STRAIGHT_JOIN来强制连接顺序，在STRAIGHT_JOIN左边的表名就是驱动表，右边则是被驱动表。在使用STRAIGHT_JOIN有个前提条件是该查询是内连接，也就是inner join。其他链接不推荐使用STRAIGHT_JOIN，否则可能造成查询结果不准确。\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPY46CzOXhvOrlSuFKghXic9EnRot4jD3ibzIFS3DQNcuZOojibXoJcXqYw/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)",[[1564884211123,["GJX@GJXAIOU",[[-1,24,"[程序IT圈](javascript:void(0);) _1周前_\n\n点击上方“程序IT圈”，选择“置顶公众号”\n\n每天早晨IT圈的推文，进来留言打卡\n"]],[24,101],[24,24]]],[1564884214542,["GJX@GJXAIOU",[[-1,197,")"]],[198,198],[197,197]]],[1564884217915,["GJX@GJXAIOU",[[-1,25,"![](https://mmbiz.qpic.cn/mmbiz_gif/TsibznqDiaaDkiaDC2iaOpAajibzgPoVP6pH5j4PrTB0EwyyG0uXZVzssV3iaCsfB8h0cRFwpc4QaJfweyPSial53wibBQ/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1\n\n作者：喜欢拿铁的人\n\nhttps://zhuanlan.zhihu.com/p/49888088"]],[25,247],[25,25]]],[1564884218243,["GJX@GJXAIOU",[[-1,26,"\n"]],[25,25],[24,24]]],[1564884219219,["GJX@GJXAIOU",[[-1,25,"\n"]],[25,25],[24,24]]],[1564884219612,["GJX@GJXAIOU",[[-1,24,"\n"]],[24,24],[23,23]]],[1564884229596,["GJX@GJXAIOU",[[-1,414,"**"]],[415,415],[413,413]]],[1564884231556,["GJX@GJXAIOU",[[-1,415,"**"]],[417,417],[415,415]]],[1564884234068,["GJX@GJXAIOU",[[-1,464,"，"]],[465,465],[464,464]]],[1564884241469,["GJX@GJXAIOU",[[1,466,","]],[466,466],[467,467]]],[1564884245269,["GJX@GJXAIOU",[[1,521," "]],[521,521],[522,522]]],[1564884246613,["GJX@GJXAIOU",[[1,543," "]],[543,543],[544,544]]],[1564884248957,["GJX@GJXAIOU",[[1,574," "]],[574,574],[575,575]]],[1564884270682,["GJX@GJXAIOU",[[-1,221,"![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISP88oXM6o8nia9ePaRRIIpHmxmDC9aKYQyKcLce2gHmibWdibFMqPUOf8jg/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[221,399],[221,221]]],[1564884278452,["GJX@GJXAIOU",[[1,221,"![示例]($resource/%E7%A4%BA%E4%BE%8B.jpg)"]],[221,221],[261,261]]],[1564884300045,["GJX@GJXAIOU",[[1,1148,"`"]],[1148,1148],[1149,1149]]],[1564884319565,["GJX@GJXAIOU",[[1,1201,"``"]],[1201,1201],[1203,1203]]],[1564884323579,["GJX@GJXAIOU",[[-1,1202,"`"]],[1202,1202],[1201,1201]]],[1564884328875,["GJX@GJXAIOU",[[-1,1172,"`"]],[1173,1173],[1172,1172]]],[1564884330339,["GJX@GJXAIOU",[[-1,1164,"`"]],[1165,1165],[1164,1164]]],[1564884337515,["GJX@GJXAIOU",[[-1,1233,"`"]],[1234,1234],[1233,1233]]],[1564884338262,["GJX@GJXAIOU",[[-1,1296,"`"]],[1297,1297],[1296,1296]]],[1564884339547,["GJX@GJXAIOU",[[-1,1240,"`"]],[1241,1241],[1240,1240]]],[1564884341171,["GJX@GJXAIOU",[[-1,1287,"`"]],[1288,1288],[1287,1287]]],[1564884343485,["GJX@GJXAIOU",[[1,1335,"`"]],[1335,1335],[1336,1336]]],[1564884345071,["GJX@GJXAIOU",[[1,1218,"`"]],[1218,1218],[1219,1219]]],[1564884346364,["GJX@GJXAIOU",[[-1,1217,"\n"]],[1217,1217],[1216,1216]]],[1564884349133,["GJX@GJXAIOU",[[-1,1147,"\n"]],[1147,1147],[1146,1146]]],[1564884353478,["GJX@GJXAIOU",[[1,1374,"`"]],[1374,1374],[1375,1375]]],[1564884354501,["GJX@GJXAIOU",[[1,1423,"`"]],[1423,1423],[1424,1424]]],[1564884357661,["GJX@GJXAIOU",[[1,1438,"`"]],[1438,1438],[1439,1439]]],[1564884358732,["GJX@GJXAIOU",[[1,1504,"`"]],[1504,1504],[1505,1505]]],[1564884371484,["GJX@GJXAIOU",[[1,1722,"`"]],[1722,1722],[1723,1723]]],[1564884372469,["GJX@GJXAIOU",[[1,1787,"`"]],[1787,1787],[1788,1788]]],[1564884373725,["GJX@GJXAIOU",[[1,1801,"`"]],[1801,1801],[1802,1802]]],[1564884375949,["GJX@GJXAIOU",[[1,1879,"`"]],[1879,1879],[1880,1880]]],[1564884400714,["GJX@GJXAIOU",[[-1,1907,"![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPT9CIGTQ687SojVpDT1ahRgOKMJMJ3Ax33fFibn5RluXicXNEoYYdUZVQ/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n"]],[1906,2084],[1906,1906]]],[1564884408542,["GJX@GJXAIOU",[[1,1906,"![取出结果集]($resource/%E5%8F%96%E5%87%BA%E7%BB%93%E6%9E%9C%E9%9B%86.jpg)"]],[1906,1906],[1976,1976]]],[1564884414091,["GJX@GJXAIOU",[[1,2003,"`"]],[2003,2003],[2004,2004]]],[1564884415150,["GJX@GJXAIOU",[[1,2048,"`"]],[2048,2048],[2049,2049]]],[1564884418541,["GJX@GJXAIOU",[[1,2187,"`"]],[2187,2187],[2188,2188]]],[1564884419591,["GJX@GJXAIOU",[[1,2241,"`"]],[2241,2241],[2242,2242]]],[1564884421650,["GJX@GJXAIOU",[[-1,2186,"\n"]],[2186,2186],[2185,2185]]],[1564884424149,["GJX@GJXAIOU",[[-1,2050,"\n"]],[2050,2050],[2049,2049]]],[1564884445634,["GJX@GJXAIOU",[[-1,2376,"![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPibib1icWgVtvNlib26CcpXFFhWCsrb3KQBlXhVD6378ryGDvpHpZA68MXg/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n"]],[2375,2555],[2375,2375]]],[1564884451957,["GJX@GJXAIOU",[[1,2375,"![分段查询]($resource/%E5%88%86%E6%AE%B5%E6%9F%A5%E8%AF%A2.jpg)"]],[2375,2375],[2435,2435]]],[1564884480483,["GJX@GJXAIOU",[[-1,2643,"![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPOuIDtgbvumoibpbicMS4xKtYhicZq4fPxQlYQAMmGFvUyICHgmQPkmKEQ/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[2643,2821],[2643,2643]]],[1564884489025,["GJX@GJXAIOU",[[1,2643,"![结果]($resource/%E7%BB%93%E6%9E%9C.jpg)"]],[2643,2643],[2683,2683]]],[1564884496150,["GJX@GJXAIOU",[[1,2857,"`"]],[2857,2857],[2858,2858]]],[1564884497204,["GJX@GJXAIOU",[[1,2936,"`"]],[2936,2936],[2937,2937]]],[1564884498938,["GJX@GJXAIOU",[[-1,2870,"`"]],[2871,2871],[2870,2870]]],[1564884502012,["GJX@GJXAIOU",[[1,2885,"`"]],[2885,2885],[2886,2886]]],[1564884503290,["GJX@GJXAIOU",[[-1,2884,"``"]],[2886,2886],[2884,2884]]],[1564884506379,["GJX@GJXAIOU",[[-1,2904,"`"]],[2905,2905],[2904,2904]]],[1564884508548,["GJX@GJXAIOU",[[1,2918,"`"]],[2918,2918],[2919,2919]]],[1564884509642,["GJX@GJXAIOU",[[-1,2917,"``"]],[2919,2919],[2917,2917]]],[1564884512618,["GJX@GJXAIOU",[[-1,2929,"`"]],[2930,2930],[2929,2929]]],[1564884515379,["GJX@GJXAIOU",[[-1,2919,"`"]],[2920,2920],[2919,2919]]],[1564884521564,["GJX@GJXAIOU",[[1,2949,"`"]],[2949,2949],[2950,2950]]],[1564884522462,["GJX@GJXAIOU",[[1,3049,"`"]],[3049,3049],[3050,3050]]],[1564884530212,["GJX@GJXAIOU",[[1,3145,"`"]],[3145,3145],[3146,3146]]],[1564884531204,["GJX@GJXAIOU",[[1,3204,"`"]],[3204,3204],[3205,3205]]],[1564884531973,["GJX@GJXAIOU",[[1,3297,"`"]],[3297,3297],[3298,3298]]],[1564884533628,["GJX@GJXAIOU",[[1,3239,"`"]],[3239,3239],[3240,3240]]],[1564884565843,["GJX@GJXAIOU",[[-1,3728,"![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPcKk5H7XnmAaZzuhtOJ4ODpsuBhmBNCic1aF8t9nITOxDRYsRa3A10ew/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[3728,3904],[3728,3728]]],[1564884573920,["GJX@GJXAIOU",[[1,3728,"![join优化]($resource/join%E4%BC%98%E5%8C%96.jpg)"]],[3728,3728],[3776,3776]]],[1564884582839,["GJX@GJXAIOU",[[1,3985,"`"]],[3985,3985],[3986,3986]]],[1564884584174,["GJX@GJXAIOU",[[1,3894,"`"]],[3894,3894],[3895,3895]]],[1564884619188,["GJX@GJXAIOU",[[-1,4207,"![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPbiag8y4LggbC1B0VSIAFyoUWeOPzb4dsjdhlz7NAV7zSyFhmtF77xyw/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n"]],[4206,4383],[4206,4206]]],[1564884627215,["GJX@GJXAIOU",[[1,4206,"![利用小表驱动大表]($resource/%E5%88%A9%E7%94%A8%E5%B0%8F%E8%A1%A8%E9%A9%B1%E5%8A%A8%E5%A4%A7%E8%A1%A8.jpg)"]],[4206,4206],[4306,4306]]],[1564884651203,["GJX@GJXAIOU",[[-1,4627,"![](https://mmbiz.qpic.cn/mmbiz_jpg/tibrg3AoIJTsfu3nd3L2RGjl6VO7yxISPY46CzOXhvOrlSuFKghXic9EnRot4jD3ibzIFS3DQNcuZOojibXoJcXqYw/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"],[1,4805,"\n"]],[4627,4805],[4627,4627]]],[1564884665311,["GJX@GJXAIOU",[[1,4627,"![查询语句]($resource/%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5.jpg)\n"]],[4627,4627],[4687,4687]]],[1564884675119,["GJX@GJXAIOU",[[1,4488,"`"]],[4488,4488],[4489,4489]]],[1564884676909,["GJX@GJXAIOU",[[1,4502,"`"]],[4502,4502],[4503,4503]]],[1564884678797,["GJX@GJXAIOU",[[1,4512,"`"]],[4512,4512],[4513,4513]]],[1564884680173,["GJX@GJXAIOU",[[1,4526,"`"]],[4526,4526],[4527,4527]]],[1564884682582,["GJX@GJXAIOU",[[1,4550,"`"]],[4550,4550],[4551,4551]]],[1564884683791,["GJX@GJXAIOU",[[1,4564,"`"]],[4564,4564],[4565,4565]]]],null,"GJX@GJXAIOU"]]}